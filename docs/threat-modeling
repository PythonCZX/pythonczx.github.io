<!DOCTYPE html><html lang="en" data-theme="classic"><head><title>The Enchiridion of Impetus Exemplar</title><link rel="shortcut icon" href="/assets/img/favicon.ico"><link rel="alternate" type="application/rss+xml" title="All Content Feed" href="https://shellsharks.com/feeds/all-feed.xml"><link rel="alternate" type="application/rss+xml" title="Post Feed" href="https://shellsharks.com/feeds/feed.xml"><link rel="alternate" type="application/rss+xml" title="Scrolls Feed" href="https://shellsharks.com/feeds/scroll-feed.xml"><link rel="alternate" type="application/rss+xml" title="Infosec Feed" href="https://shellsharks.com/feeds/infosec-feed.xml"><link rel="alternate" type="application/rss+xml" title="Notes Feed" href="https://shellsharks.com/feeds/note-feed.xml"><link rel="alternate" type="application/rss+xml" title="Devlogs Feed" href="https://shellsharks.com/feeds/devlog-feed.xml"><link rel="alternate" type="application/rss+xml" title="Links Feed" href="https://shellsharks.com/feeds/link-feed.xml"><link rel="alternate" type="application/rss+xml" title="Captains Log Feed" href="https://shellsharks.com/feeds/log-feed.xml"><link rel="alternate" type="application/rss+xml" title="Social Web Feed" href="https://shellsharks.com/feeds/socialweb-feed.xml"><link rel="alternate" type="application/rss+xml" title="Life Feed" href="https://shellsharks.com/feeds/life-feed.xml"><link rel="blogroll" type="text/xml" href="https://shellsharks.com/assets/rsrc/shellsharks-blogroll.opml"><link type="text/plain" rel="author" href="https://shellsharks.com/humans.txt" /><link rel="canonical" href="https://shellsharks.com/threat-modeling"><link rel="apple-touch-icon" href="/assets/img/apple-touch-icon.png"><link rel="indieweb" href="/indieweb.txt" /><link href="https://github.com/shellsharks" rel="me"> <!--IndieAuth Provider--><link rel="authorization_endpoint" href="https://indieauth.com/auth"> <!--IndieAuth--><link rel="token_endpoint" href="https://tokens.indieauth.com/token"> <!--IndieAuth token endpoint--> <!--needed for button css--><link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous"><link href='/assets/css/style.css' rel='stylesheet' type='text/css'><link href="/assets/css/syntax.css" rel="stylesheet" ><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/regular/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/fill/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/bold/style.css" /><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1"><meta name="author" content="Michael Sass" /><meta name="description" content="A vade mecum for all things Threat Modeling." /><meta name="keywords" content="The Enchiridion of Impetus Exemplar, shellsharks, infosec, threatmodeling, technical, bestof" /><meta content="shellsharks" property="og:site_name" /><meta name="fediverse:creator" content="@shellsharks@shellsharks.social" /><meta name="robots" content="noai, noimageai, noml" /> <!--https://noml.info--> <script> const currentThemeX = localStorage.getItem('theme') ? localStorage.getItem('theme') : null; if (currentThemeX) { document.documentElement.setAttribute('data-theme', currentThemeX); } else if (matchMedia('(prefers-color-scheme: light)').matches) { localStorage.setItem('theme', "light"); } else if (matchMedia('(prefers-color-scheme: dark)').matches) { localStorage.setItem('theme', "classic"); } else { localStorage.setItem('theme', "classic"); } </script><meta content="The Enchiridion of Impetus Exemplar" property="og:title"><meta content="article" property="og:type"><meta content="A vade mecum for all things Threat Modeling." property="og:description"><meta content="https://shellsharks.com/threat-modeling" property="og:url"><meta content="2022-07-30T03:50:00-04:00" property="article:published_time"><meta content="https://shellsharks.com/about/" property="article:author"><meta content="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/id3.png" property="og:image"><meta content="infosec" property="article:section"><meta content="infosec" property="article:tag"><meta content="threatmodeling" property="article:tag"><meta content="technical" property="article:tag"><meta content="bestof" property="article:tag"> <script src="/assets/js/finrand.js"></script><style> @media (max-width: 2048px) { main { width:66%; } } @media (max-width: 1800px) { main { max-width:800px; width:95%; } } @media (max-width: 768px) { main { width:95%; } }</style><body><div class="container"><heading class="container_item"><style> /* * Made by Erik Terwan * 24th of November 2015 * MIT License * * * If you are thinking of using this in * production code, beware of the browser * prefixes. */ #menuToggle { display: block; position: relative; z-index: 1; -webkit-user-select: none; user-select: none; } #menuToggle a { text-decoration: none; transition: color 0.3s ease; color: var(--contrast-font-color); } .menu_section { color: var(--light-font-color); font-weight: 900; } .menu_section:nth-of-type(n+2) { margin-top:20px; } #menuToggle a:hover { color: var(--link-hover-color); } #menuToggle input { display: block; width: 40px; height: 32px; position: absolute; /*top: -7px;*/ /*left: -5px;*/ cursor: pointer; opacity: 0; /* hide this */ z-index: 2; /* and place it over the hamburger */ -webkit-touch-callout: none; } /* * Just a quick hamburger */ #menuToggle span { display: block; width: 27px; height: 3px; margin-bottom: 4px; position: relative; margin-top:4px; background: var(--font-color); border-radius: 3px; z-index: 1; transform-origin: 4px 0px; transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0), background 0.5s cubic-bezier(0.77,0.2,0.05,1.0), opacity 0.55s ease; } #menuToggle span:first-child { transform-origin: 0% 0%; } #menuToggle span:nth-last-child(2) { transform-origin: 0% 100%; } /* * Transform all the slices of hamburger * into a crossmark. */ #menuToggle input:checked ~ span { opacity: 1; transform: rotate(45deg) translate(-2px, -1px); background: var(--link-hover-color); } /* * But let's hide the middle one. */ #menuToggle input:checked ~ span:nth-last-child(3) { opacity: 0; transform: rotate(0deg) scale(0.2, 0.2); } /* * Ohyeah and the last one should go the other direction */ #menuToggle input:checked ~ span:nth-last-child(2) { transform: rotate(-45deg) translate(0, -1px); } /* * Make this absolute positioned * at the top left of the screen */ #menu { position: absolute; left:-10px; width: 200px; /*fit-content;*/ padding: 10px; margin-top:10px; /*display:none;*/ background: var(--light-background-color); color:var(--font-color); list-style-type: none; -webkit-font-smoothing: antialiased; max-height: calc(80vh); overflow:auto; overscroll-behavior: contain; border-radius: 5px; /* to stop flickering of text in safari */ } /* * And let's slide it in from the left */ #menuToggle input:checked ~ ul { display:block; } .hidden { display: none; }</style><div role="navigation" id="hamburger"><div id="menuToggle"> <input type="checkbox" /> <span></span> <span></span> <span></span><ul id="menu" class="hidden"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a><li><img src="/assets/img/avatar.png" height="50" style="position: relative; display: block; margin:auto; margin-top:20px; margin-bottom:20px;" /></ul></div></div><!-- window.onload = function() { var menuButton = document.getElementById('menuToggle'); var menu = document.getElementById('menu'); menu.classList.add('hidden'); document.getElementById("menuToggle").children[0].checked = false; } --> <script> const menuButton = document.getElementById('menuToggle'); const menu = document.getElementById('menu'); var links = menu.querySelectorAll('a'); menuButton.addEventListener('click', () => { if (!menu.contains(event.target)) { menu.classList.toggle('hidden'); } }); document.addEventListener('click', (event) => { if (!menu.contains(event.target) && !menuButton.contains(event.target)) { menu.classList.add('hidden'); if (document.getElementById("menuToggle").children[0].checked) { document.getElementById("menuToggle").children[0].checked = !document.getElementById("menuToggle").children[0].checked; } } }); links.forEach(function(link) { link.addEventListener('click', function(event) { document.querySelector("#hamburger").click(); }); }); </script> <img id="title_image" src="/assets/img/shellsharks.gif" alt="Shellsharks>_" onclick='window.open("/","_self")'> <span style="float:right;"><a href="/search"><i class="ph-bold ph-magnifying-glass" style="color:var(--font-color); font-size:1.6em; top:-2px;"></i></a></span> </heading><nav class="container_item"><ul id="nav_menu" style="list-style-type:none;padding-left: 10px;"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a></ul></nav><main class="container_item"><div class="pageheader"></div><article class="post h-entry"><header class="post-header"><h1 class="post-title p-name" id="title" style="display:inline;">The Enchiridion of Impetus Exemplar</h1><span style="color:#CA3342;font-size:4em;line-height: 20px;">.</span></header><div class="primarycolor" style="font-style:italic; font-size:150%; font-weight:15px; position:relative;">A Threat Modeling Field Guide</div><!--<div id="postinfo"> <span class="time"><i class="ph ph-note-pencil"></i> by <span class="hov p-author h-card">Mike Sass</span> <a href="/about" rel="author"><img class="u-photo" src="https://shellsharks-images.s3.amazonaws.com/surfshark.png" style="display:inline; height:1em;" /></a></span><br/> <br/> <span class="categories"> &raquo; infosec, blog </span></div>--><div class="post-content e-content" style="margin-top: 30px;"><p><em>A vade mecum for all things Threat Modeling.</em><h1 id="jump-to-section">Jump to Section</h1><ul><li><a href="#intro-to-threat-modeling">Intro to Threat Modeling</a><li><a href="#methodologies">Methodologies</a><ul><li><a href="#microsoft-threat-modeling">Microsoft Threat Modeling</a><li><a href="#pasta">PASTA</a><li><a href="#octave">OCTAVE</a><li><a href="#trike">Trike</a><li><a href="#linddun">LINDDUN</a><li><a href="#vast">VAST</a><li><a href="#data-centric-system-threat-modeling-nist-sp-800-154">NIST SP 800-154</a><li><a href="#owasp-threat-modeling-process">OWASP TMP</a><li><a href="#tara">TARA</a><li><a href="#iddilatc">IDDIL/ATC</a><li><a href="#hybrid-threat-modeling-method-htmm">hTMM</a><li><a href="#quantitative-threat-modeling-qtmm">QTMM</a><li><a href="#id3">ID<sup>3</sup></a></ul><li><a href="#future-methodologies">Future Methodologies</a><li>Auxiliary Tools<ul><li><a href="#control-frameworks">Control Frameworks</a><li><a href="#attack-libraries">Attack Libraries</a><li><a href="#vulnerability-catalogs">Vulnerability Catalogs</a><li><a href="#risk-assessment-models">Risk Assessment Models</a><li><a href="#stride">STRIDE</a><li><a href="#dread">DREAD</a><li><a href="#compliance-frameworks">Compliance Frameworks</a><li><a href="#cyber-threat-intelligence-cti">Cyber Threat Intelligence</a> (CTI)<li><a href="#attack-trees">Attack Trees</a><li><a href="#security-cards">Security Cards</a><li><a href="#persona-non-grata-png">Persona non Grata</a> (PnG)</ul><li><a href="#modeling-exercise">Modeling Exercise(s)</a> <em>coming soon!</em><li><a href="#conclusion">Conclusion</a><li><a href="#appendices">Appendices</a><ul><li><a href="#data-flow-diagram">Data Flow Diagram</a><li><a href="#threat-modeling-methodology-matrix-tm3">Threat Modeling Methodology Matrix</a> <em>coming soon!</em><li><a href="#tooling">Tooling</a><li><a href="#terminology">Terminology</a></ul><li><a href="#references">References</a></ul><hr /><h1 id="intro-to-threat-modeling">Intro to Threat Modeling</h1><p><strong>Threat Modeling</strong> can be defined as <em>the process of building and analyzing representations of a system to highlight concerns about security characteristics.</em> <strong><sup><a href="#references">1</a></sup></strong><p>Threat Modeling is a <em>pro-active</em> and <em>iterative</em> approach for identifying security issues and reducing risk. The output of a threat modeling exercise is a list of <strong>threats</strong> - <em>or even better</em> - <strong>risks</strong>, that further inform decisions in the progressive lifecycle of a system. This process can be performed prior to any code written or infrastructure deployed. This makes it very efficient in identifying potential threats, <strong>vulnerabilities</strong> and risks.<h2 id="simplified-threat-modeling">Simplified Threat Modeling</h2><p>There is a <a href="#methodologies">multitude</a> of <a href="#intro-to-threat-modeling">threat modeling</a> methodologies, each of which have both individual uniqueness as well as mutual commonalities (<strong><a href="#threat-modeling-methodology-matrix-tm3">Comparison Matrix</a></strong>). Fundamentally, each of these frameworks share the following <strong>two</strong> properties.<ol><li><p><strong>Document Scope</strong> : Scope the to-be-modeled system by inventorying the component architecture and diagramming the composite entities + the <strong>data flows</strong> that connect them. This should yield a list of identifiable <strong>assets</strong> &amp; components, commonly visualized as a <strong><a href="#data-flow-diagram">data flow diagram</a></strong> (<strong>DFD</strong>).<li><p><strong>Enumerate Threats</strong> : Leveraging what we know about the system (i.e. list of technology components, applicable <strong><a href="#control-frameworks">security controls</a></strong>, <a href="#cyber-threat-intelligence-cti">knowledge of threat actors</a>, potential <a href="#vulnerability-catalogs">vulnerabilities</a>), generate a list of <em>potential</em> threats.</ol><h3 id="the-threat-modeling-manifesto">The Threat Modeling Manifesto</h3><p>The <a href="#simplified-threat-modeling">steps above</a> represent an extreme distillation of the <a href="#methodologies">variety</a> of threat modeling methodologies that exist today. The esteemed <strong><a href="https://www.threatmodelingmanifesto.org">Threat Modeling Manifesto</a></strong> provides another example of a <em>generic</em> <a href="#intro-to-threat-modeling">threat modeling</a> process. This manifesto was created by a collective of threat modeling, security and privacy <a href="https://www.threatmodelingmanifesto.org#authors">professionals</a>. The steps they espouse are enumerated below. <strong><sup><a href="#references">1</a></sup></strong><ol><li><em>What are we working on</em>?<li><em>What can go wrong</em>?<li><em>What are we going to do about it</em>?<li><em>Did we do a good enough job</em>?</ol><p>What‚Äôs peculiar about the <em>Threat Modeling Manifesto</em> is the delta between their definition of threat modeling and the stated ‚Äú<em>four key questions</em>‚Äù of threat modeling. To explain, they define threat modeling as‚Ä¶<blockquote><p>‚Äú<em>Threat modeling is analyzing representations of a system to highlight concerns about security and privacy characteristics.</em>‚Äù</blockquote><p>Whereas within their 4-step question set they <em>also</em> include the act of developing risk treatments (<em>‚ÄúWhat are we going to do about it‚Äù</em>), as well as following up on the efficacy of those applied countermeasures (<em>‚ÄúDid we do a good enough job‚Äù</em>). My point being, that they are a little inconsistent between how they <em>define</em> threat modeling and the <em>steps taken</em> to perform a threat model. <em>Maybe I‚Äôm just being a bit nit-picky though</em>‚Ä¶<p><strong>*</strong> In the past, I always considered ‚Äú<a href="#simplified-threat-modeling">Threat Modeling</a>‚Äù in the <em>purest sense</em> to be limited to just questions <em>1</em> &amp; <em>2</em> from the Manifesto, or strictly, just the acts of documenting the system (inventorying components + <em>DFD</em>) and generating the threats. Now however, I realize that the prescription of security controls and subsequent re-factoring of threat risks is as applicable in the context of threat modeling as anything else. <strong><sup><a href="#references">26</a></sup></strong><h2 id="benefits-and-characteristics-of-threat-modeling">Benefits and Characteristics of Threat Modeling</h2><p>Rather than me regurgitate a bunch of benefits of <a href="#intro-to-threat-modeling">threat modeling</a>, instead peruse this great <a href="https://www.synopsys.com/company.html">Synopsys</a> compilation of <a href="https://www.synopsys.com/glossary/what-is-threat-modeling.html">threat modeling advantages</a>. <strong><a href="#references"><sup>2</sup></a></strong><blockquote><ul><li>Detect problems early in the software development life cycle (<a href="https://www.synopsys.com/blogs/software-security/secure-sdlc/">SDLC</a>)‚Äîeven before coding begins.<li>Spot design flaws that traditional testing methods and code reviews may overlook.<li>Evaluate new forms of attack that you might not otherwise consider.<li>Maximize testing budgets by helping target testing and code review.<li>Identify security requirements.<li>Remediate problems before software release and prevent costly recoding post-deployment.<li>Think about threats beyond standard attacks and identify security issues unique to your application.<li>Keep frameworks ahead of the internal and external attackers relevant to your applications.<li>Highlight assets, threat agents, and <a href="#control-frameworks">controls</a> to deduce components that attackers will target.<li>Model the location of threat agents, motivations, skills, and capabilities to locate potential attackers in relation to the system architecture.</ul></blockquote><p>So what makes a threat modeling methodology a good one? Consider now the following list of desirable traits and considerations. <strong><a href="#references"><sup>25</sup></a></strong><ul><li>No (<em>or low</em>) false positives<li>No threat blind spots<li>Consistency, regardless of who performs the threat modeling exercise<li>Cost, time and resource-effective<li>Has <a href="#tooling">tool</a> support which helps scale and automate the various threat modeling activities<li>Suggests a process for <a href="#risk-assessment-models">prioritizing</a> findings<li>Is easy / intutitive to learn and use, regardless of technical background<li>Has superior characteristics for specific types of systems and situations</ul><hr /><h1 id="methodologies">Methodologies</h1><p>This section will detail several (<strong>13</strong>) well-known (<em>and not so well-known</em>) <a href="#intro-to-threat-modeling">threat modeling</a> methodologies. They are presented in no real particular order, though I will say that the first half of the list <em>does</em> contain a higher concentration of the more popular models. <em>There are also methodologies I plan to cover in the future <a href="#future-methodologies">listed here</a></em>.<ul><li><a href="#microsoft-threat-modeling">Microsoft Threat Modeling</a><li><a href="#pasta">PASTA</a><li><a href="#octave">OCTAVE</a><li><a href="#trike">Trike</a><li><a href="#linddun">LINDDUN</a><li><a href="#vast">VAST</a><li><a href="#data-centric-system-threat-modeling-nist-sp-800-154">NIST SP 800-154</a><li><a href="#owasp-threat-modeling-process">OWASP TMP</a><li><a href="#tara">TARA</a><li><a href="#iddilatc">IDDIL/ATC</a><li><a href="#hybrid-threat-modeling-method-htmm">hTMM</a><li><a href="#quantitative-threat-modeling-qtmm">QTMM</a><li><a href="#id3">ID<sup>3</sup></a></ul><hr width="45%" /><p>Before we dive into the various methodologies though, let‚Äôs cover a few commonly encountered supporting resources that these threat modeling methodologies generally rely on.<h3 id="control-frameworks">Control Frameworks</h3><p><strong>Control Frameworks</strong> provide security / privacy controls, requirements, countermeasures, best practices, standards, risk treatments and other recommendations for strengthening the security posture of a system.<ul><li><a href="https://owasp.org/www-project-application-security-verification-standard/">OWASP ASVS</a>: A framework of security requirements / controls that can be employed when designing web applications.<li><a href="https://d3fend.mitre.org">MITRE D3FEND</a>: A knowledge graph of cybersecurity countermeasures.<li><a href="https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04232020.pdf">NIST SSDF</a>: A framework developed by <a href="https://www.nist.gov">NIST</a> to facilitate the mitigation of risk in the <a href="https://www.bsimm.com/framework/software-security-development-lifecycle.html">SSDL</a>.<li><a href="https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/final">NIST SP 800-53 (Rev. 5)</a>: Organization-wide security and privacy controls (not specific to applications).<li><a href="https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/final">NIST CSF</a>: A set of best practices, standards and recommendations used to improve cybersecurity in an organization.<li><a href="https://docs.microsoft.com/en-us/azure/security/develop/threat-modeling-tool-mitigations">Microsoft Web Application Security Frame</a>: A <a href="https://patents.google.com/patent/US7818788">web application security frame</a> is used to converge knowledge into an activity by identifying categories, <a href="#vulnerability-catalogs">vulnerabilities</a>, threats, <a href="#attack-libraries">attacks</a> and countermeasures.<li><a href="https://www.linddun.org/mitigation-strategies-and-solutions">LINDDUN Mitigation strategies and solutions</a>: High-level view of common techniques used in-practice to prevent privacy threats.<li><a href="https://controlcatalog.trustoncloud.com/">ControlCatalog</a>: <a href="https://trustoncloud.com/introducing-controlcatalog-improving-the-user-experience-from-our-160-pages-threatmodel-on-amazon-s3-to-a-reactive-ui/">TrustOnCloud‚Äôs</a> controls library, the companion to their <a href="https://github.com/trustoncloud/threatmodel-for-aws-s3">attack scenario library</a>.<li><a href="https://www.security4startups.com/controls-checklist/">Security4Startups</a> - Checklist of the security controls you should consider implementing in a startup.<li><a href="https://controlsframework.equifax.com/home">Equifax Controls Framework</a> - Yes, even Equifax has a publicly published controls framework!</ul><h3 id="attack-libraries">Attack Libraries</h3><p><strong>Attack Libraries</strong> provide lists of of attack patterns, risks, exploits and techniques which can be used to compromise a system or its assets.<ul><li><a href="#stride">STRIDE</a>: A simplified, categorical list of attacks developed by <a href="https://www.microsoft.com/en-us/msrc">Microsoft</a>.<li><a href="https://owasp.org/www-project-top-ten/">OWASP Top 10</a>: A broad consensus of the most critical security risks to web applications.<li><a href="https://capec.mitre.org">MITRE CAPEC</a>: A comprehensive dictionary of known attack patterns.<li><a href="https://attack.mitre.org">MITRE ATT&amp;CK</a>: Knowledge base of adversary tactics and techniques based on real-world observations.<ul><li>Read here to learn more about how <a href="https://capec.mitre.org/about/attack_comparison.html">MITRE‚Äôs CAPEC library compares to their ATT&amp;CK framework</a>.</ul><li><a href="https://fight.mitre.org">MITRE FiGHT</a>: Knowledge base of adversary Tactics and Techniques for 5G systems.<li><a href="https://pbom.dev/#overview">OSC&amp;R</a> - Open Software Supply Chain Attack Reference: A comprehensive, systematic and actionable way to understand attacker behaviors and techniques with respect to the software supply chain.<li><a href="https://www.exploit-db.com">OffSec Exploit-DB</a>: <a href="https://cve.mitre.org">CVE</a>-compliant archive of public exploits and corresponding vulnerable software, developed for use by penetration testers and vulnerability researchers.<li><a href="https://plot4.ai">PLOT4AI</a>: Privacy Library of Threats 4 Artificial Intelligence (based on <a href="#linddun">LINDDUN</a>)<li><a href="https://github.com/trustoncloud/threatmodel-for-aws-s3">TrustOnCloud ThreatModel for Amazon S3</a>: A library of all the <a href="https://trustoncloud.com/the-last-s3-security-document-that-well-ever-need/">attack scenarios</a> on Amazon S3<li><a href="https://spaceshield.esa.int">SPACE-SHIELD</a> - Space Attacks and Countermeasures Engineering Shield is an ATT&amp;CK¬Æ like knowledge-base framework for Space Systems.<li><a href="https://threats.wiz.io">Cloud Threat Landscape</a> - A comprehensive threat intelligence database of cloud security incidents, actors, tools and techniques.<li><a href="https://microsoft.github.io/Azure-Threat-Research-Matrix/">Azure Threat Research Matrix</a></ul><h3 id="vulnerability-catalogs">Vulnerability Catalogs</h3><p><strong>Vulnerability Catalogs</strong> are lists of <em>known</em> vulnerabilities, weaknesses and issues that affect specific software or classes of systems.<ul><li><a href="https://cve.mitre.org">MITRE CVE</a>: A program which identifies, defines and catalogs publicly disclosed cybersecurity vulnerabilities.<li><a href="https://nvd.nist.gov">NIST NVD</a>: Government repository of standards-based vulnerability management data represented using the Security Content Automation Protocol (<a href="https://csrc.nist.gov/projects/security-content-automation-protocol">SCAP</a>).<ul><li>Read here to learn more about the <a href="https://cve.mitre.org/about/cve_and_nvd_relationship.html">MITRE CVE vs. NIST NVD relationship</a>.</ul><li><a href="https://cwe.mitre.org">MITRE CWE</a>: Community-developed list of software and hardware weakness types.<li><a href="https://vuldb.com">VulDB</a>: Vulnerability database documenting and explaining security vulnerabilities, threats and exploits.<li><a href="https://www.cisa.gov/known-exploited-vulnerabilities-catalog">CISA Known Exploited Vulnerabilities (KEV) catalog</a>: Authoritative source of vulnerabilities that have been exploited in the wild, maintained by <a href="https://www.cisa.gov">CISA</a>.<li><a href="https://gsd.id">Global Security Database</a><li><a href="https://security.snyk.io">Snyk Vulnerability Database</a>: Database of open source vulnerabilities maintained by <a href="https://snyk.io">Snyk</a>.<li><a href="https://www.cloudvulndb.org">Open CVDB</a>: An open project to list all known cloud vulnerabilities and cloud service provider (<a href="https://cloudsecurityalliance.org/blog/2020/04/30/what-is-a-cloud-service-provider/">CSP</a>) security issues.<li><a href="https://www.opencve.io">OpenCVE</a>: Platform used to locally import the list of CVEs and perform searches on it (by vendors, products, CVSS, CWE‚Ä¶).<li><a href="https://go.dev/security/vuln/">Go Vulnerability Management</a>: Database of <a href="https://go.dev">Go</a> vulnerabilities.<li><a href="https://lve-project.org/index.html">LVE Repository</a><li><a href="https://rustsec.org">RUSTSEC</a></ul><h3 id="risk-assessment-models">Risk Assessment Models</h3><p><strong>Risk Assessment Models</strong> are methodologies for determining risk based on known information about a system. They are used to understand, control and mitigate risk to an organization or system.<ul><li><a href="#dread">DREAD</a>: Quantitative risk model developed by <a href="https://www.microsoft.com/en-us/msrc">Microsoft</a> that is reminiscent of <em>CVSS</em>.<ul><li><strong>*</strong> <em>Similar to <a href="#stride">STRIDE</a>, DREAD is often mistakenly referred to as a threat modeling methodology. It is in fact a model to quantitatively evaluate security risk.</em></ul><li><a href="https://nvd.nist.gov/vuln-metrics/cvss">NIST CVSS</a>: Open framework for communicating the characteristics and severity of software <a href="#vulnerability-catalogs">vulnerabilities</a>.<li><a href="https://owasp.org/www-community/OWASP_Risk_Rating_Methodology">OWASP Risk Rating Methodology</a>: <a href="https://owasp.org">OWASP</a>‚Äôs approach to calculating risk (<a href="https://www.owasp-risk-rating.com">OWASP Risk Rating Calculator</a>).<li><a href="https://csrc.nist.gov/publications/detail/sp/800-30/rev-1/final">NIST SP 800-30, Guide for Conducting Risk Assessments</a>: Guidance for conducting risk assessments of federal information systems and organizations.<li><a href="https://cyber.gc.ca/en/tools-services/harmonized-tra-methodology">Harmonized TRA Methodology (TRA-1)</a>: Set of tools designed to address all assets, employees and services at risk - from the <a href="https://cyber.gc.ca/en">Canadian Centre for Cyber Security</a>.<li><a href="https://www.fairinstitute.org/what-is-fair">FAIR</a>: <em>Factor Analysis of Information Risk</em> (<strong>FAIR</strong>) is a methodology for quantifying and managing risk in any organization. <a href="https://web.archive.org/web/20141118061526/http://www.riskmanagementinsight.com/media/docs/FAIR_introduction.pdf"><i class="ph ph-file-text"></i></a><li><a href="https://infosec.mozilla.org/guidelines/assessing_security_risk">Mozilla‚Äôs Risk Assessment</a>: Risk framework devised and used by Mozilla‚Äôs <a href="https://infosec.mozilla.org">security team</a>. The <a href="https://infosec.mozilla.org/guidelines/risk/rapid_risk_assessment.html">Rapid Risk Assessment</a> (RRA) methodology is a formalized, reproducible and consistent framework for conducting risk assessments.<li><a href="https://www.ssi.gouv.fr/guide/ebios-risk-manager-the-method/">EBIOS Risk Manager (EBIOS RM)</a>: Method for assessing and treating digital risks, published by the <em>National Cybersecurity Agency of France</em> (<a href="https://www.ssi.gouv.fr/">ANSSI</a>) with the support of <a href="https://club-ebios.org/site/en/welcome/">Club EBIOS</a>.<li><a href="https://media10.connectedsocialmedia.com/intel/10/5725/Intel_IT_Business_Value_Prioritizing_Info_Security_Risks_with_TARA.pdf">Threat Agent Risk Assessment (TARA) | Intel</a>: Methodology that distills the immense number of possible information security attacks into a digest of only those exposures most likely to occur.<li><a href="https://nvlpubs.nist.gov/nistpubs/ir/2012/NIST.IR.7864.pdf">NIST CMSS</a>: <em>The Common Misuse Score System: Metrics for Software Feature Misuse Vulnerabilities</em> contains a set of measures of the severity of software feature misuse vulnerabilities.<li><a href="https://www.researchgate.net/publication/233644703_Mission_Oriented_Risk_and_Design_Analysis_of_Critical_Information_Systems">MORDA</a>: A quantitative risk assessment and risk management process that uses risk analysis techniques and multiple objective decision analysis models to evaluate information system designs.<li><a href="https://www.first.org/epss/">EPSS</a> - The <em>Exploit Prediction Scoring System</em> is an open, data-driven effort for estimating the likelihood (probability) that a software vulnerability will be exploited in the wild.<li><a href="https://riskscore.info">SCORES</a> - Seconize Contextual Risk Enumeration System is a free risk scoring tool for vulnerabilities.<li><a href="https://www.cisa.gov/ssvc">CISA SSVC</a> - Stakeholder-Specific Vulnerability Categorization system is a vulnerability analysis methodology that accounts for a vulnerability‚Äôs exploitation status, impacts to safety, and prevalence of the affected product in a singular system.<li><a href="https://viss.zoom.com">Zoom VISS</a> - The Vulnerability Impact Scoring System (VISS) captures objective impact characteristics of software, hardware, and firmware vulnerabilities in relation to infrastructure, technology stack, and customer data security.</ul><hr width="45%" /><h2 id="microsoft-threat-modeling"><a href="https://www.microsoft.com/en-us/securityengineering/sdl/threatmodeling">Microsoft Threat Modeling</a></h2><p><strong>Microsoft‚Äôs Threat Modeling</strong> framework is comprised of <a href="#microsoft-threat-modeling-steps">five major steps</a>. <a href="https://www.microsoft.com">Microsoft</a> emphasizes the importance of <a href="#intro-to-threat-modeling">threat modeling</a> as part of an organizations routine <a href="https://www.microsoft.com/en-us/securityengineering/sdl/">SDL</a> practice. <strong><a href="#references"><sup>3</sup></a></strong> <center><img alt="MS Threat Modeling" src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/msft-threat-model.png" width="400px" /></center><h6 id="microsoft-threat-modeling-steps">Microsoft Threat Modeling Steps</h6><ol><li><strong><a href="https://www.microsoft.com/en-us/securityengineering/sdl/practices#practice2">Define</a></strong> security requirements which reflect the legal/industry requirements, internal standards, previous incidents, known threats, data classification and business criticality of a system.<li><strong>Diagram</strong> the application by drawing a <a href="#data-flow-diagram">data flow diagram</a> (DFD) which depicts the processes, systems, data stores, data flows and other contextual information about an application/system.<li><strong>Identify</strong> threats by leveraging an <a href="#attack-libraries">attack library</a> or threat classification system such as <a href="#stride">STRIDE</a>.<li><strong>Mitigate</strong> threats by developing potential <a href="#control-frameworks">risk treatments</a> which can be implemented by system owners to address identified threats.<li><strong>Validate</strong> that threats have been mitigated by revisiting the threat model and adapting that model to account for changes introduced to the system as a result of previous mitigation efforts or functional changes.</ol><p>Alongside this approach <strong><a href="#references"><sup>3</sup></a></strong>, <a href="https://www.microsoft.com/">Microsoft</a> published a threat classification system known as <a href="#stride">STRIDE</a>. Despite STRIDE having never been a particularly effective method for enumerating attacks <strong><a href="#references"><sup>28</sup></a></strong>, it has nevertheless prevailed as the taxonomy of choice for the official <a href="#microsoft-threat-modeling-tool">Microsoft Threat Modeling tool</a> which uses STRIDE for auto-enumerating potential attacks within a provided model.<p>You know who else loves Microsoft Threat Modeling and STRIDE? <a href="https://github.blog/2020-09-02-how-we-threat-model/">GitHub</a>! (<em><a href="https://news.microsoft.com/announcement/microsoft-acquires-github/">unsurprisingly</a></em>)<h5 id="stride">STRIDE</h5><p><strong><a href="https://docs.microsoft.com/en-us/archive/msdn-magazine/2006/november/uncover-security-design-flaws-using-the-stride-approach">STRIDE</a></strong> is a 6*-pronged threat classification model developed by <a href="https://www.microsoft.com/">Microsoft</a>. <strong>*</strong> STRIDE is often mistakenly referred to as a <a href="#intro-to-threat-modeling">threat modeling</a> methodology, but it is in fact just a collection of 6 <em>somewhat</em> <strong><a href="#references"><sup>28</sup></a></strong> distinct threat classes. These threats and their respective desired security properties are listed below. <strong><a href="#references"><sup>4</sup></a></strong><table><thead><tr><th>Threat<th>Security Property<tbody><tr><td>Spoofing<td>Authenticity<tr><td>Tampering<td>Integrity<tr><td>Repudiation<td>Non-Repudiability<tr><td>Information Disclosure<td>Confidentiality<tr><td>Denial of Service (DoS)<td>Availability<tr><td>Elevation of Privilege (EoP)¬†¬†<td>Authorization<tr><td><strong>*</strong> <em>Lateral Movement (LM)</em> <strong><a href="#references"><sup>24</sup></a></strong><td>Least-Privilege</table><p>Below is a matrix describing the STRIDE threat categories and how they typically apply to the elements of a standard <a href="#data-flow-diagram">data flow diagram</a> (DFD). <strong><a href="#references"><sup>25</sup></a></strong><table><thead><tr><th>Element<th>S<th>T<th>R<th>I<th>D<th>E<tbody><tr><td>Data Flow<td>¬†<td>X<td>¬†<td>X<td>X<td>¬†<tr><td>Data Store<td>¬†<td>X<td>¬†<td>X<td>X<td>¬†<tr><td>Processes<td>X<td>X<td>X<td>X<td>X<td>X<tr><td>External Entity<td>X<td>¬†<td>X<td>¬†<td>¬†<td>¬†</table><h6 id="desist">DESIST</h6><p><strong>DESIST</strong> is a variant of <a href="#stride">STRIDE</a>, it stands for <em>Dispute</em>, <em>Elevation of Privilege</em>, <em>Spoofing</em>, <em>Information Disclosure</em>, <em>Service Denial</em> and <em>Tampering</em>.<h5 id="dread">DREAD</h5><p><strong><a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/driversecurity/threat-modeling-for-drivers#the-dread-approach-to-threat-assessment">DREAD</a></strong> is a threat / <a href="#risk-assessment-models">risk assessment model</a> developed by <a href="https://www.microsoft.com/">Microsoft</a>. It is comprised of the <strong>5</strong> metrics below. <strong><a href="#references"><sup>5</sup></a></strong><ul><li><strong>Damage</strong> : Confidentiality, integrity and availability (<strong>CIA</strong>) impact.<li><strong>Reproducibility</strong> : How often a specified type of attack will succeed.<li><strong>Exploitability</strong> : Effort and expertise required to mount an attack.<li><strong>Affected Users</strong> : Number/type of users that could be affected.<li><strong>Discoverability</strong> : Likelihood of exploitation.</ul><p>A simple way to use DREAD to <em>quantitatively</em> calculate risk would be to assign a value, 1-10 across each of the metrics above for each of the known threats / <a href="#vulnerability-catalogs">vulnerabilities</a> applicable to a system. Once complete, take the average, which will yield the final (out of 10) risk score. This is similar in some ways to how <a href="https://nvd.nist.gov/vuln-metrics/cvss">CVSS</a> is used to score risks. In fact, DREAD maps to CVSS (<a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator">v3.1</a>) as shown below. With all this said, the scoring methodology via DREAD is notably problematic. <strong><a href="#references"><sup>28</sup></a></strong><h6 id="dread-to-cvssv3-matrix">DREAD to CVSSv3 Matrix</h6><table><thead><tr><th>DREAD Criteria<th>CVSS Metric(s)<th>CVSS Acronym<tbody><tr><td>Damage<td>Impact, i.e. Confidentiality, Integrity &amp; Availability<td>(<em>C</em>,<em>I</em>,<em>A</em>)<tr><td>Reproducibility<td>Exploit Code Maturity<td>(<em>E</em>)<tr><td>Exploitability<td>Attack Vector, Attack Complexity, Privileges Required, User Interaction ¬†<td>(<em>AV</em>, <em>AC</em>, <em>PR</em>, <em>UI</em>)<tr><td>Affected Users ¬†<td>Scope<td>(<em>S</em>)<tr><td>Discoverability<td>Remediation Level, Report Confidence<td>(<em>RL</em>, <em>RC</em>)</table><hr width="33%" /><h2 id="pasta">PASTA</h2><p><strong>Process for Attack Simulation and Threat Analysis</strong> (<strong>PASTA</strong>) <a href="https://www.wiley.com/en-us/Risk+Centric+Threat+Modeling%3A+Process+for+Attack+Simulation+and+Threat+Analysis-p-9780470500965#"><i class="ph ph-book"></i></a> is a risk-centric, threat-focused, evidence-based and highly collaborative <a href="#intro-to-threat-modeling">threat modeling</a> methodology. PASTA is composed of a <strong>7</strong>-stage process. These stages are listed below, with subsequent sections that cover in detail each respective stage.<ul><li>Stage 1: <a href="#pasta-stage-1-define-objectives">Define Objectives</a><li>Stage 2: <a href="#pasta-stage-2-define-technical-scope">Define Technical Scope</a><li>Stage 3: <a href="#pasta-stage-3-application-decomposition">Application Decomposition</a><li>Stage 4: <a href="#pasta-stage-4-threat-analysis">Threat Analysis</a><ul><li><a href="#cyber-threat-intelligence-cti">Cyber Threat Intelligence</a> (CTI)</ul><li>Stage 5: <a href="#pasta-stage-5-vulnerability--weakness-analysis">Vulnerability &amp; Weakness Analysis</a><li>Stage 6: <a href="#pasta-stage-6-attack-modeling">Attack Modeling</a><ul><li><a href="#attack-trees">Attack Trees</a></ul><li>Stage 7: <a href="#pasta-stage-7-risk--impact-analysis">Risk &amp; Impact Analysis</a></ul><p>For each stage of the PASTA threat modeling process I provide an <em>I/O flow diagram</em> which describes the respective inputs, processes and outputs for each stage. <strong>*</strong> I <strong>do not</strong> exhaustively cover each element of the respective stages as this would prove rather tedious and even <em>overly</em> informative. Rather, I will describe select pieces of each stage based on the elements I deem either un-obvious or particularly opaque given the stage-specific process-flow depiction alone. Where applicable, I‚Äôll also provide additional instruction, context, commentary and analysis within each stage‚Äôs section. <strong><a href="#references"><sup>6</sup></a></strong><h3 id="pasta-stage-1-define-objectives">PASTA Stage 1: Define Objectives</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-1-Objectives.png" alt="PASTA Stage 1" width="900px" /></center><ul><li>The inputs for <em>Stage 1</em> require quite a <em>bit</em> of data gathering and cross-team collaboration. Some teams you may need to consult for these inputs are listed below‚Ä¶<ul><li><em><a href="https://requirements.com/Content/What-is/what-are-business-requirements-1">Business Requirements</a></em>: Business partners from the department the target system resides in.<li><em><a href="https://www.geeksforgeeks.org/functional-vs-non-functional-requirements/">Functional Requirements</a></em>: (<em>Software</em>) Engineering team(s).<li><em><a href="https://www.sans.org/information-security-policy/">Information Security Policies</a></em>: Security team &amp; security leadership.<li><em><a href="#compliance-frameworks">Regulatory Compliance Standards</a></em>: <a href="https://en.wikipedia.org/wiki/Governance,_risk_management,_and_compliance">GRC</a> or Privacy team(s).<li><em><a href="https://digitalguardian.com/blog/what-data-classification-data-classification-definition">Data Classification</a> Documents</em>: Enterprise architecture, IT or GRC teams.</ul><li>Work with business stakeholders to understand <strong><a href="https://asana.com/resources/business-objectives-examples">business objectives</a></strong>.<li>To <strong>define security requirements</strong>, consider leveraging a methodology like <a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=484884">SQUARE</a>.<li>For defining <strong>compliance requirements</strong>, you‚Äôll need to understand the <a href="#compliance-frameworks">regulatory / compliance frameworks</a> your organization may be beholden to (<em>and there are a lot of them</em>).<li><strong>Business Impact Analysis</strong> (<strong>BIA</strong>) report: I won‚Äôt cover conducting a BIA engagement within this guide. Please reference this <a href="https://www.ready.gov/business-impact-analysis">great resource on BIA</a> from <a href="https://www.ready.gov/">Ready.gov</a> if you want to learn more.<li><strong>Application Profile</strong>: Any high-level description of the application and its functionality is suitable but the profile would ideally include information such as - <em>application type</em> (e.g. Internet-facing), <em>data classification</em> (e.g. public, confidential, restricted), <em>business objectives</em>, <em>inherent risk</em>, <em>high risk transactions</em> (e.g.yes/no), <em>user roles</em>, <em>number of users</em>, etc‚Ä¶<li>Like other <a href="#methodologies">methodologies</a> covered in this guide, <a href="#pasta">PASTA</a> includes the development of formal security (and <a href="#linddun-threat-categories">privacy</a>) requirements. Personally, I think these should be implicit inputs <em>into</em> a <a href="#intro-to-threat-modeling">threat modeling</a> exercise, rather than an explicit output, but‚Ä¶ <em>&lt;/shrug&gt;</em></ul><h6 id="compliance-frameworks">Compliance Frameworks</h6><p>Compliance is a necessary evil in the world of security <em>and</em> <a href="#intro-to-threat-modeling">threat modeling</a>. There is an <em>overwhelming</em> collection of <strong>compliance frameworks</strong> that govern industries around the world. Some examples include - <a href="https://www.congress.gov/bill/107th-congress/house-bill/3763">Sarbanes-Oxley (SOX)</a>, <a href="https://www.pcisecuritystandards.org">PCI DSS</a>, <a href="https://www.nist.gov/cyberframework">NIST CSF</a>, <a href="https://www.ssae-16.com">SSAE-16</a>, <a href="https://us.aicpa.org/content/dam/aicpa/research/standards/auditattest/downloadabledocuments/at-00101.pdf">AT-101</a>, <a href="https://www.fedramp.gov">FedRAMP</a>, <a href="https://www.iso.org/isoiec-27001-information-security.html">ISO</a>, <a href="https://www.privacyshield.gov/list">Privacy Shield</a>, <a href="https://www.hhs.gov/hipaa/index.html">HIPAA</a>, <a href="https://www.hhs.gov/hipaa/for-professionals/special-topics/hitech-act-enforcement-interim-final-rule/index.html">HITECH</a>, <a href="https://us.aicpa.org/interestareas/frc/assuranceadvisoryservices/aicpasoc2report">SOC 2</a>, <a href="https://www.defense.gov/News/Releases/Release/Article/2833006/strategic-direction-for-cybersecurity-maturity-model-certification-cmmc-program/">CMMC</a>, <a href="https://gdpr-info.eu">GDPR</a>, <a href="https://oag.ca.gov/privacy/ccpa">CCPA</a>, <a href="https://www.ftc.gov/business-guidance/privacy-security/gramm-leach-bliley-act">GLBA</a>, <a href="https://www.priv.gc.ca/en/privacy-topics/privacy-laws-in-canada/the-personal-information-protection-and-electronic-documents-act-pipeda/">PIPEDA</a>, <a href="https://www.cisa.gov/federal-information-security-modernization-act">FISMA</a>, <a href="https://cloudsecurityalliance.org/star/">CSA STAR</a>, <a href="https://www.isaca.org/resources/cobit">COBIT</a>, <a href="https://www2.ed.gov/policy/gen/guid/fpco/ferpa/index.html">FERPA</a>, <a href="https://www.ftc.gov/legal-library/browse/rules/childrens-online-privacy-protection-rule-coppa">COPPA</a>, <a href="https://www.nerc.com/comm/CIPC/Pages/default.aspx">NERC CIP</a>, <a href="https://www2.ed.gov/policy/highered/leg/hea08/index.html">HEOA</a>, <a href="https://hitrustalliance.net">HITRUST</a>, etc‚Ä¶ <strong><a href="#references"><sup>30</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>31</sup></a></strong><h3 id="pasta-stage-2-define-technical-scope">PASTA Stage 2: Define Technical Scope</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-2-Scope.png" alt="PASTA Stage 2" width="900px" /></center><ul><li>Similar to <em><a href="#pasta-stage-1-define-objectives">Stage 1</a></em>, there are other teams that will likely need to be consulted for the required inputs, e.g. the network team and engineering team(s).<li><strong>Technical Scope</strong>: Inventorying <em>network</em>, <em>infrastructure</em> and <em>software</em> components contributes to developing a holistic technical scope as well as for understanding the <em>boundaries</em> of a system. Example component elements include - <em>application components</em>, <em>network topology</em>, <em>protocols</em>/<em>services</em> (from existing <a href="#data-flow-diagram">data flow diagrams</a>), <em>use case scenarios</em> (via sequence diagrams), <em>assets</em> (targeted data / sub-systems), <em><a href="#control-frameworks">security controls</a></em> (e.g. <a href="https://www.cloudflare.com/learning/access-management/authn-vs-authz/">authN/authZ</a>, encryption, logging, etc‚Ä¶), <em>data interactions</em> (e.g. login, registration), <em>technology types / versions</em>, etc‚Ä¶<li>The <em>technical scope</em> derived in this stage is the basis for our understanding of the systems <strong>attack surface</strong>.</ul><h3 id="pasta-stage-3-application-decomposition">PASTA Stage 3: Application Decomposition</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-3-Decomposition.png" alt="PASTA Stage 3" width="900px" /></center><ul><li>For reference, here‚Äôs a good definition of a <strong><a href="https://www.lucidchart.com/blog/how-to-create-software-design-documents">design document</a></strong>.<li><strong><a href="https://www.usability.gov/how-to-and-tools/methods/use-cases.html">Use case</a></strong> enumeration can be time-consuming and unwieldy depending on the size &amp; scope of the target system.<li>This stage requires the development of a <strong><a href="#data-flow-diagram">data flow diagram</a></strong> (DFD).<li><strong>Controls Analysis</strong>: For each use case (transaction), determine the inherent risk, data classification in scope and security functions invoked for each <a href="#control-frameworks">control type</a> (e.g. input validation, authN/authZ, session management, encryption, etc‚Ä¶). <em>Note: This can be done in a spreadsheet.</em><li><em>‚ÄúExplicit‚Äù vs ‚ÄúImplicit‚Äù trust</em>: Are authorization (<em><a href="https://auth0.com/intro-to-iam/what-is-authorization/">authZ</a></em>) decisions made on context-aware rules (i.e. <a href="https://csrc.nist.gov/publications/detail/sp/800-207/final">Zero Trust</a>) or simply by whether you can communicate with something?<li><strong><a href="#access-control-matrix">Access Control Matrix</a></strong>: A formal security model that characterizes the rights of actors with respect to assets in a system.<li><em>Use Case Mapping</em>: Similar to <a href="#trike">Trike</a>, <a href="#pasta">PASTA</a> demands the mapping of <strong><a href="#use-flow-map">use flows</a></strong>.</ul><h3 id="pasta-stage-4-threat-analysis">PASTA Stage 4: Threat Analysis</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-4-Threat+Analysis.png" alt="PASTA Stage 4" width="900px" /></center><ul><li><strong>*</strong> I find it a little <em>strange</em>, or just unnecessary, to bring straight-up application / <strong><a href="https://www.gartner.com/en/information-technology/glossary/security-information-and-event-management-siem">SIEM</a> logs</strong> into a <a href="#intro-to-threat-modeling">threat modeling</a> assessment, but that‚Äôs what <a href="#pasta">PASTA</a> wants as an input in this stage‚Ä¶<li><strong>Attack Scenario Probability Analysis</strong>: <em>Probability</em> (i.e. <em>likelihood</em>) is factored using a plethora of security criteria (e.g. attack vector, attack complexity, privileges required, user interaction, exploit code availability, vulnerability patch level, in-line <a href="#control-frameworks">security controls</a>, threat actor capability, threat actor infrastructure, threat actor motivation, etc‚Ä¶) - <em>pretty much <a href="https://www.first.org/cvss/specification-document">CVSS metrics</a></em>.<li>Consider what <a href="#cyber-threat-intelligence-cti">threat intel</a> can be developed from analyzing internal/external <strong>incident reports</strong>. Can we perform <a href="https://carnegieendowment.org/2022/03/28/purposes-of-u.s.-government-public-cyber-attribution-pub-86696">attribution</a>? Are there identifable <a href="https://attack.mitre.org/matrices/enterprise/">TTPs</a>? Do we at a minimum have workable <a href="https://www.fortinet.com/resources/cyberglossary/indicators-of-compromise">IoCs</a>?<li>PASTA asks that we perform <strong><a href="https://hbr.org/2015/11/a-refresher-on-regression-analysis">regression analysis</a></strong> on security events. <em>What does that even mean</em>? In this context, I suppose it means analyzing security events applicable to the target system and determining whether they have any real risk-implications.<li><strong>Attack Scenarios</strong> are high-level descriptions of <em>attack paths</em> we will <a href="#pasta-stage-6-attack-modeling">later model</a> by using <a href="#attack-trees">attack trees</a>.<li>We can <em>correlate CTI to our attack scenarios</em> by mapping industry-applicable <a href="#cyber-threat-intelligence-cti">CTI</a> to the threats / malicious actors proposed when we developed the attack scenarios.</ul><h5 id="cyber-threat-intelligence-cti">Cyber Threat Intelligence (CTI)</h5><p><strong>Cyber Threat Intelligence</strong> (<strong>CTI</strong>) is a <em>vast</em> discipline, and not one I‚Äôm going to try and cover exhaustively or authoritatively here. Instead, I‚Äôll cover a few key things for the purposes of understanding the application of CTI within the greater process of performing <a href="#intro-to-threat-modeling">threat modeling</a>. Let‚Äôs start with what makes something a ‚Äú<strong>threat</strong>‚Äù. Threats can be defined as the cross-section of when a <em>threat actor</em> has the following‚Ä¶<ul><li><strong>Intent</strong> - The motivation/desire to attack a target.<li><strong>Opportunity</strong> - Accessible <em>attack surface</em> that contains <em>vulnerability</em>.<li><strong>Capability</strong> - Infrastructure, tooling, exploits and applicable <a href="https://attack.mitre.org/matrices/enterprise/">TTPs</a> to perform an attack. <strong><a href="#references"><sup>7</sup></a></strong></ul><p>This is further visualized using the well-known <strong>Diamond Model</strong> (depicted below). Each line represents a relationship of how an attacker might attack a target/victim, e.g. the <em>Adversary</em> uses <em>Infrastructure</em> and known <em>Capabilities</em> to attack <em>Victim</em>. <strong><a href="#references"><sup>8</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/diamond-model.png" alt="Diamond Model" width="350px" /></center><p>Below are some other assorted thoughts and resources related to CTI.<ul><li><a href="https://cti-cmm.org">CTI-CMM</a> - Cyber Threat Intelligence Maturity Model<li><a href="https://warnerchad.medium.com/">Chad Warner</a> has an interesting <a href="https://warnerchad.medium.com/diamond-model-for-cti-5aba5ba5585">writeup on using the Diamond Model</a> if you want to dive deeper on this topic.<li><strong>Threat Intelligence</strong> can also be defined as, <em>data that is collected, processed, and analyzed to understand a threat actor‚Äôs motives, targets, and attack behaviors</em>. (<a href="https://www.crowdstrike.com/cybersecurity-101/threat-intelligence/">source</a>)<li>One important concept to understand related to CTI is the <a href="https://danielmiessler.com/blog/difference-data-information-intelligence/">difference between Data, Information and Intelligence</a>.<li>Intelligence should be <em>actionable</em>, enabling security teams to make better decisions.<li>A Cyber Threat Intelligence Self-Study Plan: <a href="https://medium.com/katies-five-cents/a-cyber-threat-intelligence-self-study-plan-part-1-968b5a8daf9a">Part 1</a>, <a href="https://medium.com/katies-five-cents/a-cyber-threat-intelligence-self-study-plan-part-2-d04b7a529d36">Part 2</a><li><a href="https://start.me/p/wMrA5z/cyber-threat-intelligence">Cyber Threat Intelligence Dashboard</a><li>A resource for public <a href="https://infosec.press/screaminggoat/attribution">attribution</a> by government organizations.<li><strong>Threat Actors</strong> can be modeled based on existing <em>threat profiles</em>. Organizations like <a href="https://attack.mitre.org/groups/">MITRE</a>, <a href="https://adversary.crowdstrike.com/">Crowdstrike</a>, <a href="https://www.dragos.com/threat-activity-groups/">Dragos</a>, <a href="https://www.mandiant.com/resources/insights/advanced-persistent-threats-apts">Mandiant</a>, <a href="https://www.cfr.org/cyber-operations/">CFR</a>, Google <a href="https://blog.google/threat-analysis-group/">TAG</a>, <a href="https://learn.microsoft.com/en-us/microsoft-365/security/intelligence/microsoft-threat-actor-naming">Microsoft</a> &amp; <a href="https://www.secureworks.com/research/threat-profiles">Secureworks</a> track global threat actors and make these profiles publicly available.<li>Organizations and representative security teams typically consume threat intel through (integrated) <em>feeds</em> or via published reports (<em>typically from the organizations I just listed</em>). Good open-source CTI projects include <a href="https://www.misp-project.org">MISP</a> and <a href="https://www.opencti.io/">OpenCTI</a>.<li>Other external threat sources to consider include‚Ä¶<ul><li>Verizon‚Äôs annual <a href="https://www.verizon.com/business/resources/reports/dbir/">Data Breach Investigations Report</a> (DBIR)<li><a href="https://www.cisa.gov/uscert/">US Cert</a> &amp; <a href="https://www.cisa.gov/topics/cyber-threats-and-advisories/information-sharing/automated-indicator-sharing-ais">CISA AIS</a><li>SANS <a href="https://isc.sans.edu/data/threatfeed.html">Internet Storm Center</a><li>McAfee‚Äôs <a href="https://www.mcafee.com/enterprise/en-us/threat-center/threat-landscape-dashboard/campaigns-details.operation-finsho.html">Threat Landscape Dashboard (Operation FINSHO)</a><li><a href="https://community.emergingthreats.net">Emerging Threats</a> &amp; <a href="https://rules.emergingthreats.net">rules</a><li><a href="https://apt.threattracking.com">APT Groups and Operations | apt.threattracking</a><li><a href="https://pan-unit42.github.io/playbook_viewer/">Playbook Viewer | Unit42</a><li><a href="https://otx.alienvault.com">OTX AlienVault</a><li><a href="https://apt.etda.or.th/cgi-bin/aptsearch.cgi">Electronic Transactions Development Agency (ETDA)</a><li><a href="https://github.com/MISP/misp-galaxy/blob/main/clusters/threat-actor.json">MISP Galaxy Threat Actors</a><li><a href="https://talosintelligence.com">Talos</a><li><a href="https://threatconnect.com/partner/r-cisc/">R-CISC</a>. <strong><a href="#references"><sup>9</sup></a></strong><li><a href="https://www.infragard.org">InfraGard</a><li><a href="https://www.blocklist.de/en/index.html">BlockList.de</a><li><a href="https://phishtank.org">PhishTank</a><li><a href="https://cinsscore.com">CINS Score</a><li><a href="https://www.spamhaus.org">Spamhaus</a><li><a href="https://virusshare.com">VirusShare</a><li><a href="https://safebrowsing.google.com">Google Safe Browsing</a></ul><li><strong><a href="https://www.synopsys.com/blogs/software-security/5-pillars-successful-threat-model/">Traceability Matrices</a></strong> can be created to examine a <em>threat agent</em>. <a href="#control-frameworks">Controls</a> can be mapped within the matrix to effectively mitigate the threat. <em>Note</em>: Similar results can be achieved from building <a href="#attack-trees">attack trees</a>, this is just one other medium. A traceability matrix is a 7-column table with the following fields. <strong><a href="#references"><sup>10</sup></a></strong></ul><center><b>Threat Agent</b> --&gt; <b>Asset</b> --&gt; <b>Attack</b> --&gt; <b>Attack Surface</b> --&gt; <b>Attack Goal</b> --&gt; <b>Impact</b> --&gt; <b>Control</b></center><h3 id="pasta-stage-5-vulnerability--weakness-analysis">PASTA Stage 5: Vulnerability &amp; Weakness Analysis</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-5-Vuln+Analysis.png" alt="PASTA Stage 5" width="900px" /></center><ul><li><em>To be honest</em>, I‚Äôm not entirely sure what the difference between a <strong>threat tree</strong> and an <em><a href="#attack-trees">attack tree</a></em> is‚Ä¶ <em>Stage 5</em> asks that we develop <em>threat trees</em> while <em><a href="#pasta-stage-6-attack-modeling">Stage 6</a></em> then asks us derive <em>attack trees</em>. (<em>??</em>) The only difference I can divine is the latter uses <em><a href="#attack-libraries">attack libraries</a></em> as input, so perhaps <em>attack trees</em> use known attack data rather than theoretical paths?<li><em>Stage 5</em> requests the ingestion of <em>vulnerability assessment reports</em>, vuln-to-asset attribution and scored vulnerabilities. This can be done manually, or preferably, performed as part of a larger <a href="/symphonic-vulnerability-surface-mapping#a-primer-on-vulnerability-management">Vulnerability Management</a> program (VMP).<li><a href="#vulnerability-catalogs">Vulnerability Catalogs</a> and vulnerability scoring systems like <a href="https://nvd.nist.gov/vuln-metrics/cvss">CVSS</a> are heavily used in this stage.<li><strong>Design Flaw Analysis</strong>: Evaluate <a href="https://www.usability.gov/how-to-and-tools/methods/use-cases.html">use</a> and <a href="https://cheatsheetseries.owasp.org/cheatsheets/Abuse_Case_Cheat_Sheet.html">abuse cases</a> for ways an attacker might compromise a system.<li>For documenting <em>threats-attacks-vulns-assets</em>, a simple list or table will suffice. Try to maintain as much elemental affinity as possible (i.e. attempt to capture the relationships between threats, attacks, <a href="#vulnerability-catalogs">vulnerabilities</a> and assets).</ul><h3 id="pasta-stage-6-attack-modeling">PASTA Stage 6: Attack Modeling</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-6-Attack+Modeling.png" alt="PASTA Stage 6" width="900px" /></center><ul><li>Now at <em>Stage 6</em> we start to see many of the outputs from previous stages being fed back in as inputs (e.g. <a href="#pasta-stage-2-define-technical-scope">technical scope</a>, <a href="#pasta-stage-3-application-decomposition">decomposition</a>, etc‚Ä¶)<li><strong>Attack Surface Analysis</strong>: What this means exactly is a bit ambiguous and probably open to some interpretation. Generally, I would focus on a prioritized list of surface-area components based on data criticality and surface volume. Check out <a href="https://www.crowdstrike.com/cybersecurity-101/attack-surface-management/">CrowdStrike‚Äôs take on Attack Surface Management</a>.<li><strong><a href="#attack-trees">Attack Trees</a></strong> are a big part of <em>Stage 6</em>.<li>What does it mean to <em>manage</em> our <em>attack library</em>? Well we have some <a href="#attack-libraries">attack libraries</a> we can import, so my guess is it just means to update or add to an imported library of attacks (unless of course we maintain one ourselves). This is reminiscent of <em><a href="#tara-assessment-workflow">TARA, Step 3: Knowledge Management</a></em>. <strong><a href="#references"><sup>23</sup></a></strong><li>Beyond the <em>attack trees</em> themselves, it could be additionally beneficial to map attack paths as overlays on top of the <a href="#pasta-stage-3-application-decomposition">previously</a> created <a href="#data-flow-diagrams">DFD</a>.</ul><h5 id="attack-trees">Attack Trees</h5><p><strong>Attack trees</strong> are hierarchical, graphical diagrams that show how low-level hostile activities interact and combine to achieve an adversary‚Äôs objectives. The goal of the attack is the <em>root</em> node, and the ways of achieving that goal are the <em>leaf</em> nodes. Like other <a href="https://hbr.org/1964/07/decision-trees-for-decision-making">decision trees</a>, attack trees are inverted, with the flow beginning from the leaves <em>up</em> to the root. As an attacker progresses through the tree through the intermediate states, they may gain certain tactical benefits and achieve other impacts. <strong><a href="#references"><sup>11</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>12</sup></a></strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/attack-tree.png" alt="Attack Tree" /><p>Here‚Äôs some more technical tid-bits on <em>attack trees</em>‚Ä¶<ul><li>Attack trees have <em>AND</em> and <em>OR</em> nodes. For an attacker to progress, each leaf node must be achieved per the condition of its parent node. <strong><a href="#references"><sup>12</sup></a></strong><li>You could further overlay nodes and paths with other contextual data. For example, you could associate nodes with a cost or time weight. You could also overlay <a href="#control-frameworks">security controls</a> information. <strong><a href="#references"><sup>11</sup></a></strong><li>Commonalities from one tree to another can be considered <em>attack patterns</em>. <strong><a href="#references"><sup>26</sup></a></strong><li>A single branch on an attack tree is considered an <em>attack path</em>.</ul><p>To create a tree, first start by enumerating <em>all</em> possible attack <strong>goals</strong>. (<strong>Warning</strong>: Attack trees can get pretty big, so you may want to start small and build out from there). Remember, a list of <em>attack scenarios</em> was developed in the <em><a href="#pasta-stage-4-threat-analysis">threat analysis stage (Stage 4)</a></em>. For each threat, create leaf nodes which represent the actions, weaknesses or <a href="#vulnerability-catalogs">vulnerabilities</a> that would need to be present for the attacker to succeed. Each attack / threat / goal has a separate tree, and when combining all trees together, you create a composite <strong>attack graph</strong>. To add further context and value to an <em>attack tree</em>, consider the tree provided below. It adds data such as the <em>asset</em> affected, the use and abuse cases involved, <a href="#attack-libraries">library</a>-mapped attack patterns and even explicitly-defined impacts! <strong><a href="#references"><sup>9</sup></a></strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/attack-tree-extra.png" alt="Attack Tree Extra" /><p><em>Attack trees</em> can and should be used to make security decisions. By performing an attack tree exercise, you can see if a system is vulnerable to an attack. You can also challenge existing security assumptions about a system and ultimately better understand the impact of vulnerabilities. Similarly, you can better understand the risk / impact mitigated by <a href="#control-frameworks">controls</a> that you can overlay on or between nodes within the attack tree.<p><strong>* Note</strong>: In a future update to this section, I will be adding details around <strong><a href="#the-stages-of-qtmm">misuse cases</a></strong> in the context of <em>attack trees</em>. <em>Stay tuned!</em><h6 id="attack-tree-references">Attack Tree References</h6><ul><li><strong><a href="#tooling">Attack Tree Tools</a></strong><li>Extra Reading: <a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8429296">Guided design of attack trees: a system-based approach</a><li>Extra Reading: <a href="http://dcsl.cs.ua.edu/papers/SAM9712.pdf">An Evolutionary Approach of Attack Graphs and Attack Trees: A Survey of Attack Modeling</a></ul><h3 id="pasta-stage-7-risk--impact-analysis">PASTA Stage 7: Risk &amp; Impact Analysis</h3><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/pasta-threat-model-7-Risk+Analysis.png" alt="PASTA Stage 7" width="900px" /></center><ul><li><em>Qualitative</em> risk analysis is subjective, using categorical associations, whereas <em>quantitative</em> risk analysis is objective, utilizing numerical values.<li><strong>4</strong> traditional ways to deal with risk: <em>mitigation</em>, <em>transference</em>, <em>acceptance</em> and <em>avoidance</em>.<li>To conduct a <strong>gap analysis</strong> at a basic level, you need to know your <em>current</em> state and your <em>desired</em> state. Your desired state could align with an <a href="#compliance-frameworks">industry-standard security framework</a> (e.g. <a href="https://www.iso.org/isoiec-27001-information-security.html">ISO 27001</a>, <a href="https://us.aicpa.org/interestareas/frc/assuranceadvisoryservices/aicpasoc2report">SOC 2 Type II</a>, etc‚Ä¶), or it could be simply mitigating known risks to an acceptable level.<li><em>Residual risk</em> can be rudimentarily calculated by taking <strong>(Vuln * Attack * Impact)</strong> and dividing by <strong>Countermeasures</strong>. <strong><a href="#references"><sup>9</sup></a></strong><li>There are a <a href="#risk-assessment-models">bunch of risk modeling frameworks</a> that can be employed at this stage.<li>The <strong>application risk profile</strong> I see as a high-level description of the risk the application faces as well as the risk to the business given the current state of the system.<li>The <strong>threat matrix</strong> (in my mind) is a simpler, tabular version of the threats produced in <em><a href="#pasta-stage-4-threat-analysis">Stage 4</a></em>, coupled with the assets identified in <em><a href="#pasta-stage-3-application-decomposition">Stage 3</a></em> and the vulnerabilities discovered in <em><a href="#pasta-stage-5-vulnerability--weakness-analysis">Stage 5</a></em>.<li>With a prioritized list of risks, consult one of the many <a href="#control-frameworks">control frameworks</a> to begin building a comprehensive risk mitigation strategy, or at least a list of targeted <strong>risk treatments</strong>.</ul><h2 id="thoughts-on-pasta">Thoughts on PASTA</h2><p><strong>Phew!</strong> This methodology is a <em>doozy</em>‚Ä¶ I list some thoughts and extra <em>meatballs-of-wisdom</em> for <a href="#pasta">PASTA</a> below.<ul><li>To perform a PASTA-style <a href="#intro-to-threat-modeling">threat model</a> <em>by-the-book</em> is an incredibly huge undertaking. It requires a massive amount of data collection as inputs and an even greater amount of effort producing the litany of output artifacts required to achieve success in the <a href="#pasta-stage-7-risk--impact-analysis">final stage</a>.<ul><li>Creating countless diagrams, matrices, lists, trees, graphs‚Ä¶ is <em>VERY</em> time-consuming. It took me a <em>gross</em> amount of time just to make the <em>pretend</em> artifacts for this guide. <a href="#attack-trees">Attack trees</a> are especially high LoE.</ul><li>Though I feel relatively comfortable in saying I‚Äôve explained the spirit of PASTA quite thoroughly, there are bits here and there that I‚Äôm sure I either misrepresented, left out or otherwise goofed on. My understanding of PASTA is based on quite a bit of open-source research, but unfortunately none of that research involved actually having access to the <a href="https://www.wiley.com/en-us/Risk+Centric+Threat+Modeling%3A+Process+for+Attack+Simulation+and+Threat+Analysis-p-9780470500965#">official book</a> in which it is formally described. <em>The book is like $100+ which is pretty crazy imo.</em><li>For another take on a PASTA-like threat modeling approach, check out <strong><a href="https://www.diva-portal.org/smash/get/diva2:1463788/FULLTEXT01.pdf">TMM</a></strong> from the <a href="https://www.kth.se/">KTH</a> <em>Royal Institute of Technology</em>. <em>TMM</em> simplifies the process of threat modeling relative to PASTA-classic (<em>which we know is hyper-involved</em>) and adds the <a href="#risk-assessment-models">risk modeling</a> benefits (<em>and flair</em>) of <a href="https://www.fairinstitute.org/what-is-fair">FAIR</a>.<li><a href="https://versprite.com/">VerSprite</a> also has a <a href="#pasta">PASTA</a> + <a href="https://www.fairinstitute.org/what-is-fair">FAIR</a>-inspired approach / tool, the <a href="https://versprite.com/blog/application-security/threat-modeling/organizational-threat-model-enterprise-risk-assessment/">Organizational Threat Model</a>.<ul><li><a href="https://versprite.com/author/tony-ucedavelez/">Tony UcedaV√©lez</a>, co-author of the <em>OG</em> <a href="https://www.wiley.com/en-us/Risk+Centric+Threat+Modeling%3A+Process+for+Attack+Simulation+and+Threat+Analysis-p-9780470500965#">PASTA book</a> also happens to be CEO at <a href="https://versprite.com">VerSprite</a>.</ul><li><em>PASTA</em> has <strong>3</strong> different implementation tiers / options. <strong><a href="#references"><sup>9</sup></a></strong><ul><li><em>Blind Threat Model</em>: Essentially stages <a href="#pasta-stage-1-define-objectives">1</a> &amp; <a href="#pasta-stage-2-define-technical-scope">2</a> of PASTA.<li><em>Evidence-Driven Threat Model</em>: Integrate organization threat telemetry (<em>log analysis</em>) and correlate <a href="#cyber-threat-intelligence-cti">CTI</a> with attack trends from logs. So essentially up through <em><a href="#pasta-stage-4-threat-analysis">Stage 4</a></em>.<li><em>Full Risk Based Threat Model</em>: Run statistical/probabilistic analysis on threat data, attack sequences and attack effectiveness. In other words, all <strong>7</strong> stages.</ul><li>A <a href="https://gitlab.com/gitlab-com/gl-security/security-research/gitlab-standalone-instance/-/blob/master/threat-modeling-assessment.md">sample PASTA Threat Modeling exercise from GitLab is linked here</a>.<li>So who uses PASTA? Well we know <a href="https://about.gitlab.com/handbook/security/threat_modeling/#samples-of-pasta-evaluations">GitLab</a> and <a href="https://versprite.com/blog/application-security/threat-modeling/organizational-threat-model-enterprise-risk-assessment/">Versprite</a> do (<em>a variation of it atleast</em>).<li>The <em>secret sauce</em> of <a href="#pasta">PASTA</a> (<em>get it?</em>) is its obsessive focus on <strong>threats</strong>, and mapping out <em>exactly</em> how those threats can be realized, or prevented.</ul><hr width="33%" /><h2 id="octave">OCTAVE</h2><p><strong>Operationally Critical Threat, Asset and Vulnerability Evaluation</strong> (<strong><a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=13473">OCTAVE</a></strong>) <a href="https://resources.sei.cmu.edu/asset_files/TechnicalReport/1999_005_001_16769.pdf"><i class="ph ph-file-text"></i><a></a> is an organization-focused framework for identifying and managing information security risks. It was published in 1999 by researchers of the <a href="https://www.sei.cmu.edu">Software Engineering Institute at Carnegie Mellon</a>. Similar to <a href="#methodologies">other</a> threat modeling methodologies, OCTAVE includes steps for identifying assets, threats and <a href="#vulnerability-catalogs">vulnerabilities</a>. OCTAVE-based assessments include <strong>8</strong> distinct processes across <strong>3</strong> <a href="#the-phases--and-processes-of-octave">phases</a>. <strong><a href="#references"><sup>13</sup></a></strong></a><h6 id="octave-variants">OCTAVE Variants</h6><p>In addition to the original <a href="#octave">OCTAVE</a> model, two variations of the methodology were also subsequently published. All <strong>3</strong> are listed below. <strong><a href="#references"><sup>13</sup></a></strong><ul><li><a href="#octave">OCTAVE</a> (<em>1999</em>)<li><a href="#octave-s">OCTAVE-S</a> (<em>2003</em>)<li><a href="#octave-allegro">OCTAVE Allegro</a> (<em>~2007</em>)</ul><h6 id="the-phases--processes-of-octave">The Phases &amp; Processes of OCTAVE</h6><p>Rather than provide detailed explanations of each <em>phase</em> and <em>process</em> of <a href="#octave">OCTAVE</a>, I provide only the high-level description of each below. For more prescriptive guidance on how to accomplish the steps within each phase/process, I would recommend referencing similar sub-processes described from the <a href="#methodologies">other methodologies</a> in this guide or by consulting the <a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=13473">official OCTAVE publication</a> <strong>**</strong>. <strong><a href="#references"><sup>13</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/octave-phases.png" alt="Octave" /></center><ul><li><strong>Phase 1: Organizational View</strong> - Inventory assets, develop a threat profile, gather knowledge from across the enterprise and establish security requirements.<ul><li>Process 1: <em>Identify Enterprise Knowledge</em><li>Process 2: <em>Identify Operational Area</em><li>Process 3: <em>Identify Staff Knowledge</em><li>Process 4: <em>Establish Security Requirements</em></ul><li><strong>Phase 2: Technological View</strong> - Inventory high-priority systems and identify infrastructure policy gaps, <a href="#vulnerability-catalogs">vulnerabilities</a> and organizational weaknesses.<ul><li>Process 5: <em>Map High-Priority Information</em><li>Process 6: <em>Perform Infrastructure Vulnerability Evaluation</em></ul><li><strong>Phase 3: Strategy and Plan Development</strong> - <a href="#risk-assessment-models">Calculate risk</a> by analyzing gathered assets, threats and vulnerabilities. Produce a prioritized list of risks, a protection strategy and a risk management plan.<ul><li>Process 7: <em>Conduct Multi-Dimensional Risk Analysis</em><li>Process 8: <em>Develop Protection Strategy</em></ul></ul><p><strong>** Note:</strong> I may re-visit this section in the future to add additional depth, but for now I have left it pretty bare-bones. I‚Äôve done this because I really <a href="#thoughts-on-octave">don‚Äôt care for</a> this methodology.<h6 id="thoughts-on-octave">Thoughts on OCTAVE</h6><p>With <a href="#octave">OCTAVE</a>, there is a heavy emphasis in <em><a href="#the-phases--processes-of-octave">Phase 1</a></em> on meticulous and (overly) exhaustive knowledge gathering from across the enterprise. Senior managers, operational managers and rank-and-file staff are <em>all</em> consulted. Though I believe any good <a href="#intro-to-threat-modeling">threat modeling</a> approach will leverage system owners / organizational stakeholders to describe their systems and discuss the threats / risks / controls that exist within the target system from their perspective, OCTAVE seems to rely exclusively on these system owners rather than dedicated security staff. Though these system owners surely possess authoritative knowledge about their own system(s), they lack the security depth to be effective in providing a meaningful list of threats and <a href="#control-frameworks">security controls</a>.<p>The goal for <em>Phase 1</em> of an OCTAVE engagement is to establish <strong>security requirements</strong>. Personally, I think security requirements should be an <em>input</em> into a threat modeling exercise, rather than an output or goal. Requirements are not really system-specific, rather they should be adopted organization-wide then used to influence and provide boundaries for subsequent threat models. With that said, I see the benefits of using OCTAVE in the nascent stages of information security program development as a way to define threat / risk-informed security requirements.<p>One thing OCTAVE nails in my mind is the exercise of identifying high-priority components within the target system. Once determined, denote these components within the larger asset map to better understand critical <em>attack paths</em>.<p>In <em>Process 6</em> of OCTAVE, ‚Äú<em>Perform Infrastructure Vulnerability Evaluation</em>‚Äù, the assessment team is tasked with <em>selecting intrusion scenarios</em>. This is to be done based solely on previously gathered characteristics of the enterprise but makes no mention of using actual <strong><a href="#cyber-threat-intelligence-cti">threat intelligence</a></strong>. This is a huge blind spot in my opinion. Sure, you can certainly speculate (<em>and wildly so</em>) as to all of the potential intrusion scenarios in an environment but having an intel-informed approach will yield much better risk-driven results in the end.<p>Overall, I find OCTAVE tedious, complex and confusing, especially when applied in a more tactical threat modeling sense as its highly prescriptive set of steps is undeniably time-consuming. But don‚Äôt take it from me, the <a href="https://www.sei.cmu.edu/">SEI</a> team themselves say as much in a <a href="#octave-allegro">subsequent (more simplified) OCTAVE release</a>‚Ä¶<blockquote><p>‚Äú<em>Finally, given the size and complexity of the OCTAVE method, it is easy to imagine that some organizations have significant challenges in embracing and using the OCTAVE approaches. Absorbing hundreds of pages of process documentation, understanding the accompanying worksheets and how to use them, and collecting and organizing the needed data can be challenging tasks. Upon reflection, the sheer volume of data collection is an impediment for some organizations in moving forward with performing the tasks of analyzing and mitigating risks. A streamlined process that reduces ambiguity and is more structured may be more applicable to the needs of organizations that find the existing OCTAVE methods too cumbersome to use.</em>‚Äù</blockquote><p>To OCTAVE‚Äôs credit however, I don‚Äôt consider it exclusively a system threat modeling methodology, rather one that is wrapped in a larger risk assessment / management model and meant to evaluate an organization as a whole rather than targeting a specific system. After all, it is defined as a <em>framework for identifying and managing information security risks</em>. When you start to delve into the risk ‚Äúmanagement‚Äù side of things, you start to tread beyond the more limited-scoped responsibilities of <a href="#simplified-threat-modeling">typical threat modeling</a>.<h4 id="octave-s">OCTAVE-S</h4><p><strong><a href="https://resources.sei.cmu.edu/asset_files/handbook/2005_002_001_14273.pdf">OCTAVE-S</a></strong> is a (<em>mildly less complex</em>) variation of <a href="#octave">OCTAVE</a> classic, (published in 2003) tailored to constrained, less hierarchical organizations. It is meant to be conducted by a small team (3-5 people) of inter-disciplinary individuals with broad knowledge of the organization. In reality, it‚Äôs pretty much the same process (<em><a href="#thoughts-on-octave">with the same flaws</a></em>) and with only two notable differences.<ol><li>OCTAVE-S assessments are conducted by a small team rather than having expansive, formal workshops across the organization interviewing all managers and technical staff. This <em>potentially</em> helps reduce <em>some</em> overhead but the data needed as input(s) across all the phases does not materially change (<em>with the exception of the bullet below</em>).<li>Exclusion of technical vulnerability data in favor of evaluating higher-level secure configuration processes. The expectation is that smaller organizations outsource or otherwise have abstracted processes which would limit the ability (or need) to gather this more granular vulnerability data.</ol><h4 id="octave-allegro">OCTAVE Allegro</h4><p><strong><a href="https://resources.sei.cmu.edu/asset_files/TechnicalReport/2007_005_001_14885.pdf">OCTAVE Allegro</a></strong> (<em>circa 2007</em>) is the final distillation of the original <a href="#octave">OCTAVE</a> methodology, the goal of which is to produce more robust results without the need for extensive risk assessment knowledge. In other words, it more closely resembles an <a href="#intro-to-threat-modeling">actual threat modeling</a> process and less-so a comprehensive <a href="#risk-assessment-models">risk assessment framework</a>. The process flow for OCTAVE Allegro is depicted below. <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/octave-allegro.png" alt="OCTAVE Allegro" /></center><h5 id="thoughts-on-octave-allegro">Thoughts on OCTAVE Allegro</h5><p>It‚Äôs great that the OCTAVE team realized that <a href="#octave">OCTAVE</a> and <a href="#octave-s">OCTAVE-S</a> were overly cumbersome and I think the <a href="#octave-allegro">Allegro</a> variant is a decent model with some worthwhile bits. With that said, it ultimately would not be my <a href="#intro-to-threat-modeling">threat modeling</a> scheme of choice in <em>any</em> context.<p>OCTAVE Allegro introduces some over-indulgent concepts such as information ‚Äúcontainers‚Äù and ‚Äúenvironment maps‚Äù. The <em>environment map</em> seeks to capture all places (what they refer to as <em>containers</em>) where an ‚Äúasset‚Äù is stored / transported / processed and must then be classified as ‚Äútechnical‚Äù, ‚Äúphysical‚Äù or ‚Äúpeople‚Äù. I‚Äôm not saying there is no security value in capturing this level of detail, just that it is overly-involved and has low <a href="https://www.investopedia.com/terms/r/returnoninvestment.asp">RoI</a>.<h6 id="risk-measurement-criteria">Risk Measurement Criteria</h6><p>One aspect of OCTAVE Allegro I think is unique and pretty useful is the concept of defining <strong>risk measurement criteria</strong>. I think this criteria is something that should be established at an organization-wide level, rather than attributed to a specific threat model, but nevertheless this concept has real value. One of the hardest aspects of threat modeling and more broadly, risk assess-ing is understanding and calculating true business risk / impact. By taking the time to formally develop risk measurement criteria, you will ultimately be more successful in creating truly risk-prioritized outcomes from your threat modeling assessments. Some examples of risk categories from OCTAVE Allegro are listed below.<ul><li>Reputational / customer confidence (<em>e.g. customer loss, brand degradation</em>)<li>Financial (<em>e.g. operating costs, revenue loss, one-time loss</em>)<li>Productivity (<em>e.g. staff hours</em>)<li>Safety and health (<em>e.g. life, health, safety</em>)<li>Fines / legal penalties (<em>e.g. fines, lawsuits, investigations</em>)<li><em>or a</em> User-defined impact area</ul><hr width="33%" /><h2 id="trike">Trike</h2><p><strong><a href="http://www.octotrike.org">Trike</a></strong> (<em>circa 2006</em>) is a unified, conceptual framework for security auditing from a risk management perspective through the generation of <a href="#trike-modeling-phases">various models</a>. Trike‚Äôs distinguishing features are its high level of automatability, defensive-focus and purpose-built (<a href="https://github.com/octotrike/trike">open-source</a>) <a href="http://www.octotrike.org/tools.html#standalone">Trike tool</a>. The <a href="http://www.octotrike.org/papers/Trike_v1_Methodology_Document-draft.pdf">Trike v.1</a> threat modeling process is defined by its <strong>4</strong> distinct <a href="#trike-modeling-phases">modeling phases</a> (listed below). <strong><a href="#references"><sup>14</sup></a></strong><h6 id="trike-modeling-phases">Trike Modeling Phases</h6><ol><li><a href="#trike-requirements-model">Requirements Model</a><li><a href="#trike-implementation-model">Implementation Model</a><li><a href="#trike-threat-model">Threat Model</a><li><a href="#trike-risk-model">Risk Model</a></ol><h3 id="trike-requirements-model">Trike Requirements Model</h3><p>A <a href="#trike">Trike</a> threat model begins by first building the <strong>requirements model</strong>. To do so, the following inputs are needed.<ul><li>Understanding of what the system is <em>intended</em> to do at a high level (i.e. an <em><a href="#pasta-stage-1-define-objectives">application profile</a></em>).<li>The <strong>Actors</strong> (human) who are interacting with the system.<li>The <strong>Assets</strong> that actors interact with. Assets are discrete data entities or physical objects with inherent value within the system.<li>The (business-defined) <strong>intended actions</strong> that are taken by said actors.<ul><li>Actions can be decomposed via <strong>CRUD</strong> (i.e. ‚Äúcreate‚Äù, ‚Äúread‚Äù, ‚Äúupdate‚Äù and ‚Äúdelete‚Äù).<li><em>Unintentional behavior</em> is not included within the requirements model.</ul><li>The <strong>Rules</strong> that exist within the system to constrain an actors actions.<ul><li>Rules for an action are a set of declarative sentence fragments connected by logical connectives (‚Äú<em>and</em>‚Äù, ‚Äú<em>or</em>‚Äù and ‚Äú<em>not</em>‚Äù).</ul></ul><p>These inputs are ultimately expressed in a tabular format referred to as an <strong><a href="#access-control-matrix">actor-asset-action matrix</a></strong> (<strong>AAA</strong>). In an <em>AAA matrix</em>, columns are assets, rows are actor roles and cells are quad-divided for each <em>C-R-U-D</em> action. Each respective action-cell can be set to <em>allowed</em>, <em>disallowed</em> or <em>action with rules</em>. An example of what this matrix could look like is provided below.<h6 id="access-control-matrix">Access Control Matrix</h6><p>An <em>actor-asset-action-matrix</em> is also referred to as an <strong>access control matrix</strong>.<p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/trike-actor-asset-action-matrix.png" alt="Actor-Asset-Action Matrix" /><p><i class="ph ph-download"></i> <em>The <a href="http://sourceforge.net/apps/trac/trike/browser/spreadsheet/trunk/docs/help/TrikeHelp.xlsx">Trike help spreadsheet can be download here</a></em>. (<strong>Warning</strong>: It is a truly unwieldy beast.)<p><i class="ph ph-download"></i> <em>You can download my</em> <em><a href="https://github.com/shellsharks/assorted/blob/master/resources/trike-actor-asset-action-matrix.xlsx">actor-asset-action matrix file here</a></em>.<h3 id="trike-implementation-model">Trike Implementation Model</h3><p>Once the <a href="#trike-requirements-model">requirements model</a> has been defined, a <a href="#data-flow-diagram">data flow diagram</a> (DFD) should be created. Within the DFD, other <strong>implementation</strong> details should be captured such as:<ul><li>Process technologies (e.g. OS, libraries, platforms, versions, etc‚Ä¶)<li>Data store type (e.g. file store, database, registry entry, version info, etc‚Ä¶)<li>Data flow protocols and directionality<li>Trust boundaries and what enforces them<li>Other <a href="#control-frameworks">security technologies</a> and where they are used (i.e. encryption, authentication, authorization, firewalls, certificates, passwords, etc‚Ä¶)</ul><p>With the DFD in-hand, we begin creating / layering <strong><a href="#use-flow-map">use flows</a></strong> by taking each action defined in the system <em>requirements model</em> and tracing that action‚Äôs path through the DFD. Use flows are broken into segments when traversing an external interactor (this includes when traversing a user). <strong>*</strong> <em>Use flows are an experimental feature of <a href="#trike">Trike</a></em>.<h6 id="use-flow-map">Use Flow Map</h6><p><strong>* Note</strong>: In a future update to this guide, I will provide details and a depiction of a <strong>Use Flow</strong> map in a threat modeling context. <em>Stay tuned!</em><h3 id="trike-threat-model">Trike Threat Model</h3><p>To build a <a href="#trike">Trike</a> <strong>threat model</strong>, we begin with <em>threat generation</em>. Within Trike, threats are defined as anything <em>more</em> or <em>less</em> than the intended actions. Threats are <em>always</em> events rather than specific (threat) actors. Threats within a system are purely deterministic, given the <em>actor-asset-action matrix</em>. In other words, given a static matrix, the same set of threats should be generated regardless of who is running the exercise. The threat taxonomy for Trike is extremely simple, with only two categories - <strong>Denial of Service</strong> (<strong>DoS</strong>) and <strong>Elevation of Privilege</strong> (<strong>EoP</strong>). Let‚Äôs contrast this to the threat taxonomy first introduced by <a href="#stride">STRIDE</a>.<ul><li><strong>Spoofing</strong>: Trike considers spoofing an ‚Äúattack‚Äù rather than a threat in <em>most</em> cases. However you slice it, Trike equates <em>spoofing</em> to a (<em>Type 2</em>) EoP whereby an actor is able to violate a rule.<li><strong>Tampering</strong> &amp; <strong>Information Disclosure</strong>: Both are <em>also</em> considered instances of (<em>Type 2</em>) EoP within Trike.<li><strong>Denial of Service</strong> (<strong>DoS</strong>): When a legitimate action is <em>denied</em>. One DoS threat is generated for each intended action.<li><strong>Elevation of Privilege</strong> (<strong>EoP</strong>):<ul><li><em>Type 1</em>: When an actor performs an action which no actor is intended to perform on an asset.<li><em>Type 2</em>: When an actor performs an action on an asset despite the rules for that action.<li><em>Type 3</em>: When an actor uses the system to perform an action on some other system‚Äôs asset (i.e. the ‚Äú<em>social responsibility</em>‚Äù threat).</ul></ul><p>From here, <em><a href="#attack-trees">attack trees</a></em> should be generated for threats. <strong>*</strong> Trike recommends trees be expanded only to the point where there is enough information to reasonably decide whether the risk caused by the threat has been reduced to an acceptable risk level. This will limit the overhead of having to complete an entire tree for <em>every</em>. <em>single</em>. threat.<h3 id="trike-risk-model">Trike Risk Model</h3><p><a href="#trike">Trike</a> employs a <em>quantitative</em> approach to risk modeling, and describes it as ‚Äú<em>highly experimental</em>‚Äù. As with everything in the Trike world though, it is quite formal and explicitly defined. To perform the Trike <strong>risk model</strong>, we calculate <a href="#trike-impact-calculation">impact</a> &amp; <a href="#trike-likelihood-calculation">likelihood</a> as defined below.<h6 id="trike-impact-calculation">Trike Impact Calculation</h6><ol><li>First, assign all assets within the defined system a dollar (<strong>$</strong>) amount based on its inherent business value.<li>On a scale from 1-5 (5 being the most undesirable), rank each defined action-to-asset pair (this is a qualitative measure). Each pair should be ranked twice:<ul><li>(1) For when an authorized action <em>cannot</em> be completed in accordance with the rules (i.e. <em>the DoS threat impact/exposure metric</em>), <em>and‚Ä¶</em><li>(2) For when an attacker completes an action despite the rules which disallow it (i.e. <em>the EoP threat impact/exposure metric</em>)</ul><li>On a scale from 1-5 (where the most untrusted (likely <em>anonymous</em>) is a 5), rank each actor within the defined system.</ol><p>Now with these inputs, we can create an <em>exposure</em> value for each threat. The exposure calculation is the <em>value of the asset</em> multiplied by the <em>action-specific threat impact score</em>.<h6 id="trike-likelihood-calculation">Trike Likelihood Calculation</h6><p>Having completed the <em><a href="#attack-trees">attack tree(s)</a></em> in the <a href="#trike-threat-model">threat modeling</a> phase, we should now have a <a href="#vulnerability-catalogs">catalog</a> of discovered weaknesses &amp; vulnerabilities. The second step (probability calculation) of <a href="#trike">Trike‚Äôs</a> risk modeling approach is to take each weakness / vulnerability and rank them on three separate scales (again from 1-5).<ul><li><strong>Reproducibility</strong>: How easy a given weakness is to reproduce.<li><strong>Exploitability</strong>: How technically easy an attack is to conduct.<li><strong>Actor Risk</strong>: The risk value attached to the <em>least</em> trusted actor who is able to target the weakness (<em>this was calculated in Step 3 of the</em> <em><a href="#trike-impact-calculation">impact calculation</a></em>).</ul><p><strong>*</strong> <em>While performing these rankings, consider the mitigations that currently exist along the identified attack paths and whether those mitigations reduce the score(s).</em> (<em>see</em> <a href="#quantitative-threat-modeling-qtmm">QTMM, Stage 5</a>)<p>With these three scores, we can now calculate the final <em>probability</em> of a weakness by multiplying all three subscores. <strong>*</strong> <em>Trike defines an additional process for further calculating vulnerability probability by examining parallel success paths in the attack tree, but for the sake of this write-up we will forgo explaining this.</em><p><em>OK!</em> Now that we have <em>both</em> the <a href="#trike-impact-calculation">impact</a> and <a href="#trike-likelihood-calculation">likelihood</a> scores, we can calculate the final risk score by multiplying everything together. For each threat, simply use the <em>highest</em> calculated applicable vulnerability risk. An example of what this risk calculation might look like is provided below. It‚Äôs <em>very</em> involved as you can see. As you scale assets and actors, the calculations can grow geometrically‚Ä¶<p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/trike-risk-calculator.png" alt="Risk Calculation Spreadsheet" /><p><i class="ph ph-download"></i> <em>I‚Äôve provided my</em> <em><a href="https://github.com/shellsharks/assorted/blob/master/resources/trike-risk-calculator.xlsx">sample risk calculator spreadsheet here</a></em>.<h2 id="thoughts-on-trike">Thoughts on Trike</h2><p>Though not perfect, overall I like <a href="#trike">Trike</a>. Its <em>defensive-focused</em> approach coupled with its highly formalized nature make it fairly unique in the <a href="#methodologies">threat modeling space</a>. Below, I provide a list of other incongruous thoughts about Trike.<ul><li>Despite what the <a href="http://www.octotrike.org">authors say</a> - ‚Äú<em>Trike was built to bring efficiency and effectiveness to existing threat modeling methodologies</em>‚Äù - I‚Äôm not sure how you cleanly apply this methodology as an overlay to others. As I spend more time with it, my feelings on this may soften, but I expect the highly formalized nature of Trike to not blend so well with <a href="#methodologies">other methodologies</a>.<li>Much like <a href="#vast">VAST</a>, automation &amp; scalability are key. Unlike VAST though, Trike does not dispense with the consultation of actual security experts (<em>phew</em>!).<li>Somewhat counterintuitively, Trike <em>doesn‚Äôt</em> require knowledge of, or establishment of, a dedicated <a href="#cyber-threat-intelligence-cti">CTI</a> source for generation of threats. Instead, threat generation is formed in a ‚Äúdefensive‚Äù manner by simply defining exactly how the system should work and designating anything <em>not</em> defined as a threat.<li>The problem with building a complete <a href="https://en.wikipedia.org/wiki/Finite-state_machine">state-machine</a> model (which is what Trike prescribes) for a given system is that to do so, it is (<em>very likely</em>) a complex and time-consuming effort as the scope of your target system expands.<li>With that said, if you can achieve a well-defined state-machine for the target system, you gain a very <strong>pure</strong> level of repeatability when it comes to performing automated threat models. Simply feed the same inputs in (<a href="#attack-libraries">attack library</a>, <a href="#trike-implementation-model">implementation model</a>, etc‚Ä¶) and you‚Äôll get the same outputs!<li>The Trike <a href="http://www.octotrike.org/contact">authors</a> claim the framework / <a href="http://www.octotrike.org/tools">tool</a> is under <em>heavy development</em> but evidence is to the contrary. Their last published <a href="http://www.octotrike.org/talks">talk</a> was in 2012, the last update for their <a href="https://sourceforge.net/projects/trike/files/trike/1.1.2a/">tool</a> (hosted on <a href="http://sourceforge.net">SourceForge</a> of all places - but now points to <a href="https://github.com/octotrike/trike">GitHub</a>) was in 2019 and the <a href="http://www.octotrike.org/faq#question_3">FAQ</a> suggested a <em>v2</em> of the tool would be released (maybe) in 2013. (It‚Äôs 2022 and still no <em>v2</em>‚Ä¶)<li>Some of the more detailed, systematic sub-processes of Trike are particularly‚Ä¶ <em>not-human-friendly</em>. See <em>Section 2.1</em> of the <a href="http://www.octotrike.org/papers/Trike_v1_Methodology_Document-draft.pdf">Trike v.1</a> white paper to see what I mean. Of course this is where the <a href="http://www.octotrike.org/tools.html#standalone">tool</a> comes into play. I wouldn‚Äôt recommend hand-jamming a Trike threat model to the letter‚Ä¶ <em>very sweaty</em>.<li>There are a number of other author-stated capability gaps within Trike‚Ä¶<ul><li>No support for the creation of <a href="#data-flow-diagram">DFDs</a>.<li><a href="#attack-trees">Attack trees</a> are not auto-generated.<li>Trike doesn‚Äôt come preloaded with a managed <a href="#attack-libraries">attack library</a>.</ul></ul><hr width="33%" /><h2 id="linddun">LINDDUN</h2><p><strong><a href="https://www.linddun.org">LINDDUN</a></strong> <a href="https://people.cs.kuleuven.be/~kim.wuyts/LINDDUN/LINDDUN.pdf"><i class="ph ph-file-text"></i></a> (<em>circa 2010</em>) is a <strong>privacy</strong>-focused + threat-based, threat modeling methodology. The <a href="https://www.linddun.org/linddun">LINDDUN privacy engineering framework</a> provides a systematic approach to identifying privacy threats in software systems. This methodology consists of <strong>3</strong> fundamental steps (depicted below). <strong><a href="#references"><sup>15</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/linddun_steps.png" alt="LINDDUN Steps" width="650px" /></center><p><strong>Step 1: Model the system</strong> - LINDDUN relies on a traditional <a href="#data-flow-diagram">data flow diagram</a> to model the system.<p><strong>Step 2: Elicit threats/risks</strong> - Each element (e.g. entity, data store, data flow and process) within the model should be analyzed for potential threats. A 2-dimensional matrix (i.e. <em>mapping table</em>) is built, denoting (i.e. with an ‚Äò<em>X</em>‚Äô) which components have potential threats across each of the <a href="#linddun-threat-categories">7 threat categories</a>. For each <em>X</em> in the generated table, a <strong>threat tree</strong> (similar to an <a href="#attack-trees">attack tree</a>, <em>see</em> <a href="https://www.linddun.org/linddun">Step 2C. Document threats of the LINDDUN framework</a>) can be created to determine likely <em>attack paths</em>. The <strong>7</strong> privacy threat categories (linked to their respective threat tree catalogs) are listed below. <strong><a href="#references"><sup>16</sup></a></strong><h6 id="linddun-threat-categories">LINDDUN Threat Categories</h6><p>The <strong>threat categories</strong> below represent <strong>7</strong> distinct privacy-oriented issues that may be found within a system. (These resemble the <a href="#privacy-protection-goals-ppgs">QTMM PPGs</a>).<ol><li><strong><a href="https://www.linddun.org/linkability">Linkability</a></strong>: An adversary is able to link two items of interest without knowing the identity of the data subject(s) involved. (<em>Desired Property</em>: <strong>Unlinkability</strong>)<li><strong><a href="https://www.linddun.org/identifiability-1">Identifiability</a></strong>: An adversary is able to identify a data subject from a set of data subjects through an item of interest. (<em>Desired Property</em>: <strong>Anonymity</strong> / <strong>pseudonymity</strong>)<li><strong><a href="https://www.linddun.org/non-repudiation">Non-repudiation</a></strong>: The data subject is unable to deny a claim. (<em>Desired Property</em>: <strong>Plausible deniability</strong>)<li><strong><a href="https://www.linddun.org/detectability">Detectability</a></strong>: An adversary is able to distinguish whether an item of interest about a data subject exists or not, regardless of being able to read the contents itself. (<em>Desired Property</em>: <strong>Undetectability</strong> / <strong>unobservability</strong>)<li><strong><a href="https://www.linddun.org/disclosure-of-information">Disclosure of information</a></strong>: An adversary is able to learn the content of an item of interest about a data subject. (<em>Desired Property</em>: <strong>Confidentiality</strong>)<li><strong><a href="https://www.linddun.org/unawareness">Unawareness</a></strong>: The data subject is unaware of the collection, processing, storage, or sharing activities (and corresponding purposes) of the data subject‚Äôs personal data. (<em>Desired Property</em>: <strong>Content awareness</strong>)<li><strong><a href="https://www.linddun.org/non-compliance">Non-compliance</a></strong>: The processing, storage, or handling of personal data is not compliant with legislation, <a href="#compliance-frameworks">regulation</a>, and/or policy. (<em>Desired Property</em>: <strong>Policy and consent compliance</strong>)</ol><center><img alt="MS Threat Modeling" src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/linduun.png" width="400px" /></center><p><strong>Step 3: Manage threats</strong> - Threats should be prioritized via <a href="#risk-assessment-models">risk assessment</a> (one of your choosing, as <a href="#linddun">LINDDUN</a> does not prescribe a specific framework) and <a href="#control-frameworks">mitigations</a> should be selected (LINDDUN so graciously provides a <a href="https://www.linddun.org/mitigation-strategies-and-solutions">mitigation strategy taxonomy</a>).<h6 id="thoughts-on-linddun">Thoughts on LINDDUN</h6><p><a href="#linddun">LINDDUN</a> is cleanly documented, simple and unique. It is purpose-built for the increasingly-important world of <strong>privacy</strong>. It doesn‚Äôt seek to reinvent the wheel, instead leaning on widely adopted strategies for modeling systems (<a href="#data-flow-diagram">DFDs</a>), mapping attack paths (<a href="#attack-trees">attack trees</a>) and <a href="#risk-assessment-models">prioritizing findings</a>. The <a href="https://www.linddun.org/about">LINDDUN team</a> provides easy-to-use <a href="https://www.linddun.org/downloads">resources</a>, <a href="https://www.linddun.org/linddun-threat-catalog">threat tree libraries</a>, <a href="https://www.linddun.org/mitigation-strategies-and-solutions">mitigation catalogs</a> and literally everything else you would need to be successful in conducting a privacy-oriented threat model.<hr width="33%" /><h2 id="vast">VAST</h2><p><strong>Visual, Agile and Simple Threat</strong> (<strong><a href="https://go.threatmodeler.com/threat-modeling-methodologies">VAST</a></strong>) modeling is an abstract methodology from the team at <a href="https://threatmodeler.com/">ThreatModeler</a>. VAST is keenly focused on <a href="https://threatmodeler.com/scalable-threat-modeling-practice/">scalability</a>, which in this context can be described as the use of <em>automation</em>, <em>integration</em> and <em>collaboration</em> to perform <a href="#intro-to-threat-modeling">threat modeling</a> in an <a href="https://www.agilealliance.org/agile101/">Agile</a> practice. Other important tenants of VAST include providing a self-service model that does not rely on dedicated security expertise, as well as one that will produce valuable, actionable outputs for inter-disciplinary stakeholders. To visualize security concerns at both the application and infrastructure layers, VAST leverages <a href="https://threatmodeler.com/operational-application-threat-modeling/">two different types of threat modeling styles</a> - <em><a href="#application-threat-model">application threat models</a></em> and <em><a href="#operational-threat-model">operational threat models</a></em>. Application modeling focuses on the application itself using <strong>process-flow diagrams</strong> while operational modeling goes beyond the application, visualizing the interconnected infrastructure in which the application resides using traditional <strong>data-flow diagrams</strong> (<a href="#data-flow-diagram">DFDs</a>). Examples of these two modeling techniques are provided below. <strong><a href="#references"><sup>17</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>18</sup></a></strong><h6 id="application-threat-model">Application Threat Model</h6><p>Depicted below is an <strong>Application Threat Model</strong>, visualized using a <em>process-flow diagram</em>. <strong><a href="#references"><sup>18</sup></a></strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/vast-application-threat-model.jpg" alt="VAST Application Threat Model" /><h6 id="operational-threat-model">Operational Threat Model</h6><p>Depicted below is an <strong>Operational Threat Model</strong>, visualized using a <em>data flow diagram</em> (<a href="#data-flow-diagram">DFD</a>). <strong><a href="#references"><sup>18</sup></a></strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/vast-operational-threat-model.jpg" alt="VAST Operational Threat Model" /><h6 id="principles-of-vast">Principles of VAST</h6><p>The essential ingredient for <a href="https://threatmodeler.com/">ThreatModeler</a>‚Äôs version of <a href="#vast">VAST</a> is of course their <a href="https://threatmodeler.com/threatmodeler/#threatmodeler">commercial tool</a> which comes preloaded with a proprietary <em>threat library</em> and is capable of performing <em>automated</em> threat modeling. In a more abstract sense, VAST can be thought of less as an actual <a href="#intro-to-threat-modeling">threat modeling methodology</a> and more-so as a set of principles by which <a href="#methodologies">other</a> threat modeling methodologies should strive toward. These principles very transparently being‚Ä¶<ul><li><strong>Visual</strong>: Leverage multiple visualization techniques such as ‚Äú<a href="#application-threat-model">application</a>‚Äù and ‚Äú<a href="#operational-threat-model">operational</a>‚Äù modeling to best understand and document assets, data flows, threats and ultimately, risks from a variety of perspectives.<li><strong>Agile</strong>: VAST requires the use of a <a href="#tooling">tool</a> (such as <a href="https://threatmodeler.com/threatmodeler/#threatmodeler">ThreatModler‚Äôs tool</a>, but doesn‚Äôt necessarily <em>have</em> to be) that is easily automatable within a <a href="https://about.gitlab.com/topics/devops/">DevOps</a> pipeline. This provides scalability and consistent repeatability.<li><strong>Simple</strong>: Simplicity is key, as <a href="https://www.schneier.com/news/archives/2012/12/complexity_the_worst.html">complexity hinders</a> repeatability and scalability. As we know from our review of <a href="#octave">OCTAVE</a>, having an <em>overly thorough</em> process is not necessarily a benefit.<li><strong>Threat</strong>: Threats are the name of game! By focusing on threats, we most effectively determine true risks to a system.</ul><h6 id="thoughts-on-vast">Thoughts on VAST</h6><p>The efficacy of VAST in the context of its implementation via the <a href="https://threatmodeler.com/threatmodeler/#threatmodeler">ThreatModeler tool</a> is not something I can speak to, as evaluating it would require access to, and experience with the ThreatModeler tool itself. With that said, I think a model which abides by the <a href="#principles-of-vast">VAST principles</a>, can be done at scale, can be performed by anyone, and in the end, yield actionable results, is about as ideal of a form that a <a href="#intro-to-threat-modeling">threat modeling methodology</a> can take. <em>Sure</em>, VAST may not produce the same <em>depth</em> of findings, or the <em>perfectly</em> prioritized list of risks that some of the <a href="#methodologies">other methodologies</a> might, but what good are those other methodologies if they are too cumbersome (looking at you <a href="#octave">OCTAVE</a>) to use at scale?<h6 id="threat-modeling-methodology-comparison">Threat Modeling Methodology Comparison</h6><p>Below you can see <a href="https://threatmodeler.com">ThreatModeler‚Äôs</a> take on how different, popular threat modeling methodologies compare (<em>which I think is a pretty genuine, mostly unbiased attempt</em>). <strong><a href="#references"><sup>17</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/vast-threat-model-comparison.png" alt="VAST Threat Modeling Comparison Chart" width="900px" /></center><hr width="33%" /><h2 id="data-centric-system-threat-modeling-nist-sp-800-154">Data-Centric System Threat Modeling, NIST SP 800-154</h2><p><strong><a href="https://csrc.nist.gov/publications/detail/sp/800-154/draft">NIST Special Publication 800-154: Guide to Data-Centric System Threat Modeling</a></strong> <a href="https://csrc.nist.gov/CSRC/media/Publications/sp/800-154/draft/documents/sp800_154_draft.pdf"><i class="ph ph-file-text"></i></a>, published by the <em><a href="https://www.nist.gov">National Institute of Standards and Technology</a></em> (i.e. <em>NIST</em>), describes threat modeling as, ‚Äú<em>‚Ä¶a form of risk assessment that models aspects of the attack and defense sides of a particular logical entity, such as a piece of data, an application, a host, a system, or an environment.</em>‚Äù This particular guide to <a href="#intro-to-threat-modeling">threat modeling</a> focuses on protecting <em>data</em> rather than <em>systems</em>, and is meant to define a set of principles that <a href="#methodologies">other methodologies</a> could also adopt. Below, I have briefly summarized the <a href="#data-centric-system-threat-modeling-steps">steps</a> of this threat modeling methodology. <strong><a href="#references"><sup>21</sup></a></strong><h6 id="data-centric-system-threat-modeling-steps">Data-Centric System Threat Modeling Steps</h6><p>This section contains the steps for conducting a <em>data-centric</em> threat modeling exercise (<em>per <a href="https://csrc.nist.gov/publications/detail/sp/800-154/draft">NIST SP 800-154</a>, Section 4</em>). <strong><a href="#references"><sup>21</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/nist-threat-model-process-flow.png" alt="NIST Threat Model Steps" /></center><ul><li><strong>Step 1:</strong> Identify and characterize the system and data of interest.<ul><li><strong>Authorized data locations</strong> - For all data of interest, document where data is <em>stored</em>, how data is <em>transmitted</em>, in what <em>environments</em> data is processed, how data is <em>input</em> into the system and finally, how data is <em>output</em> from the system.<li><strong>Security objectives</strong> - What are the <em>confidentiality</em>, <em>integrity</em> and <em>availability</em> (<strong>CIA</strong>) requirements for the data within the system?<li><strong>Authorized actors</strong> - What people <em>and</em> processes have an authorization-level high enough to affect the <em>security objectives</em>?<br /><br /></ul><li><strong>Step 2:</strong> Identify and select the <em>attack vectors</em> to be included in the model.<ul><li><strong>Attack vectors</strong> in this methodology can be described as <em>content</em> (typically malicious) from a <em>source</em> (i.e. web site) acted upon by a <em>processor</em> (i.e. web browser). An attack vector example given in the publication is, ‚Äú<em>Malicious web page content (content) downloaded from a web site (source) by a vulnerable web browser (processor).</em>‚Äú<br /><br /></ul><li><strong>Step 3:</strong> Characterize the <a href="#control-frameworks">security controls</a> for mitigating the attack vectors. i.e., for each <em>attack vector</em> from <em>Step 2</em>‚Ä¶<ol><li>Identify a (feasbile) mitigating control.<li>Evaluate assumed effectiveness of the selected control.<li>Estimate negative implications (e.g. cost, usability/performance degradation, LoE, etc‚Ä¶) of implementing that control.<br /><br /></ol><li><strong>Step 4:</strong> Analyze the threat model.<ul><li><a href="#data-centric-system-threat-modeling-nist-sp-800-154">The guide</a> <em>timidly</em> suggests a couple of risk scoring approaches in this final step, none of which I think are worth regurgitating here. Essentially, (<em>as is similarly done with many <a href="#methodologies">other methodologies</a></em>) we want to take some combination of data criticality, attack vector likelihood / impact and control effectiveness, across <em>all</em> pairings and begin prioritizing risk treatments.</ul></ul><h6 id="thoughts-on-the-data-centric-approach-by-nist">Thoughts on the Data-Centric Approach by NIST</h6><p><a href="#data-centric-system-threat-modeling-nist-sp-800-154">This methodology</a> introduces some novel-ish concepts, and though it is notably light in some areas with respect to <em>executing</em> a data-centric threat modeling exercise, my verdict is that it‚Äôs a worthy addition to the overall <a href="#methodologies">methodology lineup</a>. Below I‚Äôve listed an assortment of other thoughts about what <a href="https://www.nist.gov">NIST</a> put together. <strong><a href="#references"><sup>21</sup></a></strong><ul><li><a href="https://csrc.nist.gov/publications/detail/sp/800-60/vol-1-rev-1/final">NIST SP 800-60</a> (and inherently <a href="https://nvlpubs.nist.gov/nistpubs/fips/nist.fips.199.pdf">FIPS PUB 199</a>) are specifically recommended as a supplemental guides for facilitating the categorization &amp; mapping of data. This is a critical <em>pre-Step 1</em> action.<li>I <em>really</em> like the data characteristics that this methodology asks us to identify in <em>Step 1</em>, but it is <em>very</em> light on how to <em>actually</em> inventory / identify that data. <em>This is of course the hard part.</em><li>I can appreciate the thought that went into the syntactic attack vector generation approach this methodology puts forth, but I think describing all attacks as <em>content + source + processor</em> is rather tedious and oddly patronizing.<li>This methodology caters towards the data-obsessed. I think this heavy focus on data security has <em>certain</em> merits, as in many cases a threat actor‚Äôs intended impacts are indubitably data-specific - but, there are many <em>system</em>-specific attacks that have less to do with data that would still translate to high risk for a business. For this reason I don‚Äôt recommend going all-in on a data-only approach to threat modeling.<li>Putting meaningful thought into the negative implications of each suggested control is an underrepresented part of the controls conjuration step of other threat modeling methodologies. <em>Of course this should be done</em>! After all, it‚Äôd be too easy to just unplug all our computers and throw them into the ocean - no hackers getting our data now, <strong>right?!</strong> But this just isn‚Äôt a feasible option.<li>It‚Äôs clear that the authors (<em>Murugiah Souppaya</em>, NIST and <em>Karen Scarfone</em>, Scarfone Cybersecurity) ran out of creative juices when they got to <em>Step 4</em>. They call this final step, ‚Äú<strong>Analyze the threat model</strong>‚Äù and then proceed to suggest a couple half-baked (‚Äúhalf‚Äù being <em>very</em> generous) scoring approaches for findings. ‚ÄúAnalyze‚Äù is a pretty generic term - perhaps what they meant is <em>risk model</em>? In any case, what they suggested is pretty weak.</ul><hr width="33%" /><h2 id="owasp-threat-modeling-process">OWASP Threat Modeling Process</h2><p><strong><a href="https://owasp.org/">OWASP</a></strong> has a published <strong><a href="https://owasp.org/www-community/Threat_Modeling_Process">Threat Modeling Process</a></strong> (a.k.a. ‚Äú<strong>TMP</strong>‚Äù) which consists of <strong>3</strong> (<em>very familiar</em>) steps. Their methodology borrows pretty heavily from the more well-established players (i.e. <a href="#pasta">PASTA</a> &amp; <a href="#microsoft-threat-modeling">Microsoft</a>) and is <em>unsurprisingly</em> web application-specific. I think OWASP‚Äôs own write-up is fairly to-the-point so I‚Äôll only provide a condensed version of the steps below. <strong><a href="#references"><sup>22</sup></a></strong><h6 id="owasp-tmp-steps">OWASP TMP Steps</h6><p>This section describes the steps for conducting an <a href="#owasp-threat-modeling-process">OWASP TMP</a> exercise. <a href="https://owasp.org/">OWASP</a> also provides a <a href="https://github.com/OWASP/threat-modeling-playbook">playbook</a> to assist with an assessment. <strong><a href="#references"><sup>22</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/owasp-threat-modeling-process.png" alt="OWASP TMP" /></center><ul><li><strong>Step 1</strong>: Decompose the Application<ul><li>Construct an <strong>application profile</strong> (<em>remember from <a href="#pasta-stage-1-define-objectives">PASTA</a>?</em>) - include application name, version, description, etc‚Ä¶<li><strong>Inventory</strong> and uniquely assign IDs to <strong>system components</strong> including <em>external dependencies</em>, <em>entry/exit points</em> (interfaces to/from the app), <em>assets</em> (potential targets) and <em>trust levels</em> (privileges required to interact).<li>Produce a <strong><a href="#data-flow-diagram">data flow diagram</a></strong> (DFD). <br /><br /></ul><li><strong>Step 2</strong>: Determine and Rank Threats<ul><li>Select your preferred <strong>threat classification</strong> framework. OWASP uses <a href="#stride">STRIDE</a>, but in theory, <a href="#attack-libraries">other frameworks</a> could be subbed in. The authors also reference the ‚ÄúASF‚Äù or <strong>Application Security Frame</strong>, which is another set of threats (and corresponding controls) sourced from the <a href="https://owasp.org/www-pdf-archive/OWASP_Code_Review_Guide-V1_1.pdf">OWASP Code Review Guide</a>.<li>Perform <strong>threat analysis</strong> (<em>should remind you of <a href="#pasta-stage-4-threat-analysis">PASTA</a> again</em>) by generating threats tied to components/flows within the modeled system. To facilitate this process, consider using <a href="#attack-trees">threat trees</a> and/or <a href="#use-flow-map">use/abuse flows</a>.<li><strong>Rank threats</strong> provided known risk factors using a <a href="#risk-assessment=models">risk assessment/scoring model</a> such as <a href="#dread">DREAD</a> (which is what OWASP suggests). <br /><br /></ul><li><strong>Step 3</strong>: Determine Countermeasures and Mitigation<ul><li>Map corresponding countermeasures to identified threats using an appropriate <a href="#control-frameworks">controls framework</a>.<li>Once mapped, determine <em>residual risk</em>. For example, resulting risks could simply be defined as being ‚Äúnot mitigated‚Äù, ‚Äúpartially mitigated‚Äù or ‚Äúfully mitigated‚Äù.</ul></ul><h6 id="thoughts-on-owasps-tmp">Thoughts on OWASP‚Äôs TMP</h6><p><em>Alright</em>! So here‚Äôs my list-based take on <a href="#owasp-threat-modeling-process">OWASP‚Äôs TMP</a>‚Ä¶<ul><li>I like the focus / inclusion of <em>dependencies</em> as a potential attack vector / input interface. Gives me <a href="https://docs.microsoft.com/en-us/microsoft-365/security/intelligence/supply-chain-malware">supply chain attack</a> vibes, which is <a href="https://www.mandiant.com/resources/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor">all the rage</a> these days.<li>This methodology emphasizes the concept of <em>entry points</em> (and to a lesser degree <em>exit points</em>). By understanding how/where an attacker can interface with a system we can better determine threats/attack paths.<li><em>Oh yeah!</em> <a href="#attack-trees">Threat trees</a> are back.<li>This concept of an ‚ÄúASF‚Äù (<strong>Application Security Frame</strong>) has popped up in a few threat modeling methodologies now (<a href="https://docs.microsoft.com/en-us/azure/security/develop/threat-modeling-tool-mitigations">1</a>, <a href="https://patents.google.com/patent/US7818788">2</a>, <a href="https://owasp.org/www-pdf-archive/OWASP_Code_Review_Guide-V1_1.pdf">3</a>). It is a concept I was not that familiar with prior to this research, but will more carefully consider moving forward.<li><em>Oh no</em>, <a href="#stride">STRIDE</a> and <a href="#dread">DREAD</a> are getting more stage time, how <em><a href="https://docs.microsoft.com/en-us/archive/blogs/david_leblanc/dreadful">dreadful</a></em>! <strong><a href="#references"><sup>28</sup></a></strong><li>OWASP sure doesn‚Äôt strain themselves coming up with a process for calculating residual risk. <em>Just leverage an <a href="#risk-assessment-models">existing methodology</a></em>, they say.<li>ID‚Äôing elements (i.e. dependencies, entry points, assets, trust levels) within the <a href="#data-flow-diagram">DFD</a> is awesome and <a href="https://www.synopsys.com/glossary/what-is-threat-modeling.html">looks great</a>.</ul><hr width="33%" /><h2 id="tara">TARA</h2><p><strong>Threat Assessment and Remediation Analysis</strong> (<strong><a href="https://www.mitre.org/news-insights/publication/threat-assessment-and-remediation-analysis-tara">TARA</a></strong>) <a href="https://www.mitre.org/sites/default/files/2021-10/pr-14-2359-tara-introduction-and-overview.pdf"><i class="ph ph-file-text"></i></a>, designed by <a href="https://www.mitre.org/">MITRE</a> in 2014 (not to be confused with <a href="https://media10.connectedsocialmedia.com/intel/10/5725/Intel_IT_Business_Value_Prioritizing_Info_Security_Risks_with_TARA.pdf">Intel‚Äôs TARA</a>), is described as, <em>an engineering methodology used to identify and assess cyber vulnerabilities and select countermeasures effective at mitigating those vulnerabilities</em>. What makes TARA unique is its application of a (<em>self-managed</em>) catalog of controls-to-attack-vectors and its strategies for applying specific countermeasures based on specified risk tolerance. <strong><a href="#references"><sup>23</sup></a></strong><h6 id="tara-assessment-workflow">TARA Assessment Workflow</h6><p>This section details the <a href="#tara">TARA</a> assessment process flow, as well as the actions within each of the <strong>3</strong> distinct phases of the methodology. <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/tara-assessment-workflow.png" alt="Tara Assessment Workflow" /></center><ul><li>Step 1: <strong>Cyber Threat Susceptibility Analysis</strong> (<em>CTSA</em>)<ul><li>Compile technical details to build a <strong><a href="#data-flow-diagram">cyber model</a></strong> of the system. This is effectively an <em>application profile</em> (similar to <em><a href="#pasta-stage-1-define-objectives">PASTA:1</a></em>, <em><a href="#trike-requirements-model">Trike:Req</a></em> and <em><a href="#owasp-threat-modeling-process">OWASP:1</a></em>). This methodology also recommends using a <em><a href="https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/crown-jewels-analysis">Crown Jewels Analysis</a></em> (a.k.a. ‚ÄúCJA‚Äù) as input into this step.<li>Search the managed <em>threat catalog</em> for plausible attack vectors based on the now-documented architecture.<li>Perform a threat-based <a href="#risk-assessment-models">risk assessment</a>. TARA suggests a simple, <em>qualitative</em> risk model such as the ‚Äú<a href="https://en.wikipedia.org/wiki/Risk_matrix">Risk Cube</a>‚Äù (i.e., <em>impact</em> x <em>likelihood</em>).<li>The output of the risk assessment is a <strong>vulnerability matrix</strong> which contains a list of (<em>ID‚Äôed</em>) attack vectors with corresponding risk scores. <br /><br /></ul><li>Step 2: <strong>Cyber Risk Remediation Assessment</strong> (<em>CRRA</em>)<ul><li>Vulnerabilities (from the <em>vulnerability matrix</em>) are mapped to countermeasures sourced from the managed <em>controls catalog</em>.<ul><li>The <strong>TARA Catalog</strong> consists of a series of attack-to-control pairings which are described as 3-tuples of the form, <em>&lt;Countermeasure ID, Attack vector ID, Countermeasure effect&gt;</em>, where the <em>effect</em> is ‚Äúpreventative‚Äù (P) or ‚Äúmitigating‚Äù (M).</ul><li>An analysis is performed to estimate the utility and cost of each control-to-attack pair which ultimately yields the <strong>mitigation mapping table</strong>. This table is essentially the first 5 rows of the matrix depicted below.<li>A holistic countermeasure <strong>selection strategy</strong> is developed by evaluating the <strong>solution effectiveness table</strong> (depicted below).</ul></ul><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/tara-mitigation-mapping-table.png" alt="Scored and Ranked Mitigation Mapping Table" /></center><ul><li>Step 3: <strong>Knowledge Management</strong> (<em>KM</em>)<ul><li>Extract applicable attack vectors from open (or closed) source <a href="#attack-libraries">cyber threat libraries</a> (i.e. <a href="https://capec.mitre.org">CAPEC</a> &amp; <a href="https://cve.mitre.org">CVE</a>).<li>Further bolster managed <em>TARA Catalog</em> content to reflect changing landscape of known threats and respective countermeasures.</ul></ul><h6 id="thoughts-on-tara">Thoughts on TARA</h6><p>A collection of my thoughts about <a href="#tara">TARA</a> are listed below.<ul><li>This methodology introduced me to the <a href="https://www.researchgate.net/publication/233644703_Mission_Oriented_Risk_and_Design_Analysis_of_Critical_Information_Systems">MORDA</a> risk assessment model. <em>Fun</em>!<li>TARA is not rigid, allowing swappable forms of risk ranking, attack generation, utility/cost scoring, etc‚Ä¶<li>The methodology was purpose-built for achieving <a href="https://policy.defense.gov/Portals/11/Documents/MA_Strategy_Final_7May12.pdf">mission assurance</a> (MA) during a federal acquisition process.<li>The official TARA white paper claims ‚Äú<em>Over a dozen TARA assessments have been conducted since 2011‚Ä¶</em>‚Äù. This paper was published in <em>2014</em>‚Ä¶ So, only slightly over a dozen TARA assessments in a 3-year timespan? <em>Yikes!</em><li>TARA calls on <em>YOU</em> to maintain an up-to-date threat-to-control catalog. This is incredibly difficult to manage without a full team dedicated to the pursuit. Given this is the standout feature of the methodology, I think it‚Äôs what <strong>cripples</strong> it.</ul><hr width="33%" /><h2 id="iddilatc">IDDIL/ATC</h2><p><strong><a href="https://www.lockheedmartin.com/content/dam/lockheed-martin/rms/documents/cyber/LM-White-Paper-Threat-Driven-Approach.pdf">IDDIL/ATC</a></strong> is a <em>threat-driven</em> threat modeling approach developed by <a href="https://www.lockheedmartin.com">Lockheed Martin</a> in 2019. A security strategy which is driven by <a href="#compliance-frameworks">compliance</a> or through implementation of a pre-canned list of controls is doomed to fail in the face of a realistic slate of threats. It is on this basis that this methodology eschews compliance and any emphasis on merely <em>addressing vulnerabilities</em> and instead favors mitigating true <em>threats</em>. IDDIL/ATC stands for ‚Äú<em>There are no idle threats - they attack</em>‚Äù and consists of two distinct phases. <strong><a href="#references"><sup>24</sup></a></strong><ul><li><a href="#iddilatc-discovery-phase-iddil">Phase 1: Discovery (IDDIL)</a><li><a href="#iddilatc-implementation-phase-atc">Phase 2: Implementation (ATC)</a></ul><p><a href="#iddilatc">IDDIL/ATC</a> was <em>also</em> designed to integrate cleanly with a typical software engineering lifecycle (<a href="https://www.synopsys.com/blogs/software-security/secure-sdlc/">SDL</a>). This is demonstrated via the graphic below. <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/iddilatc-threat-to-sdl.png" alt="IDDIL/ATC Mapped to SDL" /></center><h3 id="iddilatc-discovery-phase-iddil">IDDIL/ATC Discovery Phase (IDDIL)</h3><p>This section describes the <em>initial</em> phase of the <a href="#iddilatc">IDDIL/ATC</a> methodology. The <strong>5</strong> steps of this phase correspond with ‚Äú<strong>IDDIL</strong>‚Äù. <strong><a href="#references"><sup>24</sup></a></strong><ol><li><strong>Identify the Assets</strong>: Identify business-critical assets as well as assets attackers may be uniquely interested in.<li><strong>Define the Attack Surface</strong>: Determine <em>attack surface</em> by mapping macro-level components / elements of the system that contain, transmit or access <em>assets</em>. <em>Essentially</em>, produce a <a href="#data-flow-diagram">data flow diagram</a> (DFD).<li><strong>Decompose the System</strong>: For all components and flows within the model, layer in technology information and information about <a href="#control-frameworks">security controls</a> present within the overall system. (Reference the <a href="#trike-implementation-model">Trike Implementation Model</a>)<li><strong>Identify Attack Vectors</strong>: Leverage <a href="#vulnerability-catalogs">vulnerability catalogs</a> and <a href="#attack-libraries">attack libraries</a> to document <em>attack paths</em>, for example, by using <em><a href="#attack-trees">attack trees</a></em>.<ul><li>To be successful here, a <em>threat categorization</em> system should be selected (or developed) to assist with modeling and analysis of threats. IDDIL/ATC suggests using a tweaked version of <a href="#stride">STRIDE</a>, ‚Äú<strong>STRIDE-LM</strong>‚Äù which introduces the <em>lateral movement</em> threat category. As part of this threat categorization matrix, include a list of controls for each threat that provide some mitigating factor. (i.e. ‚Äú<strong>I</strong>‚Äù in STRIDE is for <em>information disclosure</em> - an example control could be <em>encryption</em>.)</ul><li><strong>List Threat Actors &amp; Objectives</strong>: Leveraging <a href="#cyber-threat-intelligence-cti">CTI</a>, develop a list of potential <em>threat actors</em>.<ul><li>It is suggested to create <strong>threat profiles</strong> for each asset / component of the system. A threat profile is a tabular summary which contains information like <em>threat types</em>, <em>attack surface</em>, <em>attack vectors</em>, <em>threat actors</em>, <em>impacts</em>, <em>vulnerabilities</em>, <em>controls</em> and other related information.<li>To best understand the relationship between <em>threats</em>, <em>assets</em> and <em>controls</em>, reference the <a href="#threats-assets-controls-relationship">diagram provided below</a>.</ul></ol><h5 id="threats-assets-controls-relationship">Threats-Assets-Controls Relationship</h5><p><a href="#iddilatc">IDDIL/ATC</a> is a <em>threat-driven</em> methodology. To best understand how threats interact with assets and controls, we visualize their relationship as depicted below. <strong><a href="#references"><sup>24</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/threats-assets-controls.png" alt="Threats Assets Controls" /></center><h3 id="iddilatc-implementation-phase-atc">IDDIL/ATC Implementation Phase (ATC)</h3><p>This section describes the second (and final) phase of the <a href="#iddilatc">IDDIL/ATC</a> methodology. The <strong>3</strong> steps of this phase correspond with ‚Äú<strong>ATC</strong>‚Äù. <strong><a href="#references"><sup>24</sup></a></strong><ol><li><strong>Analysis</strong>: Determine the impact of a successful compromise <em>for each</em> threat scenario (use a vulnerability scoring tool like <a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator">CVSS</a>).<li><strong>Assessment &amp; Triage</strong>: Produce a <em>business / mission-prioritized</em> list of findings based on the evaluations of threats (<em>conducted in the first step of this phase</em>). A <a href="#risk-assessment-models">risk assessment model</a> may be beneficial to help with the analysis &amp; assessment from this and the previous step.<li><strong>Controls</strong>: Select and implement <a href="#control-frameworks">security controls</a> to prevent/mitigate threats. A simple control taxonomy that IDDIL/ATC presents is - <em>inventory</em>, <em>collect</em>, <em>detect</em>, <em>protect</em>, <em>manage</em> and <em>respond</em>.<ul><li>To further understand the tools and practices employed to identify and implement controls as part of IDDIL/ATC, <a href="#iddilatc-controls-implementation">reference the following section</a>.</ul></ol><h5 id="iddilatc-controls-implementation">IDDIL/ATC Controls Implementation</h5><p><a href="#iddilatc">IDDIL/ATC</a> includes a number of tools and practices, purpose-built to facilitate the selection, implementation and evaluation of <a href="#control-frameworks">security controls</a> and their effectiveness (further detailed below). <strong><a href="#references"><sup>24</sup></a></strong><ul><li><p><strong>Functional Controls Hierarchy</strong> (<strong>FCH</strong>) - The controls column in the <em>threat categorization</em> model chosen earlier corresponds to the portfolio of categorical controls located within the FCH. Alongside these controls is the high-level control function and the tools / capabilities an organization has implemented that possesses that security property (implementation). A sample record within an FCH is provided below.<table><thead><tr><th>Function<th>Category<th>Implementation<th>Effectiveness <strong>**</strong><tbody><tr><td>Detect<td>Endpoint Signature<td>Anti-Virus<td>Partial</table><ul><li>A benefit of constructing and maintaining an FCH is the identification of <em>duplicate</em> controls within your organization.<li><strong>**</strong> The ‚ÄúEffectiveness‚Äù field is reserved for the following, <em>controls effectiveness matrix</em>.<br /><br /></ul><li><strong>Controls Effectiveness Matrix</strong> - An extension of the <em>FCH</em>, this matrix adds the ‚ÄúEffectiveness‚Äù field which captures the analysis of how effective a control is, mapped to a specific threat / attack vector within an organization.<ul><li>Effectiveness is recorded as ‚Äú<em>full</em>‚Äù, ‚Äú<em>partial</em>‚Äù, ‚Äú<em>none</em>‚Äù or ‚Äú<em>complete control gap</em>‚Äù, whereby the final rating is reserved for situations where <strong>nothing</strong> exists within the matrix (and thus within the organization) for a particular control <em>category</em>.<br /><br /></ul><li><strong>Controls Effectiveness Scorecard</strong> - Provides a ‚Äúdashboard‚Äù-like view of enterprise controls effectivness coverage where high-level control categories (e.g. detect, protect, etc‚Ä¶) are mapped to identified attack surface components (e.g. User, Network, OS, Storage, etc‚Ä¶). A scorecard is created <em>for each</em> identified attack use-case. This is depicted below.</ul><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/iddilatc-controls-effectiveness-scorecard.png" alt="Controls Effectiveness Scorecard" /></center><ul><li><strong>Architectural Rendering</strong> - Combined, the previous tools can be collectively used as inputs into the devlopment of a controls-laden <em>architectural rendering</em>. This diagram resembles a <a href="#data-flow-diagram">flow diagram</a> whereby we map the relationship between attack surface entities, directional data flows and overlays where controls and attacks apply within the architectural visualization. Though not an exact replication of an architectural rendering, this <a href="https://www.synopsys.com/glossary/what-is-threat-modeling.html">threat model DFD from Synopsys</a> is a similar representation, depicting components/assets, threats and controls, all in one visualization.</ul><h3 id="thoughts-and-other-tid-bits-for-iddilatc">Thoughts and Other Tid-Bits for IDDIL/ATC</h3><p>Below I provide a few final parting thoughts and observations related to the <a href="#iddilatc">IDDIL/ATC</a> threat modeling methodology.<ul><li>IDDIL/ATC preaches a focus on <em>practical</em> and <em>scalable</em> integration within a standard engineering lifecycle while at the same time requesting the assessor <em>manually</em> build and maintain a series of controls matrices, potentially lengthy lists of threats/attack scenarios and generally produce <em>a lot</em> of documentation. Without a clear way to automate some of these steps (which this methodology does not cover), I don‚Äôt see this as being a <em>particularly scalable</em> methodology.<li>An even <em>heavier</em> focus with this methodology is in leveraging <a href="#cyber-threat-intelligence-cti">threat data</a>, threat categorization models (e.g. <a href="#stride">STRIDE</a>, STRIDE-LM, <a href="https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html">Cyber Kill Chain</a>) and other threat-focused tools (i.e. <a href="#attack-trees">attack trees</a>) to better determine risk and where effort should be spent. This quality of IDDIL/ATC is where it shines in my opinion. I too believe that by taking a truly threat-focused approach to security, an organization can more effectively mitigate risk.<li><strong>STRIDE-LM</strong> is a new concept for me. It‚Äôs just the normal <a href="#stride">STRIDE</a> we all know and love but also includes ‚Äú<strong>LM</strong>‚Äù which stands for <em>lateral movement</em>. The added desired security property is therefore <em>segmentation</em> / <em>least-privilege</em>. A worthy edition to STRIDE to say the least‚Ä¶<li>Despite this methodology not being as ‚Äúscalable‚Äù as the authors may suggest, I truly like this model and am surprised it has not been popularized more. It introduces valuable and novel concepts such as <em>threat profiles</em>, the <em>FCH</em>, <em>controls scorecard</em> and the <em>architectural rendering</em>. All of which I think could be valuable to produce as part of an ongoing internal threat modeling function.<li>I wanted to make a quick note on the difference between a <a href="#data-flow-diagram">DFD</a> produced <a href="#iddilatc-discovery-phase-iddil">early-on</a> in the threat modeling lifecycle and the ‚Äú<em>architectural rendering</em>‚Äù that this model introduces in the <a href="#iddilatc-implementation-phase-atc">final phase</a>. I think they are very similar in nature and if anything the latter just contains additional context and layers for the identified threats and controls juxtaposed inline with the assets / components from the original model. Keep in mind, a DFD will only contain assets, components and data flows - not the controls and threat information that gets developed in subsequent steps/phases within this and other similar threat modeling methodologies.</ul><hr width="33%" /><h2 id="hybrid-threat-modeling-method-htmm">Hybrid Threat Modeling Method (hTMM)</h2><p>The <strong>Hybrid Threat Modeling Method</strong> (<strong><a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=516617">hTMM</a></strong>) <a href="https://resources.sei.cmu.edu/asset_files/TechnicalNote/2018_004_001_516627.pdf"><i class="ph ph-file-text"></i></a> is an approach to <a href="#intro-to-threat-modeling">threat modeling</a>, published by Carnegie Mellon‚Äôs <a href="https://www.sei.cmu.edu">Software Engineering Institute</a> in <em>2018</em>, that combines features from the following models - <a href="#stride">STRIDE</a>, <a href="#security-cards">Security Cards</a> and <a href="#persona-non-grata-png">Persona non Grata</a>. At a high level, hTMM consists of <strong>5</strong> distinct steps, further described below. <strong><a href="#references"><sup>25</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/htmm-process-flow.png" alt="hTMM Process Flow" /></center><ul><li><strong>Step 1</strong>: Identify the target system. hTMM recommends leveraging steps 1-3 of <a href="https://resources.sei.cmu.edu/asset_files/WhitePaper/2013_019_001_297333.pdf">SQUARE</a> to divine business/security goals, assets and system artifacts.<li><strong>Step 2</strong>: Brainstorm potential threats and attack vectors using <a href="#security-cards">Security Cards</a>. Conduct this exercise with developers, system users and cybersecurity staff.<li><strong>Step 3</strong>: Using the output from the <em>Security Cards</em> exercise, filter attack vectors/scenarios based on <a href="#persona-non-grata-png">realistic personas</a>.<li><strong>Step 4</strong>: For each identified threat, summarize the finding with the following attributes - <em>actor</em>, <em>purpose</em>, <em>target</em>, <em>action</em>, <em>result of action</em>, <em>impact</em> and <em>threat type</em> (i.e. <a href="#stride">STRIDE</a>).<li><strong>Step 5</strong>: Conduct a formal <a href="#risk-assessment-models">risk assessment</a>.</ul><h6 id="thoughts-and-observations-for-htmm">Thoughts and Observations for hTMM</h6><p>In this section, I briefly cover a few thoughts and observations after learning more about the <a href="#hybrid-threat-modeling-method-htmm">hTMM</a> methodology. <strong><a href="#references"><sup>25</sup></a></strong><ul><li>The primary foundations of hTMM are all <em>threat</em>-related - threat categorization using <a href="#stride">STRIDE</a> and threat generation using <a href="#persona-non-grata-png">PnG</a> + <a href="#security-cards">Security Cards</a>. This is an <em>unsurprising</em> theme amongst most documented <a href="#methodologies">threat modeling methodologies</a>. <em>Follow the threats</em>!<li>hTMM emphasizes the importance of early specification of <em>security requirements</em>, as this will have measurable impact for the security of the system architecture later on in the system lifecycle.<li>Unfortunately, the authors continue to proliferate an incorrect understanding that <a href="#stride">STRIDE</a> is a theat modeling method (a.k.a. ‚Äú<em>TMM</em>‚Äù), when in fact it is simply a <em>threat categorization</em> tool.<li>No explicit direction is given to create a <a href="#data-flow-diagram">data flow diagram</a>. Interesting to not build a ‚Äúmodel‚Äù in a ‚Äúthreat <em>modeling</em>‚Äù methodology!<li>At various points, the authors suggest the use of ‚Äú<em>tool support</em>‚Äù to facilitate the summarization and analysis of threat findings. At no point though do they really explain what these tools are or offer one of their own. For the record, this guide introduces a wealth of <a href="#tooling">threat modeling tools</a>.<li>Overall, hTMM is pretty barebones and leaves a lot to be interpreted. Its inclusion of <a href="#security-cards">Security Cards</a> and <a href="#persona-non-grata-png">PnG</a> is admittedly useful, but not something that is exclusive to this methodology.</ul><h4 id="security-cards">Security Cards</h4><p><strong><a href="http://securitycards.cs.washington.edu/index.html">Security Cards</a></strong> is a <em>threat generation</em> (or ‚Äú<em>Threat Brainstorming</em>‚Äù, as the authors have referred to it) toolkit, originating from the <a href="https://www.washington.edu">University of Washington</a>, consisting of <strong>42</strong> distinct ‚Äúthreat‚Äù cards across <strong>4</strong> unique ‚Äú<a href="http://securitycards.cs.washington.edu/cards.html">suits</a>‚Äù (detailed below). <strong><a href="#references"><sup>25</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>27</sup></a></strong><ul><li><strong>Human Impact</strong> - Describes the impacts that <em>actual</em> humans may experience as a result of a successful attack.<li><strong>Adversary Motivations</strong> - Effectively, the ‚Äúintent‚Äù characteristic of a <a href="#cyber-threat-intelligence-cti">cyber threat</a>.<li><strong>Adversary Resources</strong> - As introduced by the <a href="https://warnerchad.medium.com/diamond-model-for-cti-5aba5ba5585">Diamond Model</a> in the <a href="#cyber-threat-intelligence-cti">CTI</a> section, this represents an adversary‚Äôs available infrastructure used to facilitate an attack.<li><strong>Adversary Methods</strong> - Consider these the <a href="#cyber-threat-intelligence-cti">capabilities</a> or <a href="https://attack.mitre.org">TTPs</a> an attacker leverages to conduct an attack.</ul><center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/security-cards.png" alt="Security Cards" /></center><p>So how are these cards used? <em>Well</em>, the <a href="http://securitycards.cs.washington.edu/index.html">official site</a> for <strong>Security Cards</strong> provides a number of <a href="http://securitycards.cs.washington.edu/activities.html">activities</a> that can be exercised, all in the spirit of threat generation. In the absence of having a large, dedicated security function who has time to allocate appropriate resources to conduct threat modeling, Security Cards serves an alternative way to harness the creativity and brainstorming power of non-security personnel to perform threat generation and modeling instead. This can be particularly effective as you are able to introduce new, wide-ranging perspectives into the threat generation process.<h4 id="persona-non-grata-png">Persona Non Grata (PnG)</h4><p><strong>Persona Non Grata</strong> (<strong><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6834694">PnG</a></strong>) is a <em>threat generation</em> technique posited by <a href="https://www.linkedin.com/in/jane-cleland-huang-2786224/">Jane Cleland-Huang</a> during her time as a software engineering professor at <a href="https://www.cdm.depaul.edu/academics/Pages/MS-in-Software-Engineering.aspx">DePaul University</a> (<em>~2014</em>). She suggested that we describe potential threat actors as archetypical users of a system that may have mischievous or even explicitly malicious end-goals. By visualizing and describing these <em>personas</em>, the real-world motivations and possible <em>misuse cases</em> (<a href="#the-stages-of-qtmm">QTMM: Stage 3</a>) of these <em><a href="https://en.wikipedia.org/wiki/Persona_non_grata">unwelcome individuals</a></em> could be developed, which would then help illuminate potential attack vectors and vulnerabilities. <strong><a href="#references"><sup>29</sup></a></strong><p>The <strong>PnG</strong> exercise is useful as it gives <em>anyone</em> involved in the development, or securing of a system, the opportunity to think critically about the types of actors that may target a system, the specific goals they may wish to achieve and the actions they would take to achieve those goals. In the absence of reliable <a href="#cyber-threat-intelligence-cti">threat intelligence</a>, PnG can be a useful mechanism for producing more realistic attack scenarios compared to something like <a href="#trike-threat-model">Trike‚Äôs threat generation</a> approach which is to enumerate <em>ALL</em> abuse cases, no matter how realistic. An example persona is described below. <strong><a href="#references"><sup>25</sup></a></strong><h6 id="example-png-threat-persona">Example PnG Threat Persona</h6><blockquote><p>‚ÄúJohn‚Äù is a senior developer within your company. He has been with the company for almost 10 years and has been unhappy with recent changes within the engineering organization. His work velocity has notably slowed in recent weeks and has become more visibly disgruntled as a result of recent encounters with new leadership and having received less meaning project assignments.</blockquote><blockquote><p>Some <strong>misuse</strong> cases given Johns <em>persona</em> are as follows‚Ä¶<ol><li>Baking a <em><a href="https://en.wikipedia.org/wiki/Logic_bomb">logic bomb</a></em> into enterprise code or systems.<li>Purposefully injecting other forms of malicious code into a production branch.<li>Taking secrets to a competitor.<li>Introducing sloppy code as a result of sheer disinterest.<li>Selling access to corporate infrastructure to an <em><a href="https://www.digitalshadows.com/blog-and-research/rise-of-initial-access-brokers/">initial access broker</a></em>.</ol></blockquote><blockquote><p>The <strong>goals</strong> for John could be the following‚Ä¶<ul><li>‚ÄúGet back‚Äù at leadership who he disagrees with or those he feels have ‚Äúwronged him‚Äù.<li>Leave the organization and take trade secrets, data or other assets to a competitor.<li>Make money by selling data, secrets or access to the organizations infrastructure.</ul></blockquote><blockquote><p>As a skilled developer, John‚Äôs capabilities include‚Ä¶<ul><li>Strong development and technical prowess.<li>Privileged access to source code repositories, production systems and highly-classified data.<li>Deep institutional knowledge.<li>One of few individuals within the company who understand how certain systems operate and their architecture.</ul></blockquote><hr width="33%" /><h2 id="quantitative-threat-modeling-qtmm">Quantitative Threat Modeling (QTMM)</h2><p>A <strong>Quantitative Threat Modeling Methodology</strong> (<strong>QTMM</strong>) can be described as a <a href="#intro-to-threat-modeling">threat modeling</a> methodology that leverages the measurable characteristics of <a href="#attack-trees">attack tree</a> elements to <em>quantitatively</em> calculate and prioritize the impact and risk of threats to a system. Such a methodology was published by German researchers from the <a href="https://www.tu-darmstadt.de">Technische Universitat Darmstadt</a> and <a href="https://www.goethe-university-frankfurt.de/">Goethe Universitat Frankfurt am Main</a> universities, titled ‚Äú<em><a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.348.6943&amp;rep=rep1&amp;type=pdf">Privacy-by-Design Based on Quantitative Threat Modeling</a></em>‚Äù. This research debuts a <em>privacy</em>-focused variant of quantitative threat modeling and introduces the following novel features. <strong><a href="#references"><sup>26</sup></a></strong><ol><li>A <em>quantitative methodology</em> designed to systematically elicit both <em>security</em> and <em>privacy</em> requirements, by iteratively tuning the risk associated with identified threats and attacks.<li>A comprehensive set of quantifiable security and privacy (a.k.a. ‚ÄúS&amp;P‚Äù) threats based on the ‚Äú<strong><a href="#privacy-protection-goals-ppgs">Privacy Protection Goals</a></strong>‚Äù (<strong>PPGs</strong>), which have proved well-suited for <em>qualitatively</em> evaluating risks.<li>A set of rules to quantitatively aggregate <em>into</em> an <a href="#attack-trees">attack tree</a> the risks associated with individual attacks.</ol><h5 id="the-stages-of-qtmm">The Stages of QTMM</h5><p><a href="#quantitative-threat-modeling-qtmm">QTMM</a> as described by <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.348.6943&amp;rep=rep1&amp;type=pdf">this research</a> is comprised of a <strong>5</strong>-stage process which combines <a href="#stride">STRIDE</a>, <a href="#privacy-protection-goals-ppgs">PPG</a> and <em>quantifiable</em> <a href="#attack-trees">attack trees</a> to deliver <em>privacy-by-design</em> (‚ÄúPbD‚Äù) within the early phases of the <a href="https://www.synopsys.com/blogs/software-security/secure-sdlc/">SDL</a>. These stages are depicted below. <strong><a href="#references"><sup>26</sup></a></strong> <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/qtmm-process-flow.png" alt="QTMM Process Flow" /></center><ul><li><p><strong>Stage 1: Define the DFD</strong> - Produce a standard <a href="#data-flow-diagram">data flow diagram</a> (DFD) of the system.<li><p><strong>Stage 2: Map DFD to S&amp;P Threats</strong> - Map threats to the various elements (e.g. data store, data flow, process, entity) of the created model - for example, by leveraging <a href="#stride">STRIDE</a>. In addition to the traditional <em>security</em>-related threats, <a href="#quantitative-threat-modeling-qtmm">QTMM</a> also presents <a href="#privacy-protection-goals-ppgs">privacy-specific threats</a> that should also be accommodated within the matrix. An example of such a mapping is provided below.</ul><table><thead><tr><th>Security Property<th>Threat<th>Explanation<th>DS<th>DF<th>P<th>E<tbody><tr><td>Confidentiality<td>Information Disclosure<td>‚Ä¶<td>X<td>¬†<td>X<td>X<tr><td>‚Ä¶<td>‚Ä¶<td>‚Ä¶<td>X<td>X<td>X<td>X</table><ul><li><p><strong>Stage 3: Identify Misuse Cases</strong> - <em>Misuse cases</em> are documented by capturing the following information - <em>summary</em> / <em>threat description</em>, <em>target asset</em>, <em>misactor description</em>, <em>attack tree</em>, <em>attack preconditions</em> and <em>mitigation mechanisms</em>. This is done in similar fashion to the <a href="#linddun">LINDDUN</a> methodology, which also suggests the formulation of <a href="#attack-trees">attack trees</a> to visualize these threats.<li><p><strong>Stage 4: Risk-Based Quantification of Attack Trees</strong> - This stage represents the <em>essence</em> of QTMM, the goal of which is to provide a quantitative score for a threat tree based on the aggregate score of its collective attack paths. This particular methodology recommends the use of <a href="#dread">DREAD</a> to quantitatively score and then prioritize attacks within the tree. For more details on the formulas for performing these calculations, I recommend referencing <strong>Section II:D</strong> (i.e., <em>Stage 4: Risk-based Quantification of Attack Trees</em>) of the <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.348.6943&amp;rep=rep1&amp;type=pdf">QTMM research paper</a>.<li><p><strong>Stage 5: Produce S&amp;P Requirements</strong> - Elicit <a href="#control-frameworks">mitigation controls</a> and security requirements to mitigate identified risks. Refine <a href="#attack-trees">attack trees</a> by re-calculating the risk score given the implementation of the proposed countermeasure. Add new attack paths (as applicable) if the introduction of a security control results in new <em><a href="#pasta-stage-6-attack-modeling">attack surface</a></em>.</ul><h6 id="privacy-protection-goals-ppgs">Privacy Protection Goals (PPGs)</h6><p><strong>Privacy Protection Goals</strong> (‚Äú<strong>PPGs</strong>‚Äù) are the basic set of security properties derived from the <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=celex%3A31995L0046">EU Data Protection Directive</a> (Directive 95/46/EC). They resemble the <a href="#linddun-threat-categories">LINDDUN threat categories</a>. The PPGs are defined below. <strong><a href="#references"><sup>26</sup></a></strong><ul><li><strong>Unlinkability</strong>: Data processing is conducted such that privacy-relevant data is <em>unlinkable</em> to any other set of privacy-relevant data outside of the domain, or at least that the implementation of such linking would require disproportionate efforts for the entity establishing such linkage.<li><strong>Transparency</strong>: All parties involved in any privacy-relevant data processing can <em>comprehend</em> the legal, technical and organizational conditions.<li><strong>Intervenability</strong>: The parties involved in any privacy-relevant data processing, including the individual whose personal data is being processed, have the capability to <em>intervene</em>, where necessary.</ul><h4 id="thoughts-on-this-version-of-a-qtmm">Thoughts on this Version of a QTMM</h4><p>Below I provide a list of thoughts and observations related to the <strong>quantitative threat modeling methodology</strong> (<strong><a href="#quantitative-threat-modeling-qtmm">QTMM</a></strong>) presented <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.348.6943&amp;rep=rep1&amp;type=pdf">here</a>.<ul><li>Great idea to consider both security <em>and</em> privacy threats while performing threat modeling. <em><a href="#id3">How novel</a></em>!<li>‚Äú<em>How can we make threat modeling more fun?</em>‚Äù. <strong>MATH</strong>!<li>QTMM suggests the use of the <a href="https://sourceforge.net/projects/seamonster/?source=navbar">SeaMonster</a> security modeling tool to assist with <a href="#attack-trees">attack trees</a> and <a href="#the-stages-of-qtmm">misuse case</a> modeling.<li>Its reliance on a <a href="https://docs.microsoft.com/en-us/archive/blogs/david_leblanc/dreadful">notably flawed</a> model like <a href="#dread">DREAD</a> is worrisome. That said, swapping DREAD out for a more worthy risk scoring model could take QTMM to the next level. <strong><a href="#references"><sup>28</sup></a></strong></ul><hr width="33%" /><h2 id="id3">ID<sup>3</sup></h2><p><strong>ID<sup>3</sup></strong> is a new(<em>ish</em>) <a href="#intro-to-threat-modeling">threat modeling</a> methodology created by <em><a href="https://shellsharks.com/about?about=infosec">yours truly</a></em>. So what does ID<sup>3</sup> bring to the table that other, more established methodologies don‚Äôt? <em>Nothing really</em>, I just thought it would be cool to come up with my own methodology and give it a cool acronym (<em>and I think I succeeded</em>). Jokes aside, this <em>is</em> in fact the threat modeling recipe I personally use, with influences from some of the other <a href="#methodologies">methodologies</a> that have been presented here in this guide. What ID<sup>3</sup> brings to the table is a repeatable, scalable methodology that incorporates <em>exactly</em> the elements most useful for my threat modeling style. The high-level steps (<em>and noted influences</em>) for ID<sup>3</sup> are presented below. <center><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/id3.png" alt="ID3 Process Flow" /></center><ol><li><p><strong>Inventory System Components</strong> - Define the technical scope by building a system component inventory. This ends up being a mix of <em><a href="#pasta-stage-2-define-technical-scope">PASTA Stage 2</a></em>, <em><a href="#the-phases--processes-of-octave">Phase 2: Process 5 of OCTAVE</a></em> and <em><a href="#owasp-threat-modeling-process">OWASP TMP Step 1</a></em> (<em>just</em> the component-ID‚Äôing step). <strong><a href="#references"><sup>6</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>13</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>22</sup></a></strong><li><p><strong>Diagram Architecture</strong> - Model the system, creating a <em><a href="#data-flow-diagram">DFD</a></em> for visualization. Here I‚Äôm going with the equivalent of <em><a href="#microsoft-threat-modeling-steps">Microsoft‚Äôs ‚ÄúDiagram‚Äù step</a></em>, or <em><a href="#trike-implementation-model">Trike‚Äôs Implementation Model</a></em>, scratching the laborious <em><a href="#use-flow-map">use flow</a></em> generation and holding the <em>security control decomposition</em> until <strong>Step 4</strong>. This also takes on the ‚Äú<strong>Visual</strong>‚Äù quality of <a href="#principles-of-vast">VAST</a>. <strong><a href="#references"><sup>3</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>14</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>17</sup></a></strong><li><p><strong>Identify Threats</strong> - Develop a list of realistic <em>threats</em> using a <a href="#cyber-threat-intelligence-cti">CTI</a>-infused version of <em><a href="#iddilatc-discovery-phase-iddil">Steps 4 + 5 of the IDDIL/ATC Discovery Phase</a></em> (<strong>threat profiles</strong> &amp; <strong>attack trees</strong> <em>optional</em>). I also make sure to include <em>privacy</em>-related threats <em>ala</em> <a href="#linddun-threat-categories">LINDDUN</a>. <strong><a href="#references"><sup>15</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>24</sup></a></strong><li><strong>Decompose Application</strong> - With sub-systems, data flows and potential threats identified, I begin to <em>decompose</em> the application, generating a list of applicable <a href="#control-frameworks">security controls</a> (i.e. <a href="https://owasp.org/www-project-application-security-verification-standard/">OWASP ASVS</a>), and then applying them as visual overlays at the points where they have effect(s) within the system architecture. For this, I‚Äôm relying on the <em><a href="#trike-implementation-model">Trike Implementation Model</a></em> and <em><a href="#data-centric-system-threat-modeling-steps">Step 3 of NIST‚Äôs Data-Centric TMM</a></em>. <strong><a href="#references"><sup>14</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>21</sup></a></strong><ul><li>While proposing potential controls, I stay mindful of the negative qualities any given control may have on the system or organization (also per <em><a href="#data-centric-system-threat-modeling-steps">Step 3 of NIST‚Äôs Data-Centric TMM</a></em>). <strong><a href="#references"><sup>21</sup></a></strong><li><strong>* Note</strong>: Steps <em>3</em> and <em>4</em> could <em>technically</em> be switched here with no meaningful effect on the outcome. If you were to perform <em>step 4</em> first you might in theory be able to rule out certain threats in the <em>Identify Threats</em> step. By doing this though, you might exclude certain threats without really giving them the proper analysis they deserve in the <em>upcoming</em> step. <br /><br /></ul><li><p><strong>Illustrate Threats</strong> - Leveraging our known technical scope, application decomposition, available <a href="#cyber-threat-intelligence-cti">CTI</a> and imported <a href="#attack-libraries">attack libraries</a>, I now build/analyze <em>attack scenarios</em> (from <em><a href="#pasta-stage-4-threat-analysis">PASTA Stage 4</a></em>), and then perform <em>attack surface analysis</em> and <a href="#attack-trees">attack tree</a> mapping (both from <em><a href="#pasta-stage-6-attack-modeling">PASTA Stage 6</a></em>). The preferred way to illustrate threats alogside the identified controls and system components is to produce an <em>architectural rendering</em>, per the <em><a href="#iddilatc-controls-implementation">IDDIL/ATC Controls Implementation Step</a></em>. Once again, this step adheres to the <a href="#principles-of-vast">VAST</a> <em>visual</em> principle. <strong><a href="#references"><sup>6</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>17</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>24</sup></a></strong><li><strong>Document Risk</strong> - Create a risk-prioritized list of findings based on probabilistic attack scenarios, expected impacts and the understanding of what <a href="#control-frameworks">defensive controls</a> are in place. A simple risk-scoring system such as <a href="https://nvd.nist.gov/vuln-metrics/cvss">CVSS</a> may be used here. This step of ID<sup>3</sup> is going to most resemble <em><a href="#pasta-stage-7-risk--impact-analysis">PASTA Stage 7</a></em>, just with simplified inputs and outputs. I also remember to re-factor the risk of threats based on the proposed countermeasures, similar to what is described in <em><a href="#the-stages-of-qtmm">Stage 4 of QTMM</a></em>. <strong><a href="#references"><sup>6</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>26</sup></a></strong></ol><p><em>So there ya have it!</em> <strong><a href="#id3">ID<sup>3</sup></a></strong>.<hr /><h2 id="future-methodologies">Future Methodologies</h2><p>In future updates to this guide, I will be detailing additional <a href="#methodologies">methodologies</a>. A list of upcoming models is included below!<ul><li><a href="https://www.omadahealth.com/hubfs/nodirt.pdf">INCLUDES NO DIRT</a> <strong><a href="#references"><sup>32</sup></a></strong><li><a href="https://github.com/Autodesk/continuous-threat-modeling">CTM</a> <strong><a href="#references"><sup>33</sup></a></strong> <a href="https://www.youtube.com/watch?v=VbW-X0j35gw"><i class="ph ph-youtube-logo"></i></a><li><a href="https://www.diva-portal.org/smash/get/diva2:1463788/FULLTEXT01.pdf">KTH TMM</a> <strong><a href="#references"><sup>34</sup></a></strong><li><a href="https://versprite.com/blog/application-security/threat-modeling/organizational-threat-model-enterprise-risk-assessment/">VerSprite OTM</a> <strong><a href="#references"><sup>35</sup></a></strong><li><a href="http://www.pentest-standard.org/index.php/Threat_Modeling">Penetration Testing Execution Standard (PTES)</a> <strong><a href="#references"><sup>36</sup></a></strong><li><a href="https://www.mitre.org/news-insights/news-release/mitre-red-balloon-security-and-narf-announce-emb3d">EMB3D</a></ul><hr /><h1 id="modeling-exercise">Modeling Exercise</h1><p><strong>* Note</strong>: In future updates to this guide, I will provide a step-by-step walkthrough of one or more of the Threat Modeling <a href="#methodologies">methodologies</a> from this guide. <em>Stay Tuned!</em><hr /><h1 id="conclusion">Conclusion</h1><p>I had a lot of fun, and learned a great deal while building this <a href="#">guide</a> out. I want to thank <em>all</em> of those involved developing the previous research, blog posts and assorted <em><a href="#references">guidance-from-the-Internet</a></em> I benefited from while putting this all together. Listed below are a few considerations and final parting thoughts related to <a href="#intro-to-threat-modeling">threat modeling</a>.<ul><li><p>Don‚Äôt forget to perform threat modeling early on in the <a href="https://www.synopsys.com/blogs/software-security/secure-sdlc/">system development lifecycle</a> and then continuously as the system evolves.<li><p>Threat modeling can be somewhat of an opaque subject which can make the barrier to entry <em>seem</em> high. I hope with this guide, the steps (<em><a href="#methodologies">whichever you choose to take</a></em>) become clear and thus the path to threat modeling becomes easier.<li><p>Many of the threat modeling <a href="#methodologies">methodologies</a> covered in this guide are very prescriptive, formalized or just plain <em>involved</em>. This can be overwhelming to the point where you don‚Äôt even bother attempting to threat model because you won‚Äôt be able to succeed in a <em>by-the-book</em> approach. Try to focus less on doing <em>every. single. thing.</em> that these methodologies describe and more on what you <em>can</em> do to help better highlight the risks within a system. That‚Äôs exactly what I did with <strong><a href="#id3">ID<sup>3</sup></a></strong>! I just cherry-picked the things I liked from different models, smushed them together, slapped a shiny new name on it and went on my merry way. In other words, don‚Äôt let perfection be the enemy of good.<li><p>Threat modeling is (<em>and should be</em>) highly collaborative. You‚Äôre going to need help. Use this time to build relationships across the business, learn in a cross-disciplinary fashion and of course, <em>have fun</em>!<li><p>Each of the <a href="#methodologies">threat modeling methodologies</a> covered in this doc have a context in which they shine. You may find that at different organizations or at different moments in time within a single organization, one methodology will prove superior to another. What I‚Äôm trying to say is, keep a working knowledge of <em>all</em> of them, you never know when you‚Äôll want to use one over another.<li><p>‚Äú<em>The Enchiridion of Impetus Exemplar</em>‚Äù, loosely translated from Latin means ‚Äú<em>The Manual of Attack Model</em>‚Äù. It sounds better in Latin‚Ä¶</ul><hr /><h1 id="appendices">Appendices</h1><h2 id="data-flow-diagram">Data Flow Diagram</h2><p><strong>Data Flow Diagrams</strong> (<strong>DFDs</strong>) are more art than science, in fact, they are drawings much like art! There is however <em>some science</em> to DFDs, especially in the context of <a href="#intro-to-threat-modeling">threat modeling</a>. The following <strong>key</strong> should help you decipher the elements within the DFD I have provided, as well as other DFDs which use this common symbology. <strong><a href="#references"><sup>4</sup></a></strong><ul><li><em>Rounded Rectangle</em> - External process/entity<li><em>Circle</em> - Internal process<li><em>Arrow</em> - Directional data flow<li><em>Partial Rectangle</em> (parallel horizontal lines) - Data store<li><em>Rectangle</em> - External entity (out of our control sphere)<li><em>Dotted Line</em> - Trust boundary</ul><p>The DFD you see below is a (<em>admittedly poor</em>) visualization / model of the <a href="/">shellsharks</a> site.<p><img src="https://shellsharks-images.s3.amazonaws.com/2022/threatmodel/data-flow-diagram.png" alt="Shellsharks Data Flow Diagram" /><p>As I mentioned earlier, this is but one way to create a DFD for a threat modeling exercise. For another take, check out <a href="https://www.synopsys.com/glossary/what-is-threat-modeling.html">this awesome threat model DFD from Synopsys</a>!<p><strong>* Note</strong>: I‚Äôm planning on adding a <em>much better</em> DFD in future developments to this guide - more akin to the <a href="https://www.synopsys.com/">Synopsys</a> one. <em>Stay tuned!</em><h2 id="threat-modeling-methodology-matrix-tm3">Threat Modeling Methodology Matrix (TM<sup>3</sup>)</h2><p><strong>* Note</strong>: In future updates to this guide, I plan on adding a comprehensive matrix (<em>dubbed</em>, ‚Äú<strong>TM<sup>3</sup></strong>‚Äù), mapping the characteristics &amp; capabilities of <a href="#methodologies">all methodologies</a> within this guide. This matrix will be reminiscent of the <a href="#threat-modeling-methodology-comparison">comparison table sourced from the ThreatModeler site</a>. <strong><a href="#references"><sup>17</sup></a></strong><h2 id="tooling">Tooling</h2><p>There are a number of tools built for (<em>or can be used for</em>) <a href="#intro-to-threat-modeling">threat modeling</a>. Listed below are some of these tools. <strong><a href="#references"><sup>19</sup></a></strong><ul><li><a href="https://docs.microsoft.com/en-us/azure/security/develop/threat-modeling-tool-getting-started">Microsoft Threat Modeling Tool</a> - Leverages <a href="#stride">STRIDE</a> to categorize threats and simplify security conversations.<li><a href="https://threatdragon.github.io">OWASP Threat Dragon</a> <a href="https://github.com/OWASP/threat-dragon/releases"><i class="ph ph-github-logo"></i></a> - Supports <a href="#stride">STRIDE</a> &amp; <a href="#linduun">LINDDUN</a>.<li><a href="https://threatmodeler.com/threatmodeler/#threatmodeler">ThreatModeler</a> (<em>commerical</em>)<li><a href="https://github.com/izar/pytm">pytm</a> <a href="https://github.com/izar/pytm"><i class="ph ph-github-logo"></i></a><li><a href="http://www.octotrike.org/tools">Trike</a> <a href="https://github.com/octotrike/trike"><i class="ph ph-github-logo"></i></a><li><a href="https://app.diagrams.net">Draw.io</a> - Not specifically a threat modeling tool but can be used to create threat models anyways.<li><a href="https://threagile.io">Threagile</a> <a href="https://github.com/threagile"><i class="ph ph-github-logo"></i></a> - Open-source toolkit which enables teams to execute <a href="https://www.agilealliance.org/agile101/">Agile</a> threat modeling.<li><a href="https://cairis.org">Cairis</a> <a href="https://github.com/cairis-platform/cairis"><i class="ph ph-github-logo"></i></a><li><a href="https://www.iriusrisk.com/threat-modeling-platform">IriusRisk</a> (<em>commerical</em>)<li><a href="https://foreseeti.com/securicad-enterprise/">SecuriCAD</a> (<em>commerical</em>)<li><a href="https://www.tutamantic.com">Tutamantic</a> (<em>commerical</em>)<li><a href="https://threatcl.github.io">threatcl</a> - threat modeling configuration language with hcl<li><a href="https://threatsmanager.com">Threats Manager Studio</a><li><a href="https://github.com/threatspec/threatspec">threatspec</a><li>Diagrams-as-Code - <a href="https://c4model.com">C4 model</a>, <a href="https://mermaid.live/">Mermaid</a>, <a href="https://structurizr.com">Structurizr</a>, <a href="https://diagrams.mingrammer.com">Minigrammer</a>, <a href="https://plantuml.com">PlantUML</a><li><a href="https://forktm.com">FORK</a> - SaaS-based Risk-Centric PASTA Threat Modeling tool<li><strong>Attack Tree Tools</strong>: <a href="http://satoss.uni.lu/members/piotr/adtool/">ADTool</a>, <a href="https://github.com/yathuvaran/AT-AT">AT-AT</a>, <a href="https://github.com/jimmythompson/ent">Ent</a>, <a href="https://sourceforge.net/projects/seamonster/?source=navbar">SeaMonster</a>, <a href="https://www.isograph.com/software/attacktree/">AttackTree+</a>, <a href="https://www.amenaza.com/">SecuriTree</a>, <a href="https://risktree.2t-security.co.uk">RiskTree</a>, <a href="https://swagitda.com/blog/posts/deciduous-attack-tree-app/">Deciduous</a> <a href="https://swagitda.com/blog/posts/deciduous-attack-tree-app/"><i class="ph ph-file-text"></i></a><li><a href="https://illuminated-security.com/threat-modelling-workbook-2/">Threat Modelling Workbook</a></ul><p><strong>* Note</strong>: In future updates, I will post some hands-on walkthroughs / reviews / analysis of some of these tools. <em>Stay tuned!</em><h2 id="terminology">Terminology</h2><p>This sections lists some useful <em>terminology</em> used across this guide. <strong><a href="#references"><sup>6</sup></a></strong><sup>,</sup><strong><a href="#references"><sup>20</sup></a></strong><ul><li><strong>Abuse Case</strong> - Deliberate abuse of a use case in order to produce unintended results.<li><strong><a href="https://csrc.nist.gov/glossary/term/access_control_matrix">Access Control Matrix</a></strong> - A table in which each row represents a subject, each column represents an object, and each entry is the set of access rights for that subject to that object.<li><strong>Asset</strong> - Data, physical object or other resource of value.<li><strong>Attack</strong> - An action taken that utilizes one or more vulnerabilities to realize a threat (i.e <em>target</em> + <em>attack vector</em> + <em>threat actor</em>).<li><strong>Attack Graph</strong> - The set of all interconnected <em><a href="#attack-trees">attack trees</a></em> for a <em>system</em>.<li><strong>Attack Libraries</strong> - A library of known attacks (e.g. <a href="https://capec.mitre.org">CAPEC</a>).<li><strong>Attack Surface</strong> - Any logical or physical area that can be obtained, used or attacked by a <em>threat actor</em>.<li><strong><a href="#attack-trees">Attack Tree</a></strong> - A tree of <em>attacks</em>, rooted by a <em>threat</em>, comprised of all the ways that the threat can be realized.<li><strong>Attack Vector</strong> - Point and channel for which attacks travel.<li><strong>Control</strong> - A safeguard or countermeasure prescribed for an information system or an organization designed to protect the confidentiality, integrity, and availability of its information and to meet a set of defined security requirements.<li><strong>Countermeasure</strong> - See <em>Control</em>.<li><strong>Data Flow</strong> - A link between two processes or a process and a data store.<li><strong>Data Flow Diagram</strong> - Visually describes the processes, data stores and data flows of a system.<li><strong>Data Store</strong> - Any location where data is persisted in a system.<li><strong>Enchiridion</strong> - Latin for ‚Äúmanual‚Äù<li><strong>External Interactor</strong> - A process which is outside the scope of the system.<li><strong>Impact</strong> - Value / measure of damage sustained via an attack.<li><strong>Impetus Exemplar</strong> - Latin for ‚Äú<em>attack model / pattern</em>‚Äù<li><strong>Mitigation</strong> - Something which prevents or reduces the damage of an attack.<li><a href="https://owasp.org/www-community/Threat_Modeling">OWASP Threat Modeling</a> - Four-question framework from <a href="https://owasp.org">OWASP</a> which resembles the <a href="https://www.threatmodelingmanifesto.org">Threat Modeling Manifesto</a>.<li><strong>Process</strong> - Any location where work is done on data in a system.<li><strong><a href="https://www.lucidchart.com/pages/process-flow-diagrams">Process Flow Diagram</a></strong> - A type of flowchart that illustrates the relationships between major components.<li><strong>Risk</strong> - A measure of the extent to which an entity is threatened by a potential circumstance or event, and typically a function of: (i) the adverse impacts that would arise if the circumstance or event occurs; and (ii) the likelihood of occurrence.<li><strong>Security Requirements</strong> - Requirements levied on an information system that are derived from applicable laws, Executive Orders, directives, policies, standards, instructions, regulations, or procedures, or organizational mission/business case needs to ensure the confidentiality, integrity, and availability of the information being processed, stored, or transmitted.<li><strong>System</strong> - The entire application, as defined by the scope of the threat model or audit.<li><strong>Threat</strong> - A potential occurrence, malicious or otherwise, which might damage or compromise an asset. Also defined as the cross-section of attacker <em>intent</em>, <em>capability</em> and <em>opportunity</em>.<li><strong>Threat Actor</strong> - Adverse caller of use or abuse cases.<li><strong>Threat Model</strong> - See <a href="#intro-to-threat-modeling">intro to threat modeling</a>.<li><strong>Threat Tree</strong> - see <em>Attack Tree</em>.<li><strong><a href="https://www.synopsys.com/blogs/software-security/5-pillars-successful-threat-model/">Traceability Matrix</a></strong> - A traceability matrix examines a threat agent. <strong><a href="#references"><sup>10</sup></a></strong><li><strong>Trust Boundary</strong> - Encloses a region where all actions occur at the same level of privilege.<li><strong>Vulnerability</strong> - An unmitigated path of an <a href="#attack-trees">attack tree</a> from the root node (threat) to a leaf.<li><strong>Weakness</strong> - A security issue in a system.</ul><hr /><h1 id="references">References</h1><ul><li><strong><sup>1</sup></strong> <a href="https://www.threatmodelingmanifesto.org">Threat Modeling Manifesto</a><li><strong><sup>2</sup></strong> <a href="https://www.synopsys.com/glossary/what-is-threat-modeling.html">Threat Modeling | Synopsys</a><li><strong><sup>3</sup></strong> <a href="https://www.microsoft.com/en-us/securityengineering/sdl/threatmodeling">Microsoft Threat Modeling</a><li><strong><sup>4</sup></strong> <a href="https://docs.microsoft.com/en-us/archive/msdn-magazine/2006/november/uncover-security-design-flaws-using-the-stride-approach">STRIDE | Microsoft</a><li><strong><sup>5</sup></strong> <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/driversecurity/threat-modeling-for-drivers#the-dread-approach-to-threat-assessment">DREAD | Microsoft</a><li><strong><sup>6</sup></strong> <a href="https://owasp.org/www-pdf-archive/AppSecEU2012_PASTA.pdf">Real World Threat Modeling Using the PASTA Methodology | VerSprite</a><li><strong><sup>7</sup></strong> <a href="https://www.robertmlee.org/cyber-intelligence-part-5-cyber-threat-intelligence/">Cyber Intelligence Part 5: Cyber Threat Intelligence | Rob Lee</a><li><strong><sup>8</sup></strong> <a href="https://warnerchad.medium.com/diamond-model-for-cti-5aba5ba5585">Diamond Model in Cyber Threat Intelligence | Chad Warner</a><li><strong><sup>9</sup></strong> <a href="https://2017.appsec.eu/presos/CISO/Threat%20Modeling%20with%20PASTA%20-%20Risk%20Centric%20Application%20Threat%20Modeling%20Case%20Studies%20-%20Tony%20UcedaV√©lez%20-%20OWASP_AppSec-Eu_2017.pdf">Threat Modeling w/ PASTA: Risk Centric Threat Modeling Case Studies | OWASP AppSec EU Belfast</a><li><strong><sup>10</sup></strong> <a href="https://www.synopsys.com/blogs/software-security/5-pillars-successful-threat-model/">The 5 pillars of a successful threat model | Synopsys</a><li><strong><sup>11</sup></strong> <a href="https://www.schneier.com/academic/archives/1999/12/attack_trees.html">Attack Trees | Schneier on Security</a><li><strong><sup>12</sup></strong> <a href="https://www.amenaza.com/AT-whatAre.php">What are Attack Trees? | Amenaza</a><li><strong><sup>13</sup></strong> <a href="https://resources.sei.cmu.edu/asset_files/TechnicalReport/1999_005_001_16769.pdf">Operationally Critical Threat, Asset, and Vulnerability Evaluation (OCTAVE) Framework, Version 1.0</a><li><strong><sup>14</sup></strong> <a href="http://www.octotrike.org/papers/Trike_v1_Methodology_Document-draft.pdf">Trive v.1 Methodology Document [Draft]</a><li><strong><sup>15</sup></strong> <a href="https://www.linddun.org">LINDDUN: privacy engineering</a><li><strong><sup>16</sup></strong> <a href="https://www.linddun.org/linddun">LINDDUN framework</a><li><strong><sup>17</sup></strong> <a href="https://go.threatmodeler.com/threat-modeling-methodologies">Threat Modeling Methodologies | ThreatModeler</a><li><strong><sup>18</sup></strong> <a href="https://threatmodeler.com/operational-application-threat-modeling/">Application Threat Modeling vs Operational Threat Modeling | ThreatModeler</a><li><strong><sup>19</sup></strong> <a href="https://www.spiceworks.com/it-security/vulnerability-management/articles/top-threat-modeling-tools/">Top 10 Threat Modeling Tools in 2021</a><li><strong><sup>20</sup></strong> <a href="https://csrc.nist.gov/glossary/">NIST CSRC Glossary</a><li><strong><sup>21</sup></strong> <a href="https://csrc.nist.gov/publications/detail/sp/800-154/draft">NIST SP 800-154: Guide to Data-Centric System Threat Modeling</a> <a href="https://csrc.nist.gov/CSRC/media/Publications/sp/800-154/draft/documents/sp800_154_draft.pdf"><i class="ph ph-file-text"></i></a><li><strong><sup>22</sup></strong> <a href="https://owasp.org/www-community/Threat_Modeling_Process">Threat Modeling Process | OWASP</a><li><strong><sup>23</sup></strong> <a href="https://www.mitre.org/publications/technical-papers/threat-assessment-and-remediation-analysis-tara">Threat Assessment and Remediation Analysis (TARA) | MITRE</a><li><strong><sup>24</sup></strong> <a href="https://www.lockheedmartin.com/content/dam/lockheed-martin/rms/documents/cyber/LM-White-Paper-Threat-Driven-Approach.pdf">IDDIL/ATC | Lockheed Martin</a><li><strong><sup>25</sup></strong> <a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=516617">Hybrid Threat Modeling Method (hTMM) | SEI</a><li><strong><sup>26</sup></strong> <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.348.6943&amp;rep=rep1&amp;type=pdf">Privacy-by-Design Based on Quantitative Threat Modeling (QTMM)</a><li><strong><sup>27</sup></strong> <a href="http://securitycards.cs.washington.edu/index.html">The Security Cards</a><li><strong><sup>28</sup></strong> <a href="https://docs.microsoft.com/en-us/archive/blogs/david_leblanc/dreadful">DREADful | David LeBlanc</a><li><strong><sup>29</sup></strong> <a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6834694">How Well Do You Know Your Personae Non Gratae</a><li><strong><sup>30</sup></strong> <a href="https://www.rapid7.com/fundamentals/compliance-regulatory-frameworks/">Compliance and Regulatory Frameworks | Rapid7</a><li><strong><sup>31</sup></strong> <a href="https://www.itgovernanceusa.com/compliance">Governance and Regulatory Compliance</a><li><strong><sup>32</sup></strong> <a href="https://www.omadahealth.com/hubfs/nodirt.pdf">INCLUDES NO HEALTH | omada health</a><li><strong><sup>33</sup></strong> <a href="https://github.com/Autodesk/continuous-threat-modeling">Continuous Threat Modeling (CTM) | Autodesk</a><li><strong><sup>34</sup></strong> <a href="https://www.diva-portal.org/smash/get/diva2:1463788/FULLTEXT01.pdf">A Process for Threat Modeling of Large-Scale Computer Systems | KTH</a><li><strong><sup>35</sup></strong> <a href="https://versprite.com/blog/application-security/threat-modeling/organizational-threat-model-enterprise-risk-assessment/">OTM: Organizational Threat Model | VerSprite</a><li><p><strong><sup>36</sup></strong> <a href="http://www.pentest-standard.org/index.php/Threat_Modeling">Penetration Testing Execution Standard (PTES)</a><li><a href="https://github.com/hysnsec/awesome-threat-modelling">Awesome Threat Modeling | Github</a><li><a href="https://github.blog/2020-09-02-how-we-threat-model/">GitHub - How we threat model</a><li><a href="https://owasp.org/www-community/Threat_Modeling">Threat Modeling | OWASP</a><li><a href="https://insights.sei.cmu.edu/blog/threat-modeling-12-available-methods/">Threat Modeling: 12 Available Methods | Software Engineering Institute</a><li><a href="https://www.mitre.org/sites/default/files/publications/pr_18-1174-ngci-cyber-threat-modeling.pdf">Cyber Threat Modeling: Survey, Assessment, and Representative Framework | MITRE</a><li><a href="https://shostack.org/books/threat-modeling-book">Threat Modeling: Designing for Security</a><li><a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.103.2997&amp;rep=rep1&amp;type=pdf">SECURITY THREAT MODELING AND ANALYSIS: A GOAL-ORIENTED APPROACH</a><li><a href="https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=7657">Security Quality Requirements Engineering (SQUARE) Technical Report</a><li><a href="https://www.theseus.fi/bitstream/handle/10024/220967/Selin_Juuso.pdf?sequence=2">Evaluation of Threat Modeling Methodologies: A Case Study</a><li><a href="https://media10.connectedsocialmedia.com/intel/10/5725/Intel_IT_Business_Value_Prioritizing_Info_Security_Risks_with_TARA.pdf">Threat Agent Risk Assessment (TARA) | Intel</a><li><a href="https://www.ten-inc.com/presentations/invincea1.pdf">Invincea Threat Model</a> - An Adversary Model for Mastering Cyber-Defense Strategies<li><a href="https://simoneonsecurity.com">Simone On Security</a> - Threat Modeling-heavy blog resource<li><a href="https://simoneonsecurity.files.wordpress.com/2021/03/evolving-threat-modeling.pdf">Evolving Threat Modeling for Agility and Business Value</a><li><a href="https://www.researchgate.net/publication/233644703_Mission_Oriented_Risk_and_Design_Analysis_of_Critical_Information_Systems">MORDA: Mission Oriented Risk and Design Analysis of Critical Information Systems</a><li><a href="https://www.youtube.com/watch?v=N5icvgTyg7k">The B-MAD Approach to Threat Modeling</a><li><a href="https://segment.com/blog/redefining-threat-modeling/">Threat Modeling Redefined: The Self-Serve Threat Model | Segment (Utopia)</a><li><a href="https://shostack.org/files/essays/uncover/">Uncover Security Design Flaws Using the STRIDE Approach</a><li><a href="https://github.com/arnepadmos/threats/">Assorted threat modelling methods | arnepadmos</a><li><a href="https://www.threatmodelingconnect.com">Threat Modeling Connect</a></ul></div></article><hr class="fin"><div id="poststats" class="containbox" style="margin: auto;"> <span class="time"><i class="ph ph-calendar-dot"></i> Published: <span class="dt-published">July 30, 2022</span></span> <a class="u-url u-uid" href></a><br> <span class='time'><i class="ph ph-calendar-dot"></i> Updated: <span class="dt-updated">February 24, 2025</span></span><br/> <span class="categories"><i class="ph ph-tag"></i> Tags: <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=infosec">#infosec</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=threatmodeling">#threatmodeling</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=technical">#technical</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=bestof">#bestof</a></span> </span><br/> <span class="time"><i class="ph ph-pencil"></i> Word count: 17569</span> <span class="p-summary" style="display:none;">A vade mecum for all things Threat Modeling.</span><div style="color:var(--secondary-font-color);"> <i class="ph ph-broadcast"></i><span> Syndicated To:</span> <span style="padding:0px 3px 0px 3px;"><a href="https://www.linkedin.com/posts/activity-6959248180269957120-gcjT"><i class="ph ph-linkedin-logo" title="LinkedIn" style="font-size:1.25em;"></i></a></span></div></div><br/><div class="PageNavigation"> <a class="prev" style="margin-right: 2em;" href="/inbox-zero-part-2#title">&laquo; The Science of Inbox Zero</a><div style="float:right;"><a class="next" href="/cyber-clout#title" style="margin-right:0;">Boosting Your Cyber Clout &raquo;</a></div></div></main><aside class="container_item"></aside><footer class="container_item"> <center><span style="color:var(--light-font-color); font-size:.8em; font-style:italic; position:relative; top:25px;">Brought to you with <i class="ph-fill ph-heart-straight" style="color:var(--accent-color);"></i> by <a href="https://shellsharks.com/about">Shellsharks</a></span></center> <center> <img id="sharkfooter" src="/assets/img/sharks-circling.png" alt="Circling Sharks" style="width:150px;"></img> </center></footer></div><noscript><div class="panel" align="center" style="font-weight:bold;"><h1>Please enable JavaScript.</h1></div></noscript> <script src="/assets/js/themeswitcher.js"></script>
