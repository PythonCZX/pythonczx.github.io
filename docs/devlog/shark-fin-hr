<!DOCTYPE html><html lang="en" data-theme="classic"><head><title>Shark Fin &lt;hr&gt;</title><link rel="shortcut icon" href="/assets/img/favicon.ico"><link rel="alternate" type="application/rss+xml" title="All Content Feed" href="https://shellsharks.com/feeds/all-feed.xml"><link rel="alternate" type="application/rss+xml" title="Post Feed" href="https://shellsharks.com/feeds/feed.xml"><link rel="alternate" type="application/rss+xml" title="Scrolls Feed" href="https://shellsharks.com/feeds/scroll-feed.xml"><link rel="alternate" type="application/rss+xml" title="Infosec Feed" href="https://shellsharks.com/feeds/infosec-feed.xml"><link rel="alternate" type="application/rss+xml" title="Notes Feed" href="https://shellsharks.com/feeds/note-feed.xml"><link rel="alternate" type="application/rss+xml" title="Devlogs Feed" href="https://shellsharks.com/feeds/devlog-feed.xml"><link rel="alternate" type="application/rss+xml" title="Links Feed" href="https://shellsharks.com/feeds/link-feed.xml"><link rel="alternate" type="application/rss+xml" title="Captains Log Feed" href="https://shellsharks.com/feeds/log-feed.xml"><link rel="alternate" type="application/rss+xml" title="Social Web Feed" href="https://shellsharks.com/feeds/socialweb-feed.xml"><link rel="alternate" type="application/rss+xml" title="Life Feed" href="https://shellsharks.com/feeds/life-feed.xml"><link rel="blogroll" type="text/xml" href="https://shellsharks.com/assets/rsrc/shellsharks-blogroll.opml"><link type="text/plain" rel="author" href="https://shellsharks.com/humans.txt" /><link rel="canonical" href="https://shellsharks.com/devlog/shark-fin-hr"><link rel="apple-touch-icon" href="/assets/img/apple-touch-icon.png"><link rel="indieweb" href="/indieweb.txt" /><link href="https://github.com/shellsharks" rel="me"> <!--IndieAuth Provider--><link rel="authorization_endpoint" href="https://indieauth.com/auth"> <!--IndieAuth--><link rel="token_endpoint" href="https://tokens.indieauth.com/token"> <!--IndieAuth token endpoint--> <!--needed for button css--><link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous"><link href='/assets/css/style.css' rel='stylesheet' type='text/css'><link href="/assets/css/syntax.css" rel="stylesheet" ><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/regular/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/fill/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/bold/style.css" /><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1"><meta name="author" content="Michael Sass" /><meta name="description" content="How I created my Shark Fin horizontal rule" /><meta name="keywords" content="Shark Fin &lt;hr&gt;, shellsharks, devlog, css, shark, whimsy, technology" /><meta content="shellsharks" property="og:site_name" /><meta name="fediverse:creator" content="@shellsharks@shellsharks.social" /><meta name="robots" content="noai, noimageai, noml" /> <!--https://noml.info--> <script> const currentThemeX = localStorage.getItem('theme') ? localStorage.getItem('theme') : null; if (currentThemeX) { document.documentElement.setAttribute('data-theme', currentThemeX); } else if (matchMedia('(prefers-color-scheme: light)').matches) { localStorage.setItem('theme', "light"); } else if (matchMedia('(prefers-color-scheme: dark)').matches) { localStorage.setItem('theme', "classic"); } else { localStorage.setItem('theme', "classic"); } </script><meta content="Shark Fin &lt;hr&gt;" property="og:title"><meta content="article" property="og:type"><meta content="How I created my Shark Fin horizontal rule" property="og:description"><meta content="https://shellsharks.com/devlog/shark-fin-hr" property="og:url"><meta content="2025-02-20T09:51:00-05:00" property="article:published_time"><meta content="https://shellsharks.com/about/" property="article:author"><meta content="https://shellsharks-images.s3.us-east-1.amazonaws.com/devlog/2025/shark-fin-hr.png" property="og:image"><meta content="devlog" property="article:tag"><meta content="css" property="article:tag"><meta content="shark" property="article:tag"><meta content="whimsy" property="article:tag"><meta content="technology" property="article:tag"> <script src="/assets/js/finrand.js"></script><style> @media (max-width: 2048px) { main { width:66%; } } @media (max-width: 1800px) { main { max-width:800px; width:95%; } } @media (max-width: 768px) { main { width:95%; } }</style><body><div class="container"><heading class="container_item"><style> /* * Made by Erik Terwan * 24th of November 2015 * MIT License * * * If you are thinking of using this in * production code, beware of the browser * prefixes. */ #menuToggle { display: block; position: relative; z-index: 1; -webkit-user-select: none; user-select: none; } #menuToggle a { text-decoration: none; transition: color 0.3s ease; color: var(--contrast-font-color); } .menu_section { color: var(--light-font-color); font-weight: 900; } .menu_section:nth-of-type(n+2) { margin-top:20px; } #menuToggle a:hover { color: var(--link-hover-color); } #menuToggle input { display: block; width: 40px; height: 32px; position: absolute; /*top: -7px;*/ /*left: -5px;*/ cursor: pointer; opacity: 0; /* hide this */ z-index: 2; /* and place it over the hamburger */ -webkit-touch-callout: none; } /* * Just a quick hamburger */ #menuToggle span { display: block; width: 27px; height: 3px; margin-bottom: 4px; position: relative; margin-top:4px; background: var(--font-color); border-radius: 3px; z-index: 1; transform-origin: 4px 0px; transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0), background 0.5s cubic-bezier(0.77,0.2,0.05,1.0), opacity 0.55s ease; } #menuToggle span:first-child { transform-origin: 0% 0%; } #menuToggle span:nth-last-child(2) { transform-origin: 0% 100%; } /* * Transform all the slices of hamburger * into a crossmark. */ #menuToggle input:checked ~ span { opacity: 1; transform: rotate(45deg) translate(-2px, -1px); background: var(--link-hover-color); } /* * But let's hide the middle one. */ #menuToggle input:checked ~ span:nth-last-child(3) { opacity: 0; transform: rotate(0deg) scale(0.2, 0.2); } /* * Ohyeah and the last one should go the other direction */ #menuToggle input:checked ~ span:nth-last-child(2) { transform: rotate(-45deg) translate(0, -1px); } /* * Make this absolute positioned * at the top left of the screen */ #menu { position: absolute; left:-10px; width: 200px; /*fit-content;*/ padding: 10px; margin-top:10px; /*display:none;*/ background: var(--light-background-color); color:var(--font-color); list-style-type: none; -webkit-font-smoothing: antialiased; max-height: calc(80vh); overflow:auto; overscroll-behavior: contain; border-radius: 5px; /* to stop flickering of text in safari */ } /* * And let's slide it in from the left */ #menuToggle input:checked ~ ul { display:block; } .hidden { display: none; }</style><div role="navigation" id="hamburger"><div id="menuToggle"> <input type="checkbox" /> <span></span> <span></span> <span></span><ul id="menu" class="hidden"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a><li><img src="/assets/img/avatar.png" height="50" style="position: relative; display: block; margin:auto; margin-top:20px; margin-bottom:20px;" /></ul></div></div><!-- window.onload = function() { var menuButton = document.getElementById('menuToggle'); var menu = document.getElementById('menu'); menu.classList.add('hidden'); document.getElementById("menuToggle").children[0].checked = false; } --> <script> const menuButton = document.getElementById('menuToggle'); const menu = document.getElementById('menu'); var links = menu.querySelectorAll('a'); menuButton.addEventListener('click', () => { if (!menu.contains(event.target)) { menu.classList.toggle('hidden'); } }); document.addEventListener('click', (event) => { if (!menu.contains(event.target) && !menuButton.contains(event.target)) { menu.classList.add('hidden'); if (document.getElementById("menuToggle").children[0].checked) { document.getElementById("menuToggle").children[0].checked = !document.getElementById("menuToggle").children[0].checked; } } }); links.forEach(function(link) { link.addEventListener('click', function(event) { document.querySelector("#hamburger").click(); }); }); </script> <img id="title_image" src="/assets/img/shellsharks.gif" alt="Shellsharks>_" onclick='window.open("/","_self")'> <span style="float:right;"><a href="/search"><i class="ph-bold ph-magnifying-glass" style="color:var(--font-color); font-size:1.6em; top:-2px;"></i></a></span> </heading><nav class="container_item"><ul id="nav_menu" style="list-style-type:none;padding-left: 10px;"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a></ul></nav><main class="container_item"><div class="pageheader"></div><article class="post h-entry"><header class="post-header"><h1 class="post-title p-name" id="title" style="display:inline;">Shark Fin &lt;hr&gt;</h1><span style="color:#CA3342;font-size:4em;line-height: 20px;">.</span></header><!--<div id="postinfo"> <span class="time"><i class="ph ph-note-pencil"></i> by <span class="hov p-author h-card">Mike Sass</span> <a href="/about" rel="author"><img class="u-photo" src="https://shellsharks-images.s3.amazonaws.com/surfshark.png" style="display:inline; height:1em;" /></a></span><br/> <br/> <span class="categories"> &raquo; </span></div>--><div class="post-content e-content" style="margin-top: 30px;"><p>You may have noticed that I have a <em>bit</em> of a shark theme goin‚Äô on across the site. It‚Äôs not <em>overwhelmingly</em> shark-<i>ey</i>, but there‚Äôs certainly a shark or two sprinkled about - and I think that‚Äôs just <strong>fun</strong>. To this end, I had another fun li‚Äôl idea. What if I could change the usual boring ‚Äòol <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> tag (<a href="https://www.w3schools.com/tags/tag_hr.asp">horizontal rule</a>) and have a shark dorsal fin coming out of it? <em>Sounds cool right?</em> Right.<p>I had this <a href="/ideas">idea</a> months or even years ago, I filed it away for another day, thinking it too hard for me to accomplish myself. It would have to be something that I‚Äôd need to learn a lot of arcane HTML/CSS to do or maybe I‚Äôd just need to hire someone to make it for me. Yesterday, for whatever reason, I decided to try and take it on. I‚Äôm going to walk through a bit of my <a href="#trial-and-error">trial and error</a>, and then get into how I finally <a href="#shark-fin-hr">pulled it off</a>.<h2 id="trial-and-error">Trial and Error</h2><p><em>Let me tell you</em>, getting this to work probably took me 4-5 hours of just sittin‚Äô in my chair, hammering away. Though I can safely say I <em><a href="#future-improvements">mostly</a></em> figured out everything to get it to work, I also can say I figured out lots of ways it <em>doesn‚Äôt</em> work.<p>The way I thought this would work originally, and thus the way I approached it at first, was to use HTML‚Äôs <a href="https://www.w3schools.com/html/html5_canvas.asp">Canvas Graphics</a> to draw a shark fin <em>and</em> a line, and just use that instead of the normal <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> tags. Of course I know nothing about drawing with <code class="language-plaintext highlighter-rouge">&lt;canvas&gt;</code>, and I absolutely wasn‚Äôt going to try and learn it well enough to do it myself, so naturally I googled for an answer. It wasn‚Äôt long into this search that I realized maybe drawing with straight CSS would be a better option. So, I searched for that instead. Google came up pretty dry once again, but there was one <em>potential</em> <a href="https://alvaromontoro.com/blog/68021/drawing-a-shark-with-css">splash of luck</a>.<sup id="fnref:1"><a href="#fn:1" class="footnote" rel="footnote" role="doc-noteref">1</a></sup> Alvaro had managed to draw a (<em>adorably cute</em>) shark entirely with HTML and CSS. <em>Cool!</em> But could I use it somehow? I <em>cmd+C &amp; cmd+V‚Äôed</em> the code and tried ripping out stuff to get to just the fin. I figured if I could isolate the fin, I could tweak it a bit to be what I wanted. I was <em>wrong</em>. I gave up on that after like 10 min.<p><em>So now what?</em> I got a bit desperate, from there I tried‚Ä¶<ul><li>Searching for web tools that would convert drawings to CSS code<li>Searching for vector libraries<li>I even used ChatGPT to try and make it (here‚Äôs what it came up with - <em>sorry</em> I can‚Äôt get the <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox">viewBox</a> to behave)</ul><svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M50 150 C100 20, 180 80, 160 160 L50 160 Z" fill="#CA3342" /> </svg><p>Fresh off of humiliating myself by thinking AI could be useful, I came across some <em>actually</em> useful info. Basically, I learned that I could customize <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> tags with a character, <em>or image</em> using the <code class="language-plaintext highlighter-rouge">::after</code> <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::after">pseudo-element</a>.<sup id="fnref:2"><a href="#fn:2" class="footnote" rel="footnote" role="doc-noteref">2</a></sup> <em>Neat!</em>. This seemed like a more elegant solution. I could still use <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> tags, just with a class specifier rather than importing some janky inline-svg + html + css abomination each time I wanted the effect. So, like any seasoned developer, I borrowed the code from the <a href="https://stackoverflow.com/questions/14202089/custom-hr-with-image-character-in-the-center">stack overflow</a> page and started tweaking from there. But then I ran into my next issue, I needed an image to import! And not just any image, I needed something I could move along the <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> continuum, something I could size up and down, and something I could change the color of. First place I went to was <em><a href="https://en.wikipedia.org/wiki/SVG">.svg</a></em>.<p>I spent some time googling around for shark fin <em>.svgs</em> and came across a number of things that would work for me.<p><img src="/assets/img/sharkfin.svg" /> <img src="/assets/img/shark-fin-silhouette.svg" /> <img src="/assets/img/shark-fin-notch.svg" /><p>The xml syntax within an SVG file is kinda strange, and it took me a while to grok, but eventually I figured out how to change the fill color, resize it to my liking and generate a mirror image so that the shark fin can point both left and right.<p><img src="/assets/img/sharkfin-reverse.svg" /> <img src="/assets/img/shark-fin-silhouette-reverse.svg" /> <img src="/assets/img/shark-fin-notch-reverse.svg" /><p>So, let me give you the <a href="#shark-fin-hr">final result</a>‚Ä¶<h2 id="shark-fin-hr">Shark Fin &lt;hr&gt;</h2><p>Here‚Äôs how I finally put together my current v1.0 <b>Shark Fin &lt;hr&gt;</b><p>Within the SVG, you can resize by changing the ‚Äòwidth‚Äô property in the <code class="language-plaintext highlighter-rouge">&lt;svg&gt;</code> tag. You can change the fill color with the ‚Äòfill‚Äô property in the <code class="language-plaintext highlighter-rouge">&lt;path&gt;</code> tag. Finally, for mirroring the image across the Y-axis, you can add <code class="language-plaintext highlighter-rouge">transform="scale (-1, 1)" transform-origin="center"</code> to the <code class="language-plaintext highlighter-rouge">&lt;path&gt;</code> tag as well (as shown below). I also had to toy around with the <code class="language-plaintext highlighter-rouge">viewBox</code> to take out unneccessary white-space/padding.<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;svg</span> <span class="err">...</span> <span class="na">width=</span><span class="s">"35px"</span> <span class="na">viewBox=</span><span class="s">"0 0 1000 1000"</span> <span class="err">...</span><span class="nt">&gt;</span>
  <span class="nt">&lt;path</span> <span class="na">fill=</span><span class="s">"#CA3342"</span> <span class="na">transform=</span><span class="s">"scale (-1, 1)"</span> <span class="na">transform-origin=</span><span class="s">"center"</span> <span class="err">...</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</code></pre></div></div><p>My CSS for the ‚Äòfin‚Äô class‚Ä¶<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">:root</span> <span class="p">{</span>
  <span class="py">--hrfin-position</span><span class="p">:</span> <span class="m">40%</span><span class="p">;</span>
  <span class="py">--hrfin-content</span><span class="p">:</span> <span class="sx">url( '/assets/img/shark-fin-notch.svg' )</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">hr</span><span class="nc">.fin</span> <span class="p">{</span>
  <span class="nl">margin-top</span><span class="p">:</span> <span class="m">40px</span><span class="p">;</span> <span class="c">/* compensating for height of the fin */</span>
  <span class="nl">margin-bottom</span><span class="p">:</span> <span class="m">40px</span><span class="p">;</span> <span class="c">/* making the bottom margin the same as the top */</span>
  <span class="nl">border-top</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="n">var</span><span class="p">(</span><span class="n">--accent-color</span><span class="p">);</span> <span class="c">/* the color that I want the hr tag to be */</span>
  <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="n">var</span><span class="p">(</span><span class="n">--accent-color</span><span class="p">);</span>
<span class="p">}</span>
<span class="nt">hr</span><span class="nc">.fin</span><span class="nd">:after</span> <span class="p">{</span>
  <span class="nl">content</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--hrfin-content</span><span class="p">);</span> <span class="c">/* Loading the SVG url from :root */</span>
  <span class="nl">left</span><span class="p">:</span> <span class="n">var</span><span class="p">(</span><span class="n">--hrfin-position</span><span class="p">);</span> <span class="c">/* Setting the position of the fin along the rule */</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">bottom</span><span class="p">:</span><span class="m">29px</span><span class="p">;</span> <span class="c">/* Moves the fin closer to the line - it's 6px less than the svg width */</span>
<span class="p">}</span>
</code></pre></div></div><p>So why am I setting the ‚Äòleft‚Äô position and loading the svg from <code class="language-plaintext highlighter-rouge">:root</code> instead of directly? Well that‚Äôs because I wanted to randomize the fin‚Äôs position along the rule on page load. So I have some JavaScript that does this.<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">root</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">querySelector</span><span class="p">(</span><span class="dl">"</span><span class="s2">:root</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//grabbing the root element</span>
<span class="kd">var</span> <span class="nx">rand</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nf">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">90</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">fins</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">url( '/assets/img/shark-fin-notch.svg' )</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">url( '/assets/img/shark-fin-notch-reverse.svg' )</span><span class="dl">"</span><span class="p">]</span>
<span class="kd">var</span> <span class="nx">fins_rand</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nf">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nf">random</span><span class="p">());</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">fins</span><span class="p">[</span><span class="nx">fins_rand</span><span class="p">]);</span>
<span class="nx">root</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nf">setProperty</span><span class="p">(</span><span class="dl">"</span><span class="s2">--hrfin-position</span><span class="dl">"</span><span class="p">,</span> <span class="nx">rand</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">root</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nf">setProperty</span><span class="p">(</span><span class="dl">"</span><span class="s2">--hrfin-content</span><span class="dl">"</span><span class="p">,</span> <span class="nx">fins</span><span class="p">[</span><span class="nx">fins_rand</span><span class="p">]);</span>
</code></pre></div></div><p>So what do I get in the end? <strong>This!</strong> *<em>cue <a href="https://www.youtube.com/watch?v=BePfzCOMRZQ">the music</a></em>*<hr class="fin" /><p><em>OK</em>, this <u>rules</u>. Try reloading the page a few times and see it change positions and directionality. <em>Niiiiice!</em><p>What‚Äôs cool too is that even if I shorten the width of the rule, the shark will stay along it.<hr class="fin" width="50%" /><p>You can now call me the Poseidon (<em>or Aquaman</em>) of HTML, as I summon forth a shiver of <code class="language-plaintext highlighter-rouge">&lt;hr&gt;</code> sharks!<h3 id="future-improvements">Future Improvements</h3><p>But things aren‚Äôt <em>exactly</em> how I‚Äôd like to see them. There are some improvements to be made in future iterations. A wish list of things I‚Äôd like to see it do in the future‚Ä¶<ol><li>Given the way I am loading the SVG, I can‚Äôt dynamically change the color of the fin, it is statically set in the SVG itself. I‚Äôm fine with the compromise for now but would like to address this later.<li>The fin position (X-axis), set by the CSS ‚Äòleft‚Äô directive is the same for all fin-class <em>hrs</em> on the page. Notice how all of them on this page are at the same point on the line. It‚Äôd be cool to randomize the position for each instance of the rule on a single page.<li>I‚Äôm pretty happy with the shark fin SVG I‚Äôve landed on (Thanks <a href="https://www.creativefabrica.com/product/shark-fin-silhouette-svg-shark-fin-svg/">Creative Fabrica</a>!), but could see myself getting something a bit more customized in the future.<li>If I wanted to get crazy, maybe I‚Äôd have the fins animate in some way, like an actual shark swimmin‚Äô around the rules.<li>Another compromise was having to use JavaScript to randomize the svg file and position. Modern/supported versions of CSS don‚Äôt have any way to produce a <em>random</em> value. There are some <a href="https://css-tricks.com/random-numbers-css/">hacky ways</a> to achieve this, but I couldn‚Äôt figure them out. It‚Äôd be cool to have this not be .js-dependent in the future.<li><a href="https://ioc.exchange/@ApisNecros/114037149158829016">Suggested to me</a> was the idea to have the ‚Äòleft‚Äô position determined by scroll position, so the shark would look like it was swimming as one scrolled. Interesting idea!</ol><div class="footnotes" role="doc-endnotes"><ol><li id="fn:1"><p><a href="https://alvaromontoro.com/blog/68021/drawing-a-shark-with-css">Drawing kawaii sharks and sea life with HTML and CSS</a>¬†<a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a><li id="fn:2"><p><a href="https://stackoverflow.com/questions/14202089/custom-hr-with-image-character-in-the-center">Custom &lt;hr&gt; with image/character in the center | Stack Overflow</a>¬†<a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></ol></div></div></article><hr class="fin"><div id="poststats" class="containbox" style="margin: auto;"> <span class="time"><i class="ph ph-calendar-dot"></i> Published: <span class="dt-published">February 20, 2025</span></span> <a class="u-url u-uid" href></a><br> <span class='time'><i class="ph ph-calendar-dot"></i> Updated: <span class="dt-updated">February 20, 2025</span></span><br/> <span class="categories"><i class="ph ph-tag"></i> Tags: <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=devlog">#devlog</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=css">#css</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=shark">#shark</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=whimsy">#whimsy</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=technology">#technology</a></span> </span><br/> <span class="time"><i class="ph ph-pencil"></i> Word count: 1626</span> <span class="p-summary" style="display:none;">How I created my Shark Fin horizontal rule</span><div style="color:var(--secondary-font-color);"> <i class="ph ph-broadcast"></i><span> Syndicated To:</span> <span style="padding:0px 3px 0px 3px;"><a href="https://shellsharks.social/@shellsharks/114037056775331376"><i class="ph ph-mastodon-logo" title="Mastodon" style="font-size:1.25em;"></i></a></span></div></div><br/><div class="PageNavigation"> <a class="prev" style="margin-right: 2em;" href="/devlog/pagination-nation#title">&laquo; Pagination Nation</a><div style="float:right;"><a class="next" href="/devlog/build-then-smile#title" style="margin-right:0;">Build Then Smile &raquo;</a></div></div></main><aside class="container_item"></aside><footer class="container_item"> <center><span style="color:var(--light-font-color); font-size:.8em; font-style:italic; position:relative; top:25px;">Brought to you with <i class="ph-fill ph-heart-straight" style="color:var(--accent-color);"></i> by <a href="https://shellsharks.com/about">Shellsharks</a></span></center> <center> <img id="sharkfooter" src="/assets/img/sharks-circling.png" alt="Circling Sharks" style="width:150px;"></img> </center></footer></div><noscript><div class="panel" align="center" style="font-weight:bold;"><h1>Please enable JavaScript.</h1></div></noscript> <script src="/assets/js/themeswitcher.js"></script>
