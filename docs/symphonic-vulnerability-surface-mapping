<!DOCTYPE html><html lang="en" data-theme="classic"><head><title>Orchestrating Enterprise Vulnerability Triage</title><link rel="shortcut icon" href="/assets/img/favicon.ico"><link rel="alternate" type="application/rss+xml" title="All Content Feed" href="https://shellsharks.com/feeds/all-feed.xml"><link rel="alternate" type="application/rss+xml" title="Post Feed" href="https://shellsharks.com/feeds/feed.xml"><link rel="alternate" type="application/rss+xml" title="Scrolls Feed" href="https://shellsharks.com/feeds/scroll-feed.xml"><link rel="alternate" type="application/rss+xml" title="Infosec Feed" href="https://shellsharks.com/feeds/infosec-feed.xml"><link rel="alternate" type="application/rss+xml" title="Notes Feed" href="https://shellsharks.com/feeds/note-feed.xml"><link rel="alternate" type="application/rss+xml" title="Devlogs Feed" href="https://shellsharks.com/feeds/devlog-feed.xml"><link rel="alternate" type="application/rss+xml" title="Links Feed" href="https://shellsharks.com/feeds/link-feed.xml"><link rel="alternate" type="application/rss+xml" title="Captains Log Feed" href="https://shellsharks.com/feeds/log-feed.xml"><link rel="alternate" type="application/rss+xml" title="Social Web Feed" href="https://shellsharks.com/feeds/socialweb-feed.xml"><link rel="alternate" type="application/rss+xml" title="Life Feed" href="https://shellsharks.com/feeds/life-feed.xml"><link rel="blogroll" type="text/xml" href="https://shellsharks.com/assets/rsrc/shellsharks-blogroll.opml"><link type="text/plain" rel="author" href="https://shellsharks.com/humans.txt" /><link rel="canonical" href="https://shellsharks.com/symphonic-vulnerability-surface-mapping"><link rel="apple-touch-icon" href="/assets/img/apple-touch-icon.png"><link rel="indieweb" href="/indieweb.txt" /><link href="https://github.com/shellsharks" rel="me"> <!--IndieAuth Provider--><link rel="authorization_endpoint" href="https://indieauth.com/auth"> <!--IndieAuth--><link rel="token_endpoint" href="https://tokens.indieauth.com/token"> <!--IndieAuth token endpoint--> <!--needed for button css--><link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous"><link href='/assets/css/style.css' rel='stylesheet' type='text/css'><link href="/assets/css/syntax.css" rel="stylesheet" ><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/regular/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/fill/style.css" /><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/@phosphor-icons/web@2.1.1/src/bold/style.css" /><meta charset="utf-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1"><meta name="author" content="Michael Sass" /><meta name="description" content="A guide to Vulnerability Triage and an introduction to Symphonic Vulnerability Surface Mapping (SVSM) and Vulnscape." /><meta name="keywords" content="Orchestrating Enterprise Vulnerability Triage, shellsharks, infosec, foss, tools, python, dev, vm, svsm, vulnscape, blue, risk, technical" /><meta content="shellsharks" property="og:site_name" /><meta name="fediverse:creator" content="@shellsharks@shellsharks.social" /><meta name="robots" content="noai, noimageai, noml" /> <!--https://noml.info--> <script> const currentThemeX = localStorage.getItem('theme') ? localStorage.getItem('theme') : null; if (currentThemeX) { document.documentElement.setAttribute('data-theme', currentThemeX); } else if (matchMedia('(prefers-color-scheme: light)').matches) { localStorage.setItem('theme', "light"); } else if (matchMedia('(prefers-color-scheme: dark)').matches) { localStorage.setItem('theme', "classic"); } else { localStorage.setItem('theme', "classic"); } </script><meta content="Orchestrating Enterprise Vulnerability Triage" property="og:title"><meta content="article" property="og:type"><meta content="A guide to Vulnerability Triage and an introduction to Symphonic Vulnerability Surface Mapping (SVSM) and Vulnscape." property="og:description"><meta content="https://shellsharks.com/symphonic-vulnerability-surface-mapping" property="og:url"><meta content="2021-04-01T15:37:00-04:00" property="article:published_time"><meta content="https://shellsharks.com/about/" property="article:author"><meta content="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/svsm.png" property="og:image"><meta content="infosec" property="article:section"><meta content="infosec" property="article:tag"><meta content="foss" property="article:tag"><meta content="tools" property="article:tag"><meta content="python" property="article:tag"><meta content="dev" property="article:tag"><meta content="vm" property="article:tag"><meta content="svsm" property="article:tag"><meta content="vulnscape" property="article:tag"><meta content="blue" property="article:tag"><meta content="risk" property="article:tag"><meta content="technical" property="article:tag"> <script src="/assets/js/finrand.js"></script><style> @media (max-width: 2048px) { main { width:66%; } } @media (max-width: 1800px) { main { max-width:800px; width:95%; } } @media (max-width: 768px) { main { width:95%; } }</style><body><div class="container"><heading class="container_item"><style> /* * Made by Erik Terwan * 24th of November 2015 * MIT License * * * If you are thinking of using this in * production code, beware of the browser * prefixes. */ #menuToggle { display: block; position: relative; z-index: 1; -webkit-user-select: none; user-select: none; } #menuToggle a { text-decoration: none; transition: color 0.3s ease; color: var(--contrast-font-color); } .menu_section { color: var(--light-font-color); font-weight: 900; } .menu_section:nth-of-type(n+2) { margin-top:20px; } #menuToggle a:hover { color: var(--link-hover-color); } #menuToggle input { display: block; width: 40px; height: 32px; position: absolute; /*top: -7px;*/ /*left: -5px;*/ cursor: pointer; opacity: 0; /* hide this */ z-index: 2; /* and place it over the hamburger */ -webkit-touch-callout: none; } /* * Just a quick hamburger */ #menuToggle span { display: block; width: 27px; height: 3px; margin-bottom: 4px; position: relative; margin-top:4px; background: var(--font-color); border-radius: 3px; z-index: 1; transform-origin: 4px 0px; transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0), background 0.5s cubic-bezier(0.77,0.2,0.05,1.0), opacity 0.55s ease; } #menuToggle span:first-child { transform-origin: 0% 0%; } #menuToggle span:nth-last-child(2) { transform-origin: 0% 100%; } /* * Transform all the slices of hamburger * into a crossmark. */ #menuToggle input:checked ~ span { opacity: 1; transform: rotate(45deg) translate(-2px, -1px); background: var(--link-hover-color); } /* * But let's hide the middle one. */ #menuToggle input:checked ~ span:nth-last-child(3) { opacity: 0; transform: rotate(0deg) scale(0.2, 0.2); } /* * Ohyeah and the last one should go the other direction */ #menuToggle input:checked ~ span:nth-last-child(2) { transform: rotate(-45deg) translate(0, -1px); } /* * Make this absolute positioned * at the top left of the screen */ #menu { position: absolute; left:-10px; width: 200px; /*fit-content;*/ padding: 10px; margin-top:10px; /*display:none;*/ background: var(--light-background-color); color:var(--font-color); list-style-type: none; -webkit-font-smoothing: antialiased; max-height: calc(80vh); overflow:auto; overscroll-behavior: contain; border-radius: 5px; /* to stop flickering of text in safari */ } /* * And let's slide it in from the left */ #menuToggle input:checked ~ ul { display:block; } .hidden { display: none; }</style><div role="navigation" id="hamburger"><div id="menuToggle"> <input type="checkbox" /> <span></span> <span></span> <span></span><ul id="menu" class="hidden"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a><li><img src="/assets/img/avatar.png" height="50" style="position: relative; display: block; margin:auto; margin-top:20px; margin-bottom:20px;" /></ul></div></div><!-- window.onload = function() { var menuButton = document.getElementById('menuToggle'); var menu = document.getElementById('menu'); menu.classList.add('hidden'); document.getElementById("menuToggle").children[0].checked = false; } --> <script> const menuButton = document.getElementById('menuToggle'); const menu = document.getElementById('menu'); var links = menu.querySelectorAll('a'); menuButton.addEventListener('click', () => { if (!menu.contains(event.target)) { menu.classList.toggle('hidden'); } }); document.addEventListener('click', (event) => { if (!menu.contains(event.target) && !menuButton.contains(event.target)) { menu.classList.add('hidden'); if (document.getElementById("menuToggle").children[0].checked) { document.getElementById("menuToggle").children[0].checked = !document.getElementById("menuToggle").children[0].checked; } } }); links.forEach(function(link) { link.addEventListener('click', function(event) { document.querySelector("#hamburger").click(); }); }); </script> <img id="title_image" src="/assets/img/shellsharks.gif" alt="Shellsharks>_" onclick='window.open("/","_self")'> <span style="float:right;"><a href="/search"><i class="ph-bold ph-magnifying-glass" style="color:var(--font-color); font-size:1.6em; top:-2px;"></i></a></span> </heading><nav class="container_item"><ul id="nav_menu" style="list-style-type:none;padding-left: 10px;"><li class="menu_section">Main<li><a href="/home/feed" ><i class="ph ph-house"></i> Home Feed</a><li><a href="/about" ><i class="ph ph-identification-card"></i> About</a><li><a href="/feeds" ><i class="ph ph-rss"></i> Feeds</a><li><a href="/activity" ><i class="ph ph-pulse"></i> Activity</a><li><a href="https://shellsharks.social/@shellsharks" target="_blank"><i class="ph ph-mastodon-logo"></i> Mastodon</a><li><a href="mailto:mike@shellsharks.com" ><i class="ph ph-envelope"></i> Email</a><li><a href="https://ko-fi.com/shellsharks" ><i class="ph ph-coffee"></i> Buy me a Coffee</a><li id="themetoggler"><i class="ph ph-swatches" id="themetoggle"></i> Toggle theme<li class="menu_section">Site Nav<li><a href="/scrolls" ><i class="ph ph-scroll"></i> Scrolls Newsletter</a><li><a href="/podcast" ><i class="ph ph-microphone"></i> The Shellsharks Podcast</a><li><a href="/notebook" ><i class="ph ph-note"></i> Notebook</a><li><a href="/blogs" ><i class="ph ph-article"></i> Blogs</a><li><a href="/blogs/infosec" ><i class="ph ph-bug"></i> Infosec Blogs</a><li><a href="/captains-log" ><i class="ph-fill ph-notebook"></i> Captain's Log</a><li><a href="/devlog" ><i class="ph ph-code-block"></i> Devlog</a><li><a href="/linklog" ><i class="ph ph-link"></i> Linklog</a><li><a href="/blogroll" ><i class="ph ph-paint-roller"></i> Blogroll</a><li><a href="/fediverse" ><i class="ph ph-fediverse-logo"></i> Fediverse ‚ÅÇ</a><li><a href="/slashes" ><i class="ph ph-folder-simple-star"></i> Slashes</a><li><a href="/uses" ><i class="ph ph-hammer"></i> Uses</a><li><a href="/now" ><i class="ph ph-clock"></i> Now</a><li><a href="/tags" ><i class="ph ph-tag"></i> Tags</a><li><a href="/statboard" ><i class="ph ph-gauge"></i> Statboard</a><li><a href="/changelog" ><i class="ph ph-arrows-left-right"></i> Change Log</a><li><a href="/interests" ><i class="ph ph-heart"></i> Interests</a><li><a href="/ideas" ><i class="ph ph-lightbulb-filament"></i> Ideas</a><li><a href="/bookmarks" ><i class="ph ph-bookmarks"></i> Bookmarks</a><li><a href="/resume" ><i class="ph ph-read-cv-logo"></i> Resume</a><li><a href="/pro" ><i class="ph ph-seal"></i> Shellsharks Pro</a><li><a href="/sharkweek" ><i class="ph ph-calendar-heart"></i> >Shark Week</a><li><a href="/architecture" ><i class="ph ph-blueprint"></i> Architecture</a><li><a href="/roadmap" ><i class="ph ph-road-horizon"></i> Roadmap</a><li><a href="/tags?tag=bestof#info" ><i class="ph ph-star"></i> Best</a><li><a href="/projects" ><i class="ph ph-compass-tool"></i> Projects</a><li><a href="/now#supporting" ><i class="ph ph-hand-heart"></i> Supports</a><li><a href="/uses#referrals" ><i class="ph ph-hand-arrow-up"></i> Referrals</a><li><a href="/style" ><i class="ph ph-frame-corners"></i> Style</a><li><a href="/.well-known/security.txt" ><i class="ph ph-bug"></i> Report a Bug</a><li><a href="/humans.txt" ><i class="ph ph-user-rectangle"></i> Humans</a><li><a href="/disclaimer" ><i class="ph ph-info"></i> License & Disclaimer</a><li><a href="/privacy" ><i class="ph ph-cookie"></i> Privacy</a><li><a href="/starsharks" ><i class="ph ph-sparkle"></i> Starsharks</a><li><a href="/chipotle" ><i class="ph ph-pepper"></i> Chipotle</a><li><a href="/misc" ><i class="ph ph-paperclip"></i> Junk Drawer</a><li><a href="/ocean" ><i class="ph ph-waves"></i> the Ocean</a><li><a href="/void" ><i class="ph ph-spiral"></i> the Void</a><li class="menu_section">Other<li><a href="/public.pgp" ><i class="ph ph-key"></i> PGP Public Key</a><li><a href="https://infosec.pub/c/cybersecurity" target="_blank"><i class="ph ph-hamburger"></i> Infosec.Pub</a><li><a href="https://malici.ous.computer/@shellsharks" target="_blank"><i class="ph ph-linux-logo"></i> malici.ous.computer</a><li><a href="https://mastodon.social/@sass" target="_blank"><i class="ph-fill ph-mastodon-logo"></i> Mastodon.Social</a><li><a href="https://discord.gg/3rkHgtcYbb" target="_blank"><i class="ph ph-discord-logo"></i> Shellsharks Discord</a><li><a href="https://www.linkedin.com/in/mikesass" target="_blank"><i class="ph ph-linkedin-logo"></i> Linkedin</a><li><a href="/toots/infosec-exchange/shellsharks/" ><i class="ph ph-database"></i> Infosec.exchange Toot Archive</a><li><a href="https://github.com/shellsharks" target="_blank"><i class="ph ph-github-logo"></i> Github</a><li><a href="https://fediverse-webring-enthusiasts.glitch.me/profiles/shellsharks_infosec.exchange/index.html" target="_blank"><i class="ph ph-circle"></i> Webring Enthusiasts</a><li><a href="https://fedia.io/m/cybersecurity" target="_blank"><i class="ph ph-square-half"></i> Fedia.io</a></ul></nav><main class="container_item"><div class="pageheader"></div><article class="post h-entry"><header class="post-header"><h1 class="post-title p-name" id="title" style="display:inline;">Orchestrating Enterprise Vulnerability Triage</h1><span style="color:#CA3342;font-size:4em;line-height: 20px;">.</span></header><div class="primarycolor" style="font-style:italic; font-size:150%; font-weight:15px; position:relative;">A Framework for Automating Disparate Vulnerability Management Instruments</div><!--<div id="postinfo"> <span class="time"><i class="ph ph-note-pencil"></i> by <span class="hov p-author h-card">Mike Sass</span> <a href="/about" rel="author"><img class="u-photo" src="https://shellsharks-images.s3.amazonaws.com/surfshark.png" style="display:inline; height:1em;" /></a></span><br/> <br/> <span class="categories"> &raquo; infosec, blog </span></div>--><div class="post-content e-content" style="margin-top: 30px;"><p><strong>Vulnerability Triage</strong> is an essential component of any <a href="#a-primer-on-vulnerability-management">Vulnerability Management</a> (‚ÄúVM‚Äù) program. I define <a href="#vulnerability-triage-deep-dive">Vulnerability Triage</a> as <em>the process of identifying disclosed vulnerabilities, mapping the affected products within these vulnerability disclosures to an environment inventory and then ultimately making decisions on how to address these correlated findings through subsequent analysis and prioritization</em>. In other words, as new vulnerabilities are disclosed (i.e. as a <a href="https://cve.mitre.org">CVE</a> through <a href="https://nvd.nist.gov">NVD</a>), there is a process to determine if systems in an environment are potentially affected. If so, what is the risk and what should be done about it? A high level depiction of this process is illustrated below. *<em>The ‚ÄúDecision‚Äù diamond in this diagram represents how the findings are ultimately processed with respect to escalation, remediation and mitigation.</em><p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/vulntriagehighlevel.png" alt="vulntriagehighlevel" /><p>Every organization that has a VM program (and that really <em>should</em> be <strong>every</strong> organization) is doing some variation of this process. They may not explicitly call it ‚Äú<em>Vulnerability Triage</em>‚Äù, but they are doing it all the same. In my experience building and running VM programs over the years I have identified a number of commonalities, pitfalls, bottlenecks, high-friction areas and other points of interest related to this process of Vulnerablity Triage. The goal of this article is to describe in detail these findings, and how we can leverage <strong>orchestration</strong> to perform enterprise-grade vulnerability triage at scale while eliminating some of the common friction points and bottlenecks I have alluded to.<h2 id="jump-to-section">Jump to Section</h2><ul><li><a href="#a-primer-on-vulnerability-management">Vulnerability Management Primer</a><li><a href="#vulnerability-triage-deep-dive">Vulnerability Triage Deep-Dive</a><li><a href="#symphonic-vulnerability-surface-mapping">Symphonic Vulnerability Surface Mapping (SVSM)</a><li><a href="#vulnscape">SVSM Using Vulnscape</a></ul><hr /><h1 id="a-primer-on-vulnerability-management">A Primer on Vulnerability Management</h1><p>First, let‚Äôs quickly go over the concept of <strong>Vulnerability Management</strong> (a.k.a. ‚ÄúVM‚Äù). VM in a nutshell is the continuous process of <em>identifying</em>, <em>classifying</em>, <em>analyzing</em>, <em>prioritizing</em>, <em>reporting</em>, <em>remediating</em> and <em>mitigating</em> vulnerabilities. VM is ubiquitous in enterprise environments as it is fundamental to understanding (technical) risk across the information systems that comprise an IT organization. Without VM, gaps in protection (vulnerabilities) are not identified or not properly addressed which can lead to very real consequences such as exploitation, system compromise, data loss, compliance/regulatory violations and even full-scale breach of an organizations environment.<p>In fact, VM is so fundamental it comes in <a href="https://www.cisecurity.org/controls/">third place (as of version 7.1) in the CIS (Center for Internet Security) top 20 ‚ÄúCritical Security Controls‚Äù</a>. These 20 <a href="https://www.cisecurity.org">CIS</a> controls collectively represent a <strong>prioritized</strong> set of actions which have been established as best practices for mitigating a large majority of attacks against systems and networks. In essence, VM is pretty crucial to enterprise security, falling only behind <em>hardware/software inventory</em> with respect to priority. This dependency is further illustrated below.<p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/ciscontrols.png" alt="ciscontrols" /><p>Before moving on let‚Äôs quickly cover the aforementioned <em>inventory</em> prerequisite. <strong>CIS Control 1: Hardware Inventory</strong> and <strong>CIS Control 2: Software Inventory</strong> as precursory actions are paramount to achieving effective VM. Essentially, you can‚Äôt hope to <em>manage</em> vulnerabilities in an environment whereby you don‚Äôt have a complete understanding of all the software and hardware assets in that setting. The common saying being, <em>you can‚Äôt protect what you don‚Äôt know about</em>.<hr /><h1 id="vulnerability-triage-deep-dive">Vulnerability Triage Deep-Dive</h1><p>Alright, now that we have a basic understanding of <a href="#jump-to-section">vulnerability triage</a> and how it fits within the overarching <a href="#a-primer-on-vulnerability-management">Vulnerability Management</a> process, let‚Äôs take a closer look at the individual steps for triage. These steps are summarized as well as illustrated in the respective list and diagram below.<p><strong>Vulnerability Triage Process Steps</strong><ul><li><strong>Step 0</strong> ( <em>Pre-Triage</em> ): Build/maintain a comprehensive and accurate <a href="#asset-inventory">asset inventory</a><li><strong>Step 1</strong>: Ingest <a href="#vulnerability-intelligence">vulnerability data/intelligence</a><li><strong>Step 2</strong>: <a href="#correlating-vulnerability-intelligence-with-asset-inventory">Correlate vulnerability data with asset inventory</a><li><strong>Step 3</strong>: Leverage metadata from vulnerability/asset data sources to perform <a href="#risk-analysis">risk analysis</a><li><strong>Step 4</strong>: *<em><a href="#prioritization">Prioritize findings</a></em><li><strong>Step 5</strong> ( <em>Post-Triage</em> ): **<em><a href="#treatment">Treatment</a></em> <em>of findings</em></ul><p>*<em>More primitive implementations of vulnerability triage may not include the prioritization step. This can be considered an optional advanced element.</em><p>**<em>Vulnerability treatment(s) are not considered part of the vulnerability triage process. It is listed merely as a means to show it‚Äôs relationship to the other portions of the triage process.</em><p><strong>Vulnerability Triage Process Diagram</strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/vulntriageprocess.png" alt="Vuln Triage Steps" /><h4 id="vulnerability-triage-levels">Vulnerability Triage Levels</h4><p>The goal of <a href="#vulnerability-triage-deep-dive">vulnerability triage</a> is to make decisions on how a vulnerability should be <a href="#treamtents">treated</a>. Triage can involve a relatively quick analysis of whether a vulnerability is applicable to a specific environment all the way to full in-depth analysis of a particular vulnerability and how it affects specific systems. This scale from simple to thorough can be described using the levels detailed below. Each of the levels below can be considered ‚Äúvulnerability triage‚Äù, just at different depths.<ul><li><strong>Level 1</strong>: Answers the simple question, ‚Äú<em>Is there any exposure?</em>‚Äù. (i.e. are there vulnerabilities that affect products within an environment which do not have patches or controls which mitigate said vulnerability).<li><strong>Level 2</strong>: Does the vulnerability meet any <a href="#risk-criteria">criteria</a> that may result in the vulnerability being particularly high or critical risk? This involves taking a cursory glance at <a href="#vulnerability-intelligence">vulnerability</a> and <a href="#asset-inventory">asset</a> metadata.<li><strong>Level 3</strong>: Partial <a href="#risk-analysis">risk analysis</a>. Get a better understanding but not necessarily a full risk determination.<li><strong>Level 4</strong>: Complete <a href="#risk-analysis">risk analysis</a>. Get a complete understanding of risk to the environment.<li><strong>Level 5</strong>: Complete <a href="#risk-analysis">risk analysis</a> and <a href="#prioritization">prioritization</a>. Get not only a complete understanding of the risk to the environment but prioritize how that finding will be addressed in the context of other findings.</ul><p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/levels.png" alt="levels" /><p>Now that we have a high level picture of the vulnerability triage process and some of the ways it can be defined, let‚Äôs dive a little deeper into each step‚Ä¶<h2 id="asset-inventory">Asset Inventory</h2><p>Having an accurate, comprehensive, up-to-date inventory of all software and hardware in an environment is one of the most important components of <a href="#vulnerability-triage-deep-dive">Vulnerability Triage</a>. In the absence of a single-source of record or master inventory, you can leverage multiple disparate sources of inventory. Some examples of asset inventory sources are listed below.<p><strong>Inventory Sources</strong><ul><li>IT Asset Management tools (ITAM)<li>Configuration Management Databases (CMDB)<li>GRC platforms (e.g. <a href="https://www.rsa.com/de-de/products/integrated-risk-management/archer-platform">Archer</a>, <a href="https://www.servicenow.com">ServiceNow</a>, <a href="https://www.atlassian.com/software/jira/service-management/features/service-desk">Jira SD</a>, etc‚Ä¶)<li>Application Lifecycle Managment (ALM) tools<li>Cloud inventory tools (e.g. <a href="https://aws.amazon.com/systems-manager/">AWS Systems Manager</a>, <a href="https://aws.amazon.com/config/">AWS Config</a>, etc‚Ä¶)<li>Other (e.g. IPAM, scanning tools, etc‚Ä¶)</ul><p>Within these inventory sources, or as part of the master asset inventory, there is certain metadata we are interested in for <a href="#vulnerability-triage-deep-dive">vulnerability triage</a>. Some examples of information elements of interest are listed below. Ultimately, this data is used to answer two essential questions, <em>what is our high-level exposure</em>? and <em>what is the</em> <strong>risk</strong> <em>of any specific vulnerability as it applies to an affected system</em>?<p><strong>Inventory Metadata</strong><ul><li><strong>Vendor / product / version of software and hardware</strong><li><strong>Unique system identifier (e.g. IP, hostname, netbios, etc‚Ä¶)</strong><li>Ownership (e.g. business vertical, technical owner, etc‚Ä¶)<li>Data classification processed/stored by that system<li>Externality (e.g. external, internal, cloud, etc‚Ä¶)<li>Scope of affected systems<li>System to system relationships/affinities</ul><p>Having a single master inventory with all of the aforementioned data would certainly make the process of <a href="#vulnerability-triage-deep-dive">vuln triage</a> much easier. However, this information is not always readily available. In many organizations, there may be reliance on multiple inventory sources that collectively represent the entire environment. Or worse, there may be only a partial inventory or no real inventory at all! With respect to metadata, I suspect it is quite rare to have all the information detailed in the list above. The good news is however, as detailed in the section on <a href="#vulnerability-triage-levels">triage levels</a>, vulnerability triage does not require everything listed. At a minimum, we need only a decent inventory which includes basic <strong>product information</strong> ideally mapped to <strong>individual asset identifiers</strong>. This could at least get us to a level 1 triage. <em>Put differently</em>, if the inventory can tell us that product X exists on systems A, B and C, we are in good shape. With this, you can certainly make basic triage decisions. From there, the more <em>additional</em> information you have, the more detailed your analysis can be (achieving <a href="#vulnerability-triage-levels">higher level triage</a>) which in turn removes the added overhead required for manual <a href="#risk-analysis">analysis</a> and ultimately yields better <a href="#prioritization">prioritization</a> results.<h2 id="vulnerability-intelligence">Vulnerability Intelligence</h2><p><em>Alright!</em> Once we have a solid <a href="#asset-inventory">asset inventory</a>, we now need to collect information on known/disclosed vulnerabilities. I refer to this process of collecting vulnerability data and parsing the relevant metadata as <strong>Vulnerability Intelligence</strong>. There is a plethora of vulnerability data sources both open-source/free as-well-as commercial we can leverage. From these vulnerability sources, we need to collect certain bits of metadata which help with vuln-to-product <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlation</a> as well as <a href="#risk-analysis">risk analysis</a>. Below, I list a number of potential vulnerability data sources as well as some examples of important vulnerability metadata.<p><strong>Sources</strong><ul><li>Vulnerability feeds (e.g. <a href="https://nvd.nist.gov/vuln/data-feeds">NVD</a>, <a href="https://cve.mitre.org/cve/data_feeds.html">MITRE</a>, <a href="https://securitytracker.com">Security Tracker</a>, etc‚Ä¶)<li>VM vendor feeds (e.g. <a href="https://www.qualys.com/research/security-alerts/">Qualys</a>, <a href="https://www.qualys.com/research/security-alerts/">Tenable</a>, <a href="https://www.rapid7.com/db/">Rapid7</a>)<li>Security bulletins (e.g. <a href="https://us-cert.cisa.gov/ncas/bulletins">CISA</a>, <a href="https://aws.amazon.com/security/security-bulletins/?card-body.sort-by=item.additionalFields.bulletinDateSort&amp;card-body.sort-order=desc">AWS</a>, <a href="https://source.android.com/security/bulletin">Android</a>, <a href="https://docs.microsoft.com/en-us/security-updates/securitybulletins/securitybulletins">Microsoft</a>, <a href="https://www.oracle.com/security-alerts/">Oracle</a>, etc‚Ä¶)<li>Exploit databases (e.g. <a href="https://www.exploit-db.com">exploit-db</a>, <a href="https://vuldb.com/?doc.about">vuldb</a>, <a href="https://www.securityfocus.com">SecurityFocus</a>, <a href="https://packetstormsecurity.com/about/">packet storm</a>, <a href="https://vulners.com/search?query=!bulletinFamily:ioc%20order:published">vulners</a>, etc‚Ä¶)<li>Social media (e.g. <a href="https://twitter.com/">Twitter</a>, etc‚Ä¶)<li>RSS (e.g. <a href="https://blog.feedly.com/feedly-for-cybersecurity/">Feedly</a>, <a href="https://shellsharks.com/infosec-blogs#title">curated research sources</a>, etc‚Ä¶)<li>*Threat Intelligence sources<li>Consider support for the <a href="https://oasis-open.github.io/csaf-documentation/">Common Security Advisory Framework</a> (CSAF).<li>and more‚Ä¶</ul><p>*As a side note, I wanted to quickly cover the difference between the concept of ‚ÄúVulnerability Intelligence‚Äù and that of traditional <strong>Threat Intelligence</strong> (TI) (at least from my point of view). Where I delineate between the two is the idea that threat intel exists only where there are known (active) <em>threats</em> targeting an organization. Vulnerability intelligence on the other hand is where you have vulnerabilities which affect systems within an organizations environment. Together, where you have both a <em>threat</em> and a <em>vulnerability</em>, you have potential risk (the simple formula below represents this calculation). As you can (also) see via the image below, threat intel is typically a subset of vulnerability intel and is much smaller in volume. Finally, where you have known threats targeting vulnerabilities present in your environment you will likely need to invoke a <a href="#vulnerability-escalation">vulnerability escalation process</a>.<p><strong>THREAT</strong> * <strong>VULNERABILITY</strong> = <strong>RISK</strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/vulnthreatintel.png" alt="threatvsvulnintel" /><p><strong>Vulnerability Metadata</strong><ul><li>Affected vendor / product / version<li><a href="https://nvd.nist.gov/vuln-metrics/cvss">CVSS</a> Base metrics (e.g. vector, complexity, privileges, user interaction, impact)<li><a href="https://nvd.nist.gov/vuln-metrics/cvss">CVSS</a> Temporal metrics (e.g. exploit code maturity, remediation level, report confidence)<li>Evidence of active exploitation in the wild<li>Dwell-time (how long has the vulnerability been known)</ul><p>All together, there is no shortage of sources to retrieve vulnerability data from and a wealth of relevant metadata to collect from within these sources. In fact, it is best practice when performing <a href="#vulnerability-triage-deep-dive">vuln triage</a> / <a href="#risk-analysis">risk analysis</a> to reference a multitude of disparate sources to build the most complete picture of the true risk of a vulnerability. The more information you have, the more detailed you can be ( <a href="#vulnerability-triage-levels">higher vuln triage level</a> ) in that analysis and the higher fidelity your ultimate risk determination will be. With that said, you won‚Äôt always have a uniform/standardized view of a vulnerability and will need to make due with what is available. Similar to the inventory step, you need at a minimum the affected product (plus version) as well as <em>SOME</em> manner of vulnerability metadata. The more metadata you have, the more precise you can be in your risk determination.<h2 id="correlating-vulnerability-intelligence-with-asset-inventory">Correlating Vulnerability Intelligence with Asset Inventory</h2><p><strong>OK</strong>, so we have our <a href="#asset-inventory">asset inventory</a> and we have <a href="#vulnerability-intelligence">vulnerability intelligence</a> to pair with it. From here we perform simple correlation between the products known to exist in our environment and the known vulnerabilities which affect those products. This rudimentary process is illustrated below.<p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/correlation.png" alt="correlation" /><p>Typically, this correlation is performed through the process of <strong>Vulnerability Scanning</strong>. This article doesn‚Äôt seek to cover scanning in much depth but it will be explained with the detail required to understand it‚Äôs function within the <a href="#vulnerability-triage-deep-dive">vulnerability triage</a> process. In brief, vulnerability scanners are used to systematically detect and classify weaknesses on systems. Scanners perform this task in a variety of ways. By either authenticating directly then pulling a software inventory or by performing anonymous footprinting of a system, scanners can identify products and product versions across it‚Äôs scanned hosts. It then matches these identified products/versions using it‚Äôs own built in ‚Äúplugins‚Äù which correspond to known vulnerabilities that affect respective products/versions.<p><em>So if vulnerability scanners are already doing this correlation, what is the problem?</em><ul><li>Network vulnerability scanning tools rely on plugins provided by the scanner vendor to identify/correlate vulnerabilities. This means that if the vendor does not develop a plugin, a vulnerability may not be identified.<li>Plugins from the scanner vendors are not developed and released in real-time. This means there is some dwell-time between when a vulnerability is disclosed and when the vendor has developed a plugin available to identify it in an environment. This dwell-time means manual analysis may need to be performed for vulnerabilities which require immediate attention.<li>Scans of an environment are not performed real-time. Therefore, the data you are working with within the scan tool may be outdated when performing vulnerability triage correlation activities.<li>Scans are inherently <em>invasive</em>. This means there will be systems that can not be scanned or do not support scanning activities. In these cases, you will have a blind spot with traditional scan-based vuln triage.</ul><p>For the vast majority of vulnerabilities, the speed in which findings must be ‚Äútriaged‚Äù or otherwise analyzed for risk is completely satisfied by automated vulnerability scanning. In that world, high-risk findings are expected to be patched within some pre-set SLA timeframe, medium-risk findings have a different SLA and so on‚Ä¶ It is the edge-cases (typically potential critical-risk findings), where manual triage is invoked and in those situations, there are improvements to be made.<p>Take for example a <a href="https://shellsharks.com/designer-vulnerabilities#title">high-profile</a> vulnerability or a zero-day vulnerability that has been <a href="https://us-cert.cisa.gov/ncas/bulletins">announced by CISA in a bulletin</a>. Below are some example steps a security analyst/team might take in triaging this vulnerability.<ol><li><a href="https://www.cisa.gov">CISA</a> <a href="https://us-cert.cisa.gov/ncas/bulletins">announces a vulnerability</a> that exhibits a few <a href="#risk-criteria">high/critical risk characteristics</a>.<li>This disclosure is collected via a <a href="#vulnerability-intelligence">vulnerability intelligence</a> source (such as <a href="https://twitter.com">Twitter</a>).<li>A security analyst (or VM team) takes this disclosure/alert and begins <a href="#vulnerability-triage-deep-dive">vulnerability triage</a>.<li>The security analyst first checks to see what products/versions are affected by the disclosed vulnerability.<li>The analyst then reviews known <a href="#asset-inventory">inventory sources</a> (CMDB, scanners, etc..) to determine if the affected products exist within the organization‚Äôs environment.<li>If the product doesn‚Äôt exist in the environment, the issue is closed.<li>However if the affected product <em>does</em> exist in the environment, further analysis must be performed.<li>The analyst will want to determine whether the vulnerability meets the (or exhibits certain) <a href="#risk-criteria">criteria</a> for a critical (or maybe even high) risk finding.<li>If the vulnerability is definitely not high/critical in nature, this often means no further manual triage is necessary. The vulnerability will be addressed via the normal <a href="#a-primer-on-vulnerability-management">vulnerability management</a> process within the defined SLAs.<li>If however, the vulnerability <em>does</em> have certain high/critical-risk <a href="#risk-criteria">criteria</a>, it should be further analyzed to determine technical risk and whether emergency or accelerated actions must be taken.<li>The analyst performs a thorough <a href="#risk-analysis">risk analysis</a> of the finding based on any and all vulnerability metadata and metadata about the affected assets.<li>Where possible, the analyst will further enrich this risk determination based on known mitigating factors such as <a href="#security-control-plane-advanced-optional">technical controls</a> which may further reduce the residual risk.<li>Technical risk determination is then coupled with business context to come up with a final risk score.<li>Based on this residual risk value, a determination is made on how to <a href="#prioritization">prioritize</a> mitigation/remediation/patching/<a href="#treatment">risk treatments</a>.</ol><p><em>Phew!</em>. That is quite a process right? If used sparingly, it really isn‚Äôt <em>that</em> much work. But at scale, performing this series of steps manually can be a time consuming task. This means, where security staffing is limited and quick decision making is needed, traditional <a href="#vulnerability-triage-deep-dive">vulnerability triage</a> via scanning and manual analysis is not sufficient. <em>Enter a new method for vuln triage‚Ä¶</em><hr /><h1 id="symphonic-vulnerability-surface-mapping">Symphonic Vulnerability Surface Mapping</h1><p><strong>Symphonic Vulnerability Surface Mapping</strong> (‚Äú<em>SVSM</em>‚Äù) is a <em>new</em> approach to <a href="#vulnerability-triage-deep-dive">vulnerability triage</a> and attack surface mapping. The idea is to ingest vulnerabilities in real-time from a wide <a href="#vulnerability-intelligence">variety of sources</a>, <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlate</a> the vulnerability metadata (specifically affected product/version) with known <a href="#asset-inventory">inventory</a> (also in real-time) and then (optionally) <a href="#risk-analysis">calculate risk</a> and make <a href="#prioritization">prioritization</a> decisions based on a fully-automated (or semi-automated) <a href="#risk-analysis">analysis</a> engine. Let‚Äôs talk about how this can be done‚Ä¶<ol><li>Identify <a href="#vulnerability-intelligence">vulnerability intelligence</a> sources.<li>Build individual <strong>ingestors</strong> to extract normalized vulnerability metadata from different vulnerability data sources.<li>Leverage a metadata-parsing-engine (MPE) (<em>leveraging ML, keywords, etc..</em>) to facilitate extraction of relevant metadata from sources with non-standard formats.<li>Develop individual <strong>ingestors</strong> to populate <a href="#asset-inventory">asset inventory</a> and extract normalized asset metadata from unique inventory sources.<li>Perform basic <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlation</a> of vulnerability and asset inventory data to determine high-level applicability and exposure.<li>Store correlated data in a database.<li>*Leverage advanced <a href="#risk-analysis">risk analysis</a> engine (RAE) to perform automated risk analyses at scale.<li>*With risk scores in hand, deliver <a href="#prioritization">prioritized</a> plan for addressing vulnerabilities.</ol><p>*Steps 7 and 8 as described above are considered <a href="#vulnerability-triage-levels">more advanced/higher order</a> versions of your basic vulnerability triage process.<p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/svsm.png" alt="SVSM" /><p>Ultimately, this process provides real-time feedback on potential exposures, risk calculations related to these findings and context for making treatment decisions. It does this at a speed which can not be obtained using traditional manual triage and automated scanning processes.<h2 id="security-control-plane-advancedoptional">Security Control Plane (Advanced/Optional)</h2><p>The <strong>Security Control Plane</strong> is a means in which to provide further enrichment to the <a href="#risk-analysis">risk analysis</a> process. To fully understand the risk of any vulnerability as it applies to an affected system, one must also understand how the security controls in that environment help mitigate potential risks relevant to the vulnerability.<p>For example, if you have software that prevents execution of non-whitelisted binaries, then vulnerabilities which require execution of an untrusted binary may be rendered completely ineffective.<p>This understanding of security controls and how they effectively mitigate vulnerabilities can be applied to the risk analysis engine to better enrich residual risk determinations.<h2 id="svsm-faq">SVSM FAQ</h2><p><strong>So what make‚Äôs SVSM different?</strong><p>Real-time <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlation</a>, <a href="#risk-analysis">analysis</a> and <a href="#prioritization">prioritization</a> of vulnerabilities as they are disclosed across a multitude of vulnerability intelligence feeds. <strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> takes what has always been a manual or relatively slow process and turns it into something that is real-time, dynamic and fully automated.<p><strong>What‚Äôs the catch?</strong><p><strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> requires a <em>relatively</em> high-fidelity <a href="#asset-inventory">asset inventory</a>. This inventory must at a <em>minimum</em> include product/version information mapped to unique system identifiers.<p><strong>Why use multiple vulnerability intelligence sources?</strong><p>No one <a href="#vulnerability-intelligence">vulnerability intelligence</a> source has all relevant metadata needed to perform thorough <a href="#risk-analysis">risk analysis</a> of a vulnerability as it applies to an affected system. Often in the process of risk analysis multiple sources are used to ultimately derive the final risk score. By parsing/ingesting data from a variety of sources, we can augment single-source analysis and get the clearest picture of risk.<p><strong>What if I don‚Äôt have a lot of metadata?</strong><p><em>No problem!</em> <strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> is more than capable of performing <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlation</a>, <a href="#risk-analysis">risk analysis</a> and decision making even with low-fidelity metadata. This flexibility provides the ability to perform everything from simple triage (am I exposed?) all the way to fully automated attack-surface mapping and risk analysis with robust <a href="#prioritization">prioritization</a>.<p><strong>What‚Äôs with the name ‚ÄúSymphonic Vulnerability Surface Mapping‚Äù?</strong><p><strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> is a new take on an age-old process. It utilizes the benefits of automation and orchestration to solve the issues that have always plagued <a href="#vulnerability-triage-deep-dive">vulnerability triage</a>. <strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> is just my way of <em>marketing</em> this idea. The use of the term ‚Äúsymphonic‚Äù is a play on the established concept of ‚Äúorchestration‚Äù.<hr /><h1 id="risk-analysis">Risk Analysis</h1><p>In the context of <a href="#vulnerability-triage-deep-dive">vulnerability triage</a> and <strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong>, <strong><a href="#risk-analysis">manual risk analysis</a></strong> is the nut we are trying to crack. Performing triage at scale is undoubtedly cumbersome and risk analysis as a component of that process is certainly one of the worst offenders from an overhead perspective. <em>So how can we automate?</em> First, let‚Äôs understand what <a href="#risk-criteria">criteria</a> we are interested in when <a href="#risk-analysis">determining risk</a> and how we use that criteria to calculate risk.<h2 id="risk-criteria">Risk Criteria</h2><ul><li>Vulnerability disclosure date (When was the vulnerability first published?)<li>Vulnerability dwell-time (The length of time a vulnerability has been present on a system)<li>Patch publish date (When, if applicable, was the patch itself published?)<li>Does the vulnerability affect business-critical systems?<li>Does the vulnerability affect systems which store/process sensitive data?<li>System type (e.g. database, server, network device, workstation, etc‚Ä¶)<li>Scope (i.e. limited vs. widespread)<li>Externality (e.g. internal, external, segmented, etc‚Ä¶)<li>Mitigating Controls ( <a href="#security-control-plane-advanced-optional">Security Control Plane</a> )<li>CVSS Base score (vector, complexity, privileges required, user interaction)<li>CVSS Temporal score (exploit code availability, patch availability, confidence level)</ul><h2 id="risk-matrix">Risk Matrix</h2><p>So how is risk typically calculated in practice? A simple risk matrix as shown below is an easy way to <strong>qualitatively</strong> derive a risk determination. However, this matrix only considers <strong>likelihood</strong> (<em>probability</em>) and <strong>impact</strong> in a vacuum. What it does not take into account is <strong>business context</strong>. It is recommended to also understand the business context of a system when determining a final risk score.<p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/riskmatrix.png" alt="risk matrix" /><h2 id="vulnerability-escalation">Vulnerability Escalation</h2><p>As previously mentioned, not every vulnerability is worthy of manual triage. The overwhelming majority of vulnerabilities are expected to be addressed as a result of routine patching and standard prioritization sourced from typical vulnerability scanning activities. To determine which vulnerabilities ultimately require <a href="#risk-analysis">manual analysis</a>, we use an escalation process flow coupled with a number of defined escalation criteria. This flow as well as the criteria are provided in more detail below.<p><strong>Escalation Criteria</strong><ul><li>Zero-days<li><a href="https://shellsharks.com/designer-vulnerabilities#title">Named/publicized ‚Äúdesigner‚Äù vulnerabilities</a><li>Vulnerabilities that are being targeted by threat groups in an active campaign<li>Critical-severity vulnerabilities that affect external-facing or sensitive assets<li>Vulnerabilities that affect a wide scope of systems<li>Vulnerabilities affecting business-critical systems</ul><p>Vulnerabilities which have one or more of these characteristics are often candidates for further <a href="#risk-analysis">analysis</a> to determine if they require accelerated treatment. The vulnerability escalation process flow depicted below helps further illustrate this concept.<p><strong>Vulnerability Escalation Process Flow</strong><p><img src="https://shellsharks-images.s3.amazonaws.com/2021/vulnscape/escalationprocess.png" alt="escalation flow" /><h2 id="prioritization">Prioritization</h2><p>Presumably, if <a href="#risk-analysis">risk analysis</a> is thorough, prioritization is <em>mostly</em> a question of fixing the highest risk things first and then moving down the list. In reality however, there are a few additional factors that could further influence how vulnerabilities are ultimately prioritized post-analysis.<ol><li>Level-of-effort (LoE) to patch<li>Is there a patch, workaround or mitigating control available to further mitigate risk?<li>Can applying a single fix remediate multiple vulnerabilities (or entire classes of vulnerabilites) at once? If so, and for example, there could be one fix which applies to a large number of medium-risk findings which if resolved at scale would reduce <strong>more</strong> risk than applying a single fix for a single high-risk finding.</ol><h2 id="treatment">Treatment</h2><p>Though not really in scope for <a href="#vulnerability-triage-deep-dive">vulnerability triage</a>, I wanted to at least mention the final step, <strong>Vulnerability Treatment</strong>, as it is crucial to the overall process of <a href="#a-primer-on-vulnerability-management">vulnerability management</a>. It is within this step that vulnerabilities are reported, patched, resolved, mitigated, or otherwise addressed. <em>What could be more important!</em><hr /><h1 id="vulnscape">Vulnscape</h1><p><strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> as a concept is being brought to life through a new open-source tool dubbed <strong><a href="https://github.com/shellsharks/Vulnscape">Vulnscape</a></strong>! This tool is in <em>very early stages</em>, but over time, the goal is to develop the following as modular components‚Ä¶<ul><li>Vulnerability ingestors for the wide variety of potential <a href="#vulnerability-intelligence">vulnerability intelligence</a> sources<li>Asset inventory ingestors for the wide variety of enterprise <a href="#asset-inventory">asset inventory</a> sources<li>A <strong>Metadata Parsing Engine</strong> (MPE) that will be used to extract relevant vulnerability metadata from non-standard vulnerability data sources<li>An automated (or semi-automated) <strong><a href="#risk-analysis">Risk Analysis</a> Engine</strong> (RAE) capable of risk-based decision making at scale<li><a href="#prioritization">Prioritization</a> features</ul><p>With version 1.0, I aim to bring a limited set of inventory/vulnerability ingestors as well as a basic <a href="#correlating-vulnerability-intelligence-with-asset-inventory">correlation</a> capability (for high-level exposure notification). <strong>Stay tuned!</strong><h2 id="potential-applications">Potential Applications</h2><p><strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong> and <strong><a href="#vulnscape">Vulnscape</a></strong> have applications that I think extend beyond just simple-to-advanced <a href="#vulnerability-triage-deep-dive">vulnerability triage</a>. I see applications/integration opportunities in other domains as well. For example, it could be used in penetration testing activities related to ‚Äú<em><a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester">exploit suggesters</a></em>‚Äù. Imagine hooking an <strong>SVSM</strong> tool like <strong>Vulnscape</strong> up to an exploit framework solution like <a href="https://www.metasploit.com">Metasploit</a>. Using this, you could more accurately target endpoints with exploits most likely to be successful. This is but one example of how <strong>Vulnscape</strong> could be applied beyond just vulnerability triage!<h1 id="conclusion">Conclusion</h1><p>Thanks for taking the time to read! Feel free to <a href="/contact">contact me</a> if you are interested in learning more about <strong><a href="#symphonic-vulnerability-surface-mapping">SVSM</a></strong>, or would like be a part of the future of <strong><a href="#vulnscape">Vulnscape</a></strong>.</div></article><hr class="fin"><div id="poststats" class="containbox" style="margin: auto;"> <span class="time"><i class="ph ph-calendar-dot"></i> Published: <span class="dt-published">April 1, 2021</span></span> <a class="u-url u-uid" href></a><br> <span class='time'><i class="ph ph-calendar-dot"></i> Updated: <span class="dt-updated">December 19, 2022</span></span><br/> <span class="categories"><i class="ph ph-tag"></i> Tags: <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=infosec">#infosec</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=foss">#foss</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=tools">#tools</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=python">#python</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=dev">#dev</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=vm">#vm</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=svsm">#svsm</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=vulnscape">#vulnscape</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=blue">#blue</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=risk">#risk</a></span> <span class="primarybg" style="border-radius:15px;padding:0px 5px 0px 5px;"><a class="p-category" href="/tags?tag=technical">#technical</a></span> </span><br/> <span class="time"><i class="ph ph-pencil"></i> Word count: 4163</span> <span class="p-summary" style="display:none;">A guide to Vulnerability Triage and an introduction to Symphonic Vulnerability Surface Mapping (SVSM) and Vulnscape.</span></div><br/><div class="PageNavigation"> <a class="prev" style="margin-right: 2em;" href="/desk-setup-2021#title">&laquo; Desk Setup 2021</a><div style="float:right;"><a class="next" href="/htb-laboratory#title" style="margin-right:0;">HackTheBox: Laboratory &raquo;</a></div></div></main><aside class="container_item"></aside><footer class="container_item"> <center><span style="color:var(--light-font-color); font-size:.8em; font-style:italic; position:relative; top:25px;">Brought to you with <i class="ph-fill ph-heart-straight" style="color:var(--accent-color);"></i> by <a href="https://shellsharks.com/about">Shellsharks</a></span></center> <center> <img id="sharkfooter" src="/assets/img/sharks-circling.png" alt="Circling Sharks" style="width:150px;"></img> </center></footer></div><noscript><div class="panel" align="center" style="font-weight:bold;"><h1>Please enable JavaScript.</h1></div></noscript> <script src="/assets/js/themeswitcher.js"></script>
